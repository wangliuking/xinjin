// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: xh_rtu.proto

package protobuf;

public final class XhRtu {
  private XhRtu() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface HeartBeatINOrBuilder extends
      // @@protoc_insertion_point(interface_extends:demo.protobuf.HeartBeatIN)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *RTU ID
     * </pre>
     *
     * <code>required uint32 rtuid = 1;</code>
     */
    boolean hasRtuid();
    /**
     * <pre>
     *RTU ID
     * </pre>
     *
     * <code>required uint32 rtuid = 1;</code>
     */
    int getRtuid();

    /**
     * <pre>
     *RS485状态信息
     * </pre>
     *
     * <code>repeated .demo.protobuf.HeartBeatIN.RS485Status st = 2;</code>
     */
    java.util.List<HeartBeatIN.RS485Status>
        getStList();
    /**
     * <pre>
     *RS485状态信息
     * </pre>
     *
     * <code>repeated .demo.protobuf.HeartBeatIN.RS485Status st = 2;</code>
     */
    HeartBeatIN.RS485Status getSt(int index);
    /**
     * <pre>
     *RS485状态信息
     * </pre>
     *
     * <code>repeated .demo.protobuf.HeartBeatIN.RS485Status st = 2;</code>
     */
    int getStCount();
    /**
     * <pre>
     *RS485状态信息
     * </pre>
     *
     * <code>repeated .demo.protobuf.HeartBeatIN.RS485Status st = 2;</code>
     */
    java.util.List<? extends HeartBeatIN.RS485StatusOrBuilder>
        getStOrBuilderList();
    /**
     * <pre>
     *RS485状态信息
     * </pre>
     *
     * <code>repeated .demo.protobuf.HeartBeatIN.RS485Status st = 2;</code>
     */
    HeartBeatIN.RS485StatusOrBuilder getStOrBuilder(
            int index);
  }
  /**
   * <pre>
   *上行心跳[RTU到中心]
   * </pre>
   *
   * Protobuf type {@code demo.protobuf.HeartBeatIN}
   */
  public  static final class HeartBeatIN extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:demo.protobuf.HeartBeatIN)
      HeartBeatINOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use HeartBeatIN.newBuilder() to construct.
    private HeartBeatIN(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private HeartBeatIN() {
      rtuid_ = 0;
      st_ = java.util.Collections.emptyList();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private HeartBeatIN(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              rtuid_ = input.readUInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                st_ = new java.util.ArrayList<RS485Status>();
                mutable_bitField0_ |= 0x00000002;
              }
              st_.add(
                  input.readMessage(RS485Status.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          st_ = java.util.Collections.unmodifiableList(st_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return XhRtu.internal_static_demo_protobuf_HeartBeatIN_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return XhRtu.internal_static_demo_protobuf_HeartBeatIN_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              HeartBeatIN.class, Builder.class);
    }

    public interface RS485StatusOrBuilder extends
        // @@protoc_insertion_point(interface_extends:demo.protobuf.HeartBeatIN.RS485Status)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       *串口端口号[范围:1-10]
       * </pre>
       *
       * <code>required uint32 channo = 1;</code>
       */
      boolean hasChanno();
      /**
       * <pre>
       *串口端口号[范围:1-10]
       * </pre>
       *
       * <code>required uint32 channo = 1;</code>
       */
      int getChanno();

      /**
       * <pre>
       *设备id[范围:1-200		ETCR2900接触式地阻范围:详见如下] 
       * </pre>
       *
       * <code>required uint32 deviceid = 2;</code>
       */
      boolean hasDeviceid();
      /**
       * <pre>
       *设备id[范围:1-200		ETCR2900接触式地阻范围:详见如下] 
       * </pre>
       *
       * <code>required uint32 deviceid = 2;</code>
       */
      int getDeviceid();

      /**
       * <pre>
       *ETCR2900接触式地阻地阻测试可通过继电器切换来共用地阻测试仪器
       *故：地阻设备地址组成公式: (0000 0000)2进制 + (1到255) 2进制后4bit分别对于4个继电器[0-表示不启用继电器切换选择 1-表示启用继电器切换选择]，2进制位可多选
       * </pre>
       *
       * <code>required uint32 stnum = 3;</code>
       */
      boolean hasStnum();
      /**
       * <pre>
       *ETCR2900接触式地阻地阻测试可通过继电器切换来共用地阻测试仪器
       *故：地阻设备地址组成公式: (0000 0000)2进制 + (1到255) 2进制后4bit分别对于4个继电器[0-表示不启用继电器切换选择 1-表示启用继电器切换选择]，2进制位可多选
       * </pre>
       *
       * <code>required uint32 stnum = 3;</code>
       */
      int getStnum();
    }
    /**
     * <pre>
     *485端口状态
     * </pre>
     *
     * Protobuf type {@code demo.protobuf.HeartBeatIN.RS485Status}
     */
    public  static final class RS485Status extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:demo.protobuf.HeartBeatIN.RS485Status)
        RS485StatusOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use RS485Status.newBuilder() to construct.
      private RS485Status(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private RS485Status() {
        channo_ = 0;
        deviceid_ = 0;
        stnum_ = 0;
      }

      @Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private RS485Status(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                channo_ = input.readUInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                deviceid_ = input.readUInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                stnum_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return XhRtu.internal_static_demo_protobuf_HeartBeatIN_RS485Status_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return XhRtu.internal_static_demo_protobuf_HeartBeatIN_RS485Status_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                RS485Status.class, Builder.class);
      }

      private int bitField0_;
      public static final int CHANNO_FIELD_NUMBER = 1;
      private int channo_;
      /**
       * <pre>
       *串口端口号[范围:1-10]
       * </pre>
       *
       * <code>required uint32 channo = 1;</code>
       */
      public boolean hasChanno() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       *串口端口号[范围:1-10]
       * </pre>
       *
       * <code>required uint32 channo = 1;</code>
       */
      public int getChanno() {
        return channo_;
      }

      public static final int DEVICEID_FIELD_NUMBER = 2;
      private int deviceid_;
      /**
       * <pre>
       *设备id[范围:1-200		ETCR2900接触式地阻范围:详见如下] 
       * </pre>
       *
       * <code>required uint32 deviceid = 2;</code>
       */
      public boolean hasDeviceid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       *设备id[范围:1-200		ETCR2900接触式地阻范围:详见如下] 
       * </pre>
       *
       * <code>required uint32 deviceid = 2;</code>
       */
      public int getDeviceid() {
        return deviceid_;
      }

      public static final int STNUM_FIELD_NUMBER = 3;
      private int stnum_;
      /**
       * <pre>
       *ETCR2900接触式地阻地阻测试可通过继电器切换来共用地阻测试仪器
       *故：地阻设备地址组成公式: (0000 0000)2进制 + (1到255) 2进制后4bit分别对于4个继电器[0-表示不启用继电器切换选择 1-表示启用继电器切换选择]，2进制位可多选
       * </pre>
       *
       * <code>required uint32 stnum = 3;</code>
       */
      public boolean hasStnum() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       *ETCR2900接触式地阻地阻测试可通过继电器切换来共用地阻测试仪器
       *故：地阻设备地址组成公式: (0000 0000)2进制 + (1到255) 2进制后4bit分别对于4个继电器[0-表示不启用继电器切换选择 1-表示启用继电器切换选择]，2进制位可多选
       * </pre>
       *
       * <code>required uint32 stnum = 3;</code>
       */
      public int getStnum() {
        return stnum_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasChanno()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasDeviceid()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasStnum()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, channo_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(2, deviceid_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt32(3, stnum_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, channo_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, deviceid_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, stnum_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @Override
      public boolean equals(final Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof RS485Status)) {
          return super.equals(obj);
        }
        RS485Status other = (RS485Status) obj;

        boolean result = true;
        result = result && (hasChanno() == other.hasChanno());
        if (hasChanno()) {
          result = result && (getChanno()
              == other.getChanno());
        }
        result = result && (hasDeviceid() == other.hasDeviceid());
        if (hasDeviceid()) {
          result = result && (getDeviceid()
              == other.getDeviceid());
        }
        result = result && (hasStnum() == other.hasStnum());
        if (hasStnum()) {
          result = result && (getStnum()
              == other.getStnum());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasChanno()) {
          hash = (37 * hash) + CHANNO_FIELD_NUMBER;
          hash = (53 * hash) + getChanno();
        }
        if (hasDeviceid()) {
          hash = (37 * hash) + DEVICEID_FIELD_NUMBER;
          hash = (53 * hash) + getDeviceid();
        }
        if (hasStnum()) {
          hash = (37 * hash) + STNUM_FIELD_NUMBER;
          hash = (53 * hash) + getStnum();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static RS485Status parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static RS485Status parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static RS485Status parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static RS485Status parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static RS485Status parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static RS485Status parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static RS485Status parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static RS485Status parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static RS485Status parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static RS485Status parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static RS485Status parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static RS485Status parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(RS485Status prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @Override
      protected Builder newBuilderForType(
          BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       *485端口状态
       * </pre>
       *
       * Protobuf type {@code demo.protobuf.HeartBeatIN.RS485Status}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:demo.protobuf.HeartBeatIN.RS485Status)
          RS485StatusOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return XhRtu.internal_static_demo_protobuf_HeartBeatIN_RS485Status_descriptor;
        }

        protected FieldAccessorTable
            internalGetFieldAccessorTable() {
          return XhRtu.internal_static_demo_protobuf_HeartBeatIN_RS485Status_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  RS485Status.class, Builder.class);
        }

        // Construct using demo.protobuf.XhRtu.HeartBeatIN.RS485Status.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          channo_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          deviceid_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          stnum_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return XhRtu.internal_static_demo_protobuf_HeartBeatIN_RS485Status_descriptor;
        }

        public RS485Status getDefaultInstanceForType() {
          return RS485Status.getDefaultInstance();
        }

        public RS485Status build() {
          RS485Status result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public RS485Status buildPartial() {
          RS485Status result = new RS485Status(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.channo_ = channo_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.deviceid_ = deviceid_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.stnum_ = stnum_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof RS485Status) {
            return mergeFrom((RS485Status)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(RS485Status other) {
          if (other == RS485Status.getDefaultInstance()) return this;
          if (other.hasChanno()) {
            setChanno(other.getChanno());
          }
          if (other.hasDeviceid()) {
            setDeviceid(other.getDeviceid());
          }
          if (other.hasStnum()) {
            setStnum(other.getStnum());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          if (!hasChanno()) {
            return false;
          }
          if (!hasDeviceid()) {
            return false;
          }
          if (!hasStnum()) {
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          RS485Status parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (RS485Status) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int channo_ ;
        /**
         * <pre>
         *串口端口号[范围:1-10]
         * </pre>
         *
         * <code>required uint32 channo = 1;</code>
         */
        public boolean hasChanno() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <pre>
         *串口端口号[范围:1-10]
         * </pre>
         *
         * <code>required uint32 channo = 1;</code>
         */
        public int getChanno() {
          return channo_;
        }
        /**
         * <pre>
         *串口端口号[范围:1-10]
         * </pre>
         *
         * <code>required uint32 channo = 1;</code>
         */
        public Builder setChanno(int value) {
          bitField0_ |= 0x00000001;
          channo_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *串口端口号[范围:1-10]
         * </pre>
         *
         * <code>required uint32 channo = 1;</code>
         */
        public Builder clearChanno() {
          bitField0_ = (bitField0_ & ~0x00000001);
          channo_ = 0;
          onChanged();
          return this;
        }

        private int deviceid_ ;
        /**
         * <pre>
         *设备id[范围:1-200		ETCR2900接触式地阻范围:详见如下] 
         * </pre>
         *
         * <code>required uint32 deviceid = 2;</code>
         */
        public boolean hasDeviceid() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <pre>
         *设备id[范围:1-200		ETCR2900接触式地阻范围:详见如下] 
         * </pre>
         *
         * <code>required uint32 deviceid = 2;</code>
         */
        public int getDeviceid() {
          return deviceid_;
        }
        /**
         * <pre>
         *设备id[范围:1-200		ETCR2900接触式地阻范围:详见如下] 
         * </pre>
         *
         * <code>required uint32 deviceid = 2;</code>
         */
        public Builder setDeviceid(int value) {
          bitField0_ |= 0x00000002;
          deviceid_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *设备id[范围:1-200		ETCR2900接触式地阻范围:详见如下] 
         * </pre>
         *
         * <code>required uint32 deviceid = 2;</code>
         */
        public Builder clearDeviceid() {
          bitField0_ = (bitField0_ & ~0x00000002);
          deviceid_ = 0;
          onChanged();
          return this;
        }

        private int stnum_ ;
        /**
         * <pre>
         *ETCR2900接触式地阻地阻测试可通过继电器切换来共用地阻测试仪器
         *故：地阻设备地址组成公式: (0000 0000)2进制 + (1到255) 2进制后4bit分别对于4个继电器[0-表示不启用继电器切换选择 1-表示启用继电器切换选择]，2进制位可多选
         * </pre>
         *
         * <code>required uint32 stnum = 3;</code>
         */
        public boolean hasStnum() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <pre>
         *ETCR2900接触式地阻地阻测试可通过继电器切换来共用地阻测试仪器
         *故：地阻设备地址组成公式: (0000 0000)2进制 + (1到255) 2进制后4bit分别对于4个继电器[0-表示不启用继电器切换选择 1-表示启用继电器切换选择]，2进制位可多选
         * </pre>
         *
         * <code>required uint32 stnum = 3;</code>
         */
        public int getStnum() {
          return stnum_;
        }
        /**
         * <pre>
         *ETCR2900接触式地阻地阻测试可通过继电器切换来共用地阻测试仪器
         *故：地阻设备地址组成公式: (0000 0000)2进制 + (1到255) 2进制后4bit分别对于4个继电器[0-表示不启用继电器切换选择 1-表示启用继电器切换选择]，2进制位可多选
         * </pre>
         *
         * <code>required uint32 stnum = 3;</code>
         */
        public Builder setStnum(int value) {
          bitField0_ |= 0x00000004;
          stnum_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *ETCR2900接触式地阻地阻测试可通过继电器切换来共用地阻测试仪器
         *故：地阻设备地址组成公式: (0000 0000)2进制 + (1到255) 2进制后4bit分别对于4个继电器[0-表示不启用继电器切换选择 1-表示启用继电器切换选择]，2进制位可多选
         * </pre>
         *
         * <code>required uint32 stnum = 3;</code>
         */
        public Builder clearStnum() {
          bitField0_ = (bitField0_ & ~0x00000004);
          stnum_ = 0;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:demo.protobuf.HeartBeatIN.RS485Status)
      }

      // @@protoc_insertion_point(class_scope:demo.protobuf.HeartBeatIN.RS485Status)
      private static final RS485Status DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new RS485Status();
      }

      public static RS485Status getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @Deprecated public static final com.google.protobuf.Parser<RS485Status>
          PARSER = new com.google.protobuf.AbstractParser<RS485Status>() {
        public RS485Status parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new RS485Status(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<RS485Status> parser() {
        return PARSER;
      }

      @Override
      public com.google.protobuf.Parser<RS485Status> getParserForType() {
        return PARSER;
      }

      public RS485Status getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int RTUID_FIELD_NUMBER = 1;
    private int rtuid_;
    /**
     * <pre>
     *RTU ID
     * </pre>
     *
     * <code>required uint32 rtuid = 1;</code>
     */
    public boolean hasRtuid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *RTU ID
     * </pre>
     *
     * <code>required uint32 rtuid = 1;</code>
     */
    public int getRtuid() {
      return rtuid_;
    }

    public static final int ST_FIELD_NUMBER = 2;
    private java.util.List<RS485Status> st_;
    /**
     * <pre>
     *RS485状态信息
     * </pre>
     *
     * <code>repeated .demo.protobuf.HeartBeatIN.RS485Status st = 2;</code>
     */
    public java.util.List<RS485Status> getStList() {
      return st_;
    }
    /**
     * <pre>
     *RS485状态信息
     * </pre>
     *
     * <code>repeated .demo.protobuf.HeartBeatIN.RS485Status st = 2;</code>
     */
    public java.util.List<? extends RS485StatusOrBuilder>
        getStOrBuilderList() {
      return st_;
    }
    /**
     * <pre>
     *RS485状态信息
     * </pre>
     *
     * <code>repeated .demo.protobuf.HeartBeatIN.RS485Status st = 2;</code>
     */
    public int getStCount() {
      return st_.size();
    }
    /**
     * <pre>
     *RS485状态信息
     * </pre>
     *
     * <code>repeated .demo.protobuf.HeartBeatIN.RS485Status st = 2;</code>
     */
    public RS485Status getSt(int index) {
      return st_.get(index);
    }
    /**
     * <pre>
     *RS485状态信息
     * </pre>
     *
     * <code>repeated .demo.protobuf.HeartBeatIN.RS485Status st = 2;</code>
     */
    public RS485StatusOrBuilder getStOrBuilder(
        int index) {
      return st_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasRtuid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getStCount(); i++) {
        if (!getSt(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, rtuid_);
      }
      for (int i = 0; i < st_.size(); i++) {
        output.writeMessage(2, st_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, rtuid_);
      }
      for (int i = 0; i < st_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, st_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof HeartBeatIN)) {
        return super.equals(obj);
      }
      HeartBeatIN other = (HeartBeatIN) obj;

      boolean result = true;
      result = result && (hasRtuid() == other.hasRtuid());
      if (hasRtuid()) {
        result = result && (getRtuid()
            == other.getRtuid());
      }
      result = result && getStList()
          .equals(other.getStList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasRtuid()) {
        hash = (37 * hash) + RTUID_FIELD_NUMBER;
        hash = (53 * hash) + getRtuid();
      }
      if (getStCount() > 0) {
        hash = (37 * hash) + ST_FIELD_NUMBER;
        hash = (53 * hash) + getStList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static HeartBeatIN parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static HeartBeatIN parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static HeartBeatIN parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static HeartBeatIN parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static HeartBeatIN parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static HeartBeatIN parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static HeartBeatIN parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static HeartBeatIN parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static HeartBeatIN parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static HeartBeatIN parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static HeartBeatIN parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static HeartBeatIN parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(HeartBeatIN prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *上行心跳[RTU到中心]
     * </pre>
     *
     * Protobuf type {@code demo.protobuf.HeartBeatIN}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:demo.protobuf.HeartBeatIN)
        HeartBeatINOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return XhRtu.internal_static_demo_protobuf_HeartBeatIN_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return XhRtu.internal_static_demo_protobuf_HeartBeatIN_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                HeartBeatIN.class, Builder.class);
      }

      // Construct using demo.protobuf.XhRtu.HeartBeatIN.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getStFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        rtuid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (stBuilder_ == null) {
          st_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          stBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return XhRtu.internal_static_demo_protobuf_HeartBeatIN_descriptor;
      }

      public HeartBeatIN getDefaultInstanceForType() {
        return HeartBeatIN.getDefaultInstance();
      }

      public HeartBeatIN build() {
        HeartBeatIN result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public HeartBeatIN buildPartial() {
        HeartBeatIN result = new HeartBeatIN(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.rtuid_ = rtuid_;
        if (stBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            st_ = java.util.Collections.unmodifiableList(st_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.st_ = st_;
        } else {
          result.st_ = stBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof HeartBeatIN) {
          return mergeFrom((HeartBeatIN)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(HeartBeatIN other) {
        if (other == HeartBeatIN.getDefaultInstance()) return this;
        if (other.hasRtuid()) {
          setRtuid(other.getRtuid());
        }
        if (stBuilder_ == null) {
          if (!other.st_.isEmpty()) {
            if (st_.isEmpty()) {
              st_ = other.st_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureStIsMutable();
              st_.addAll(other.st_);
            }
            onChanged();
          }
        } else {
          if (!other.st_.isEmpty()) {
            if (stBuilder_.isEmpty()) {
              stBuilder_.dispose();
              stBuilder_ = null;
              st_ = other.st_;
              bitField0_ = (bitField0_ & ~0x00000002);
              stBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getStFieldBuilder() : null;
            } else {
              stBuilder_.addAllMessages(other.st_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRtuid()) {
          return false;
        }
        for (int i = 0; i < getStCount(); i++) {
          if (!getSt(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        HeartBeatIN parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (HeartBeatIN) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int rtuid_ ;
      /**
       * <pre>
       *RTU ID
       * </pre>
       *
       * <code>required uint32 rtuid = 1;</code>
       */
      public boolean hasRtuid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       *RTU ID
       * </pre>
       *
       * <code>required uint32 rtuid = 1;</code>
       */
      public int getRtuid() {
        return rtuid_;
      }
      /**
       * <pre>
       *RTU ID
       * </pre>
       *
       * <code>required uint32 rtuid = 1;</code>
       */
      public Builder setRtuid(int value) {
        bitField0_ |= 0x00000001;
        rtuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *RTU ID
       * </pre>
       *
       * <code>required uint32 rtuid = 1;</code>
       */
      public Builder clearRtuid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        rtuid_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<RS485Status> st_ =
        java.util.Collections.emptyList();
      private void ensureStIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          st_ = new java.util.ArrayList<RS485Status>(st_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          RS485Status, RS485Status.Builder, RS485StatusOrBuilder> stBuilder_;

      /**
       * <pre>
       *RS485状态信息
       * </pre>
       *
       * <code>repeated .demo.protobuf.HeartBeatIN.RS485Status st = 2;</code>
       */
      public java.util.List<RS485Status> getStList() {
        if (stBuilder_ == null) {
          return java.util.Collections.unmodifiableList(st_);
        } else {
          return stBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *RS485状态信息
       * </pre>
       *
       * <code>repeated .demo.protobuf.HeartBeatIN.RS485Status st = 2;</code>
       */
      public int getStCount() {
        if (stBuilder_ == null) {
          return st_.size();
        } else {
          return stBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *RS485状态信息
       * </pre>
       *
       * <code>repeated .demo.protobuf.HeartBeatIN.RS485Status st = 2;</code>
       */
      public RS485Status getSt(int index) {
        if (stBuilder_ == null) {
          return st_.get(index);
        } else {
          return stBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *RS485状态信息
       * </pre>
       *
       * <code>repeated .demo.protobuf.HeartBeatIN.RS485Status st = 2;</code>
       */
      public Builder setSt(
          int index, RS485Status value) {
        if (stBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStIsMutable();
          st_.set(index, value);
          onChanged();
        } else {
          stBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *RS485状态信息
       * </pre>
       *
       * <code>repeated .demo.protobuf.HeartBeatIN.RS485Status st = 2;</code>
       */
      public Builder setSt(
          int index, RS485Status.Builder builderForValue) {
        if (stBuilder_ == null) {
          ensureStIsMutable();
          st_.set(index, builderForValue.build());
          onChanged();
        } else {
          stBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *RS485状态信息
       * </pre>
       *
       * <code>repeated .demo.protobuf.HeartBeatIN.RS485Status st = 2;</code>
       */
      public Builder addSt(RS485Status value) {
        if (stBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStIsMutable();
          st_.add(value);
          onChanged();
        } else {
          stBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *RS485状态信息
       * </pre>
       *
       * <code>repeated .demo.protobuf.HeartBeatIN.RS485Status st = 2;</code>
       */
      public Builder addSt(
          int index, RS485Status value) {
        if (stBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStIsMutable();
          st_.add(index, value);
          onChanged();
        } else {
          stBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *RS485状态信息
       * </pre>
       *
       * <code>repeated .demo.protobuf.HeartBeatIN.RS485Status st = 2;</code>
       */
      public Builder addSt(
          RS485Status.Builder builderForValue) {
        if (stBuilder_ == null) {
          ensureStIsMutable();
          st_.add(builderForValue.build());
          onChanged();
        } else {
          stBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *RS485状态信息
       * </pre>
       *
       * <code>repeated .demo.protobuf.HeartBeatIN.RS485Status st = 2;</code>
       */
      public Builder addSt(
          int index, RS485Status.Builder builderForValue) {
        if (stBuilder_ == null) {
          ensureStIsMutable();
          st_.add(index, builderForValue.build());
          onChanged();
        } else {
          stBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *RS485状态信息
       * </pre>
       *
       * <code>repeated .demo.protobuf.HeartBeatIN.RS485Status st = 2;</code>
       */
      public Builder addAllSt(
          Iterable<? extends RS485Status> values) {
        if (stBuilder_ == null) {
          ensureStIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, st_);
          onChanged();
        } else {
          stBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *RS485状态信息
       * </pre>
       *
       * <code>repeated .demo.protobuf.HeartBeatIN.RS485Status st = 2;</code>
       */
      public Builder clearSt() {
        if (stBuilder_ == null) {
          st_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          stBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *RS485状态信息
       * </pre>
       *
       * <code>repeated .demo.protobuf.HeartBeatIN.RS485Status st = 2;</code>
       */
      public Builder removeSt(int index) {
        if (stBuilder_ == null) {
          ensureStIsMutable();
          st_.remove(index);
          onChanged();
        } else {
          stBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *RS485状态信息
       * </pre>
       *
       * <code>repeated .demo.protobuf.HeartBeatIN.RS485Status st = 2;</code>
       */
      public RS485Status.Builder getStBuilder(
          int index) {
        return getStFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *RS485状态信息
       * </pre>
       *
       * <code>repeated .demo.protobuf.HeartBeatIN.RS485Status st = 2;</code>
       */
      public RS485StatusOrBuilder getStOrBuilder(
          int index) {
        if (stBuilder_ == null) {
          return st_.get(index);  } else {
          return stBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *RS485状态信息
       * </pre>
       *
       * <code>repeated .demo.protobuf.HeartBeatIN.RS485Status st = 2;</code>
       */
      public java.util.List<? extends RS485StatusOrBuilder>
           getStOrBuilderList() {
        if (stBuilder_ != null) {
          return stBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(st_);
        }
      }
      /**
       * <pre>
       *RS485状态信息
       * </pre>
       *
       * <code>repeated .demo.protobuf.HeartBeatIN.RS485Status st = 2;</code>
       */
      public RS485Status.Builder addStBuilder() {
        return getStFieldBuilder().addBuilder(
            RS485Status.getDefaultInstance());
      }
      /**
       * <pre>
       *RS485状态信息
       * </pre>
       *
       * <code>repeated .demo.protobuf.HeartBeatIN.RS485Status st = 2;</code>
       */
      public RS485Status.Builder addStBuilder(
          int index) {
        return getStFieldBuilder().addBuilder(
            index, RS485Status.getDefaultInstance());
      }
      /**
       * <pre>
       *RS485状态信息
       * </pre>
       *
       * <code>repeated .demo.protobuf.HeartBeatIN.RS485Status st = 2;</code>
       */
      public java.util.List<RS485Status.Builder>
           getStBuilderList() {
        return getStFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          RS485Status, RS485Status.Builder, RS485StatusOrBuilder>
          getStFieldBuilder() {
        if (stBuilder_ == null) {
          stBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              RS485Status, RS485Status.Builder, RS485StatusOrBuilder>(
                  st_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          st_ = null;
        }
        return stBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:demo.protobuf.HeartBeatIN)
    }

    // @@protoc_insertion_point(class_scope:demo.protobuf.HeartBeatIN)
    private static final HeartBeatIN DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new HeartBeatIN();
    }

    public static HeartBeatIN getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @Deprecated public static final com.google.protobuf.Parser<HeartBeatIN>
        PARSER = new com.google.protobuf.AbstractParser<HeartBeatIN>() {
      public HeartBeatIN parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HeartBeatIN(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<HeartBeatIN> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<HeartBeatIN> getParserForType() {
      return PARSER;
    }

    public HeartBeatIN getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface HeartBeatOUTOrBuilder extends
      // @@protoc_insertion_point(interface_extends:demo.protobuf.HeartBeatOUT)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *RTU ID
     * </pre>
     *
     * <code>required uint32 rtuid = 1;</code>
     */
    boolean hasRtuid();
    /**
     * <pre>
     *RTU ID
     * </pre>
     *
     * <code>required uint32 rtuid = 1;</code>
     */
    int getRtuid();

    /**
     * <pre>
     *中心系统时间 [格式:2018-01-02 11:10:50]
     * </pre>
     *
     * <code>required string datetime = 2;</code>
     */
    boolean hasDatetime();
    /**
     * <pre>
     *中心系统时间 [格式:2018-01-02 11:10:50]
     * </pre>
     *
     * <code>required string datetime = 2;</code>
     */
    String getDatetime();
    /**
     * <pre>
     *中心系统时间 [格式:2018-01-02 11:10:50]
     * </pre>
     *
     * <code>required string datetime = 2;</code>
     */
    com.google.protobuf.ByteString
        getDatetimeBytes();
  }
  /**
   * <pre>
   *下行心跳[中心到RTU]
   * </pre>
   *
   * Protobuf type {@code demo.protobuf.HeartBeatOUT}
   */
  public  static final class HeartBeatOUT extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:demo.protobuf.HeartBeatOUT)
      HeartBeatOUTOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use HeartBeatOUT.newBuilder() to construct.
    private HeartBeatOUT(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private HeartBeatOUT() {
      rtuid_ = 0;
      datetime_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private HeartBeatOUT(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              rtuid_ = input.readUInt32();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              datetime_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return XhRtu.internal_static_demo_protobuf_HeartBeatOUT_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return XhRtu.internal_static_demo_protobuf_HeartBeatOUT_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              HeartBeatOUT.class, Builder.class);
    }

    private int bitField0_;
    public static final int RTUID_FIELD_NUMBER = 1;
    private int rtuid_;
    /**
     * <pre>
     *RTU ID
     * </pre>
     *
     * <code>required uint32 rtuid = 1;</code>
     */
    public boolean hasRtuid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *RTU ID
     * </pre>
     *
     * <code>required uint32 rtuid = 1;</code>
     */
    public int getRtuid() {
      return rtuid_;
    }

    public static final int DATETIME_FIELD_NUMBER = 2;
    private volatile Object datetime_;
    /**
     * <pre>
     *中心系统时间 [格式:2018-01-02 11:10:50]
     * </pre>
     *
     * <code>required string datetime = 2;</code>
     */
    public boolean hasDatetime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     *中心系统时间 [格式:2018-01-02 11:10:50]
     * </pre>
     *
     * <code>required string datetime = 2;</code>
     */
    public String getDatetime() {
      Object ref = datetime_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          datetime_ = s;
        }
        return s;
      }
    }
    /**
     * <pre>
     *中心系统时间 [格式:2018-01-02 11:10:50]
     * </pre>
     *
     * <code>required string datetime = 2;</code>
     */
    public com.google.protobuf.ByteString
        getDatetimeBytes() {
      Object ref = datetime_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        datetime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasRtuid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasDatetime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, rtuid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, datetime_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, rtuid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, datetime_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof HeartBeatOUT)) {
        return super.equals(obj);
      }
      HeartBeatOUT other = (HeartBeatOUT) obj;

      boolean result = true;
      result = result && (hasRtuid() == other.hasRtuid());
      if (hasRtuid()) {
        result = result && (getRtuid()
            == other.getRtuid());
      }
      result = result && (hasDatetime() == other.hasDatetime());
      if (hasDatetime()) {
        result = result && getDatetime()
            .equals(other.getDatetime());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasRtuid()) {
        hash = (37 * hash) + RTUID_FIELD_NUMBER;
        hash = (53 * hash) + getRtuid();
      }
      if (hasDatetime()) {
        hash = (37 * hash) + DATETIME_FIELD_NUMBER;
        hash = (53 * hash) + getDatetime().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static HeartBeatOUT parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static HeartBeatOUT parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static HeartBeatOUT parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static HeartBeatOUT parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static HeartBeatOUT parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static HeartBeatOUT parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static HeartBeatOUT parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static HeartBeatOUT parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static HeartBeatOUT parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static HeartBeatOUT parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static HeartBeatOUT parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static HeartBeatOUT parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(HeartBeatOUT prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *下行心跳[中心到RTU]
     * </pre>
     *
     * Protobuf type {@code demo.protobuf.HeartBeatOUT}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:demo.protobuf.HeartBeatOUT)
        HeartBeatOUTOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return XhRtu.internal_static_demo_protobuf_HeartBeatOUT_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return XhRtu.internal_static_demo_protobuf_HeartBeatOUT_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                HeartBeatOUT.class, Builder.class);
      }

      // Construct using demo.protobuf.XhRtu.HeartBeatOUT.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        rtuid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        datetime_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return XhRtu.internal_static_demo_protobuf_HeartBeatOUT_descriptor;
      }

      public HeartBeatOUT getDefaultInstanceForType() {
        return HeartBeatOUT.getDefaultInstance();
      }

      public HeartBeatOUT build() {
        HeartBeatOUT result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public HeartBeatOUT buildPartial() {
        HeartBeatOUT result = new HeartBeatOUT(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.rtuid_ = rtuid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.datetime_ = datetime_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof HeartBeatOUT) {
          return mergeFrom((HeartBeatOUT)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(HeartBeatOUT other) {
        if (other == HeartBeatOUT.getDefaultInstance()) return this;
        if (other.hasRtuid()) {
          setRtuid(other.getRtuid());
        }
        if (other.hasDatetime()) {
          bitField0_ |= 0x00000002;
          datetime_ = other.datetime_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRtuid()) {
          return false;
        }
        if (!hasDatetime()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        HeartBeatOUT parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (HeartBeatOUT) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int rtuid_ ;
      /**
       * <pre>
       *RTU ID
       * </pre>
       *
       * <code>required uint32 rtuid = 1;</code>
       */
      public boolean hasRtuid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       *RTU ID
       * </pre>
       *
       * <code>required uint32 rtuid = 1;</code>
       */
      public int getRtuid() {
        return rtuid_;
      }
      /**
       * <pre>
       *RTU ID
       * </pre>
       *
       * <code>required uint32 rtuid = 1;</code>
       */
      public Builder setRtuid(int value) {
        bitField0_ |= 0x00000001;
        rtuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *RTU ID
       * </pre>
       *
       * <code>required uint32 rtuid = 1;</code>
       */
      public Builder clearRtuid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        rtuid_ = 0;
        onChanged();
        return this;
      }

      private Object datetime_ = "";
      /**
       * <pre>
       *中心系统时间 [格式:2018-01-02 11:10:50]
       * </pre>
       *
       * <code>required string datetime = 2;</code>
       */
      public boolean hasDatetime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       *中心系统时间 [格式:2018-01-02 11:10:50]
       * </pre>
       *
       * <code>required string datetime = 2;</code>
       */
      public String getDatetime() {
        Object ref = datetime_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            datetime_ = s;
          }
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       *中心系统时间 [格式:2018-01-02 11:10:50]
       * </pre>
       *
       * <code>required string datetime = 2;</code>
       */
      public com.google.protobuf.ByteString
          getDatetimeBytes() {
        Object ref = datetime_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          datetime_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       *中心系统时间 [格式:2018-01-02 11:10:50]
       * </pre>
       *
       * <code>required string datetime = 2;</code>
       */
      public Builder setDatetime(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        datetime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *中心系统时间 [格式:2018-01-02 11:10:50]
       * </pre>
       *
       * <code>required string datetime = 2;</code>
       */
      public Builder clearDatetime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        datetime_ = getDefaultInstance().getDatetime();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *中心系统时间 [格式:2018-01-02 11:10:50]
       * </pre>
       *
       * <code>required string datetime = 2;</code>
       */
      public Builder setDatetimeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        datetime_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:demo.protobuf.HeartBeatOUT)
    }

    // @@protoc_insertion_point(class_scope:demo.protobuf.HeartBeatOUT)
    private static final HeartBeatOUT DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new HeartBeatOUT();
    }

    public static HeartBeatOUT getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @Deprecated public static final com.google.protobuf.Parser<HeartBeatOUT>
        PARSER = new com.google.protobuf.AbstractParser<HeartBeatOUT>() {
      public HeartBeatOUT parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new HeartBeatOUT(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<HeartBeatOUT> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<HeartBeatOUT> getParserForType() {
      return PARSER;
    }

    public HeartBeatOUT getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RTUConInfoRESOrBuilder extends
      // @@protoc_insertion_point(interface_extends:demo.protobuf.RTUConInfoRES)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *RTU ID
     * </pre>
     *
     * <code>required uint32 rtuid = 1;</code>
     */
    boolean hasRtuid();
    /**
     * <pre>
     *RTU ID
     * </pre>
     *
     * <code>required uint32 rtuid = 1;</code>
     */
    int getRtuid();

    /**
     * <pre>
     *广播RS485端口参数[可重复]
     * </pre>
     *
     * <code>repeated .demo.protobuf.RTUConInfoRES.RS485Info rs485 = 2;</code>
     */
    java.util.List<RTUConInfoRES.RS485Info>
        getRs485List();
    /**
     * <pre>
     *广播RS485端口参数[可重复]
     * </pre>
     *
     * <code>repeated .demo.protobuf.RTUConInfoRES.RS485Info rs485 = 2;</code>
     */
    RTUConInfoRES.RS485Info getRs485(int index);
    /**
     * <pre>
     *广播RS485端口参数[可重复]
     * </pre>
     *
     * <code>repeated .demo.protobuf.RTUConInfoRES.RS485Info rs485 = 2;</code>
     */
    int getRs485Count();
    /**
     * <pre>
     *广播RS485端口参数[可重复]
     * </pre>
     *
     * <code>repeated .demo.protobuf.RTUConInfoRES.RS485Info rs485 = 2;</code>
     */
    java.util.List<? extends RTUConInfoRES.RS485InfoOrBuilder>
        getRs485OrBuilderList();
    /**
     * <pre>
     *广播RS485端口参数[可重复]
     * </pre>
     *
     * <code>repeated .demo.protobuf.RTUConInfoRES.RS485Info rs485 = 2;</code>
     */
    RTUConInfoRES.RS485InfoOrBuilder getRs485OrBuilder(
            int index);

    /**
     * <pre>
     *广播模拟输入端口参数[可重复]
     * </pre>
     *
     * <code>repeated .demo.protobuf.RTUConInfoRES.DAInfo da = 3;</code>
     */
    java.util.List<RTUConInfoRES.DAInfo>
        getDaList();
    /**
     * <pre>
     *广播模拟输入端口参数[可重复]
     * </pre>
     *
     * <code>repeated .demo.protobuf.RTUConInfoRES.DAInfo da = 3;</code>
     */
    RTUConInfoRES.DAInfo getDa(int index);
    /**
     * <pre>
     *广播模拟输入端口参数[可重复]
     * </pre>
     *
     * <code>repeated .demo.protobuf.RTUConInfoRES.DAInfo da = 3;</code>
     */
    int getDaCount();
    /**
     * <pre>
     *广播模拟输入端口参数[可重复]
     * </pre>
     *
     * <code>repeated .demo.protobuf.RTUConInfoRES.DAInfo da = 3;</code>
     */
    java.util.List<? extends RTUConInfoRES.DAInfoOrBuilder>
        getDaOrBuilderList();
    /**
     * <pre>
     *广播模拟输入端口参数[可重复]
     * </pre>
     *
     * <code>repeated .demo.protobuf.RTUConInfoRES.DAInfo da = 3;</code>
     */
    RTUConInfoRES.DAInfoOrBuilder getDaOrBuilder(
            int index);

    /**
     * <pre>
     *数字输入端口配置参数
     * </pre>
     *
     * <code>optional uint32 dipolltime = 4;</code>
     */
    boolean hasDipolltime();
    /**
     * <pre>
     *数字输入端口配置参数
     * </pre>
     *
     * <code>optional uint32 dipolltime = 4;</code>
     */
    int getDipolltime();

    /**
     * <pre>
     *数据库最大存储条数[配置时需要注意,RTU内部存储最大256M]
     * </pre>
     *
     * <code>optional uint32 maxdbrow = 5;</code>
     */
    boolean hasMaxdbrow();
    /**
     * <pre>
     *数据库最大存储条数[配置时需要注意,RTU内部存储最大256M]
     * </pre>
     *
     * <code>optional uint32 maxdbrow = 5;</code>
     */
    int getMaxdbrow();

    /**
     * <pre>
     *用户配置参数
     * </pre>
     *
     * <code>optional .demo.protobuf.RTUConInfoRES.USERInfo userinfo = 6;</code>
     */
    boolean hasUserinfo();
    /**
     * <pre>
     *用户配置参数
     * </pre>
     *
     * <code>optional .demo.protobuf.RTUConInfoRES.USERInfo userinfo = 6;</code>
     */
    RTUConInfoRES.USERInfo getUserinfo();
    /**
     * <pre>
     *用户配置参数
     * </pre>
     *
     * <code>optional .demo.protobuf.RTUConInfoRES.USERInfo userinfo = 6;</code>
     */
    RTUConInfoRES.USERInfoOrBuilder getUserinfoOrBuilder();
  }
  /**
   * <pre>
   *RTU配置参数广播[中心到RTU]
   * </pre>
   *
   * Protobuf type {@code demo.protobuf.RTUConInfoRES}
   */
  public  static final class RTUConInfoRES extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:demo.protobuf.RTUConInfoRES)
      RTUConInfoRESOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RTUConInfoRES.newBuilder() to construct.
    private RTUConInfoRES(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RTUConInfoRES() {
      rtuid_ = 0;
      rs485_ = java.util.Collections.emptyList();
      da_ = java.util.Collections.emptyList();
      dipolltime_ = 0;
      maxdbrow_ = 0;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RTUConInfoRES(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              rtuid_ = input.readUInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                rs485_ = new java.util.ArrayList<RS485Info>();
                mutable_bitField0_ |= 0x00000002;
              }
              rs485_.add(
                  input.readMessage(RS485Info.PARSER, extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                da_ = new java.util.ArrayList<DAInfo>();
                mutable_bitField0_ |= 0x00000004;
              }
              da_.add(
                  input.readMessage(DAInfo.PARSER, extensionRegistry));
              break;
            }
            case 32: {
              bitField0_ |= 0x00000002;
              dipolltime_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000004;
              maxdbrow_ = input.readUInt32();
              break;
            }
            case 50: {
              USERInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000008) == 0x00000008)) {
                subBuilder = userinfo_.toBuilder();
              }
              userinfo_ = input.readMessage(USERInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(userinfo_);
                userinfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000008;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          rs485_ = java.util.Collections.unmodifiableList(rs485_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          da_ = java.util.Collections.unmodifiableList(da_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return XhRtu.internal_static_demo_protobuf_RTUConInfoRES_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return XhRtu.internal_static_demo_protobuf_RTUConInfoRES_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              RTUConInfoRES.class, Builder.class);
    }

    public interface RS485InfoOrBuilder extends
        // @@protoc_insertion_point(interface_extends:demo.protobuf.RTUConInfoRES.RS485Info)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       *串口端口号[范围:1-10]
       * </pre>
       *
       * <code>required uint32 channo = 1;</code>
       */
      boolean hasChanno();
      /**
       * <pre>
       *串口端口号[范围:1-10]
       * </pre>
       *
       * <code>required uint32 channo = 1;</code>
       */
      int getChanno();

      /**
       * <pre>
       *格式 多个设备id间用‘;’隔开   [例：2;6;8;9]
       * </pre>
       *
       * <code>required string deviceid = 2;</code>
       */
      boolean hasDeviceid();
      /**
       * <pre>
       *格式 多个设备id间用‘;’隔开   [例：2;6;8;9]
       * </pre>
       *
       * <code>required string deviceid = 2;</code>
       */
      String getDeviceid();
      /**
       * <pre>
       *格式 多个设备id间用‘;’隔开   [例：2;6;8;9]
       * </pre>
       *
       * <code>required string deviceid = 2;</code>
       */
      com.google.protobuf.ByteString
          getDeviceidBytes();

      /**
       * <pre>
       *设备id[范围:1-200		ETCR2900接触式地阻范围:详见如下] 
       *ETCR2900接触式地阻地阻测试可通过继电器切换来共用地阻测试仪器
       *故：地阻设备地址组成公式: (0000 0000)2进制 + (1到255) 2进制后4bit分别对于4个继电器[0-表示不启用继电器切换选择 1-表示启用继电器切换选择]，2进制位可多选
       * </pre>
       *
       * <code>required uint32 devicetype = 3;</code>
       */
      boolean hasDevicetype();
      /**
       * <pre>
       *设备id[范围:1-200		ETCR2900接触式地阻范围:详见如下] 
       *ETCR2900接触式地阻地阻测试可通过继电器切换来共用地阻测试仪器
       *故：地阻设备地址组成公式: (0000 0000)2进制 + (1到255) 2进制后4bit分别对于4个继电器[0-表示不启用继电器切换选择 1-表示启用继电器切换选择]，2进制位可多选
       * </pre>
       *
       * <code>required uint32 devicetype = 3;</code>
       */
      int getDevicetype();

      /**
       * <pre>
       *波特率
       * </pre>
       *
       * <code>required uint32 baudrate = 4;</code>
       */
      boolean hasBaudrate();
      /**
       * <pre>
       *波特率
       * </pre>
       *
       * <code>required uint32 baudrate = 4;</code>
       */
      int getBaudrate();

      /**
       * <pre>
       *定时查询时间间隔[0-不启用定时查询 最大值:65536 单位:秒]
       * </pre>
       *
       * <code>required uint32 polltime = 5;</code>
       */
      boolean hasPolltime();
      /**
       * <pre>
       *定时查询时间间隔[0-不启用定时查询 最大值:65536 单位:秒]
       * </pre>
       *
       * <code>required uint32 polltime = 5;</code>
       */
      int getPolltime();

      /**
       * <pre>
       *多路设备共用串口，查询时间间隔[范围：1-65536 单位：毫秒]
       * </pre>
       *
       * <code>required uint32 muxinterval = 6;</code>
       */
      boolean hasMuxinterval();
      /**
       * <pre>
       *多路设备共用串口，查询时间间隔[范围：1-65536 单位：毫秒]
       * </pre>
       *
       * <code>required uint32 muxinterval = 6;</code>
       */
      int getMuxinterval();

      /**
       * <pre>
       *修正值
       * </pre>
       *
       * <code>required double calvalue = 7;</code>
       */
      boolean hasCalvalue();
      /**
       * <pre>
       *修正值
       * </pre>
       *
       * <code>required double calvalue = 7;</code>
       */
      double getCalvalue();

      /**
       * <pre>
       *操作方式 [0:增加/更新 1-删除]		
       * </pre>
       *
       * <code>required uint32 op = 8;</code>
       */
      boolean hasOp();
      /**
       * <pre>
       *操作方式 [0:增加/更新 1-删除]		
       * </pre>
       *
       * <code>required uint32 op = 8;</code>
       */
      int getOp();
    }
    /**
     * <pre>
     *485端口配置参数
     * </pre>
     *
     * Protobuf type {@code demo.protobuf.RTUConInfoRES.RS485Info}
     */
    public  static final class RS485Info extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:demo.protobuf.RTUConInfoRES.RS485Info)
        RS485InfoOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use RS485Info.newBuilder() to construct.
      private RS485Info(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private RS485Info() {
        channo_ = 0;
        deviceid_ = "";
        devicetype_ = 0;
        baudrate_ = 0;
        polltime_ = 0;
        muxinterval_ = 0;
        calvalue_ = 0D;
        op_ = 0;
      }

      @Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private RS485Info(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                channo_ = input.readUInt32();
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                deviceid_ = bs;
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                devicetype_ = input.readUInt32();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                baudrate_ = input.readUInt32();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                polltime_ = input.readUInt32();
                break;
              }
              case 48: {
                bitField0_ |= 0x00000020;
                muxinterval_ = input.readUInt32();
                break;
              }
              case 57: {
                bitField0_ |= 0x00000040;
                calvalue_ = input.readDouble();
                break;
              }
              case 64: {
                bitField0_ |= 0x00000080;
                op_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return XhRtu.internal_static_demo_protobuf_RTUConInfoRES_RS485Info_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return XhRtu.internal_static_demo_protobuf_RTUConInfoRES_RS485Info_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                RS485Info.class, Builder.class);
      }

      private int bitField0_;
      public static final int CHANNO_FIELD_NUMBER = 1;
      private int channo_;
      /**
       * <pre>
       *串口端口号[范围:1-10]
       * </pre>
       *
       * <code>required uint32 channo = 1;</code>
       */
      public boolean hasChanno() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       *串口端口号[范围:1-10]
       * </pre>
       *
       * <code>required uint32 channo = 1;</code>
       */
      public int getChanno() {
        return channo_;
      }

      public static final int DEVICEID_FIELD_NUMBER = 2;
      private volatile Object deviceid_;
      /**
       * <pre>
       *格式 多个设备id间用‘;’隔开   [例：2;6;8;9]
       * </pre>
       *
       * <code>required string deviceid = 2;</code>
       */
      public boolean hasDeviceid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       *格式 多个设备id间用‘;’隔开   [例：2;6;8;9]
       * </pre>
       *
       * <code>required string deviceid = 2;</code>
       */
      public String getDeviceid() {
        Object ref = deviceid_;
        if (ref instanceof String) {
          return (String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            deviceid_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       *格式 多个设备id间用‘;’隔开   [例：2;6;8;9]
       * </pre>
       *
       * <code>required string deviceid = 2;</code>
       */
      public com.google.protobuf.ByteString
          getDeviceidBytes() {
        Object ref = deviceid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          deviceid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int DEVICETYPE_FIELD_NUMBER = 3;
      private int devicetype_;
      /**
       * <pre>
       *设备id[范围:1-200		ETCR2900接触式地阻范围:详见如下] 
       *ETCR2900接触式地阻地阻测试可通过继电器切换来共用地阻测试仪器
       *故：地阻设备地址组成公式: (0000 0000)2进制 + (1到255) 2进制后4bit分别对于4个继电器[0-表示不启用继电器切换选择 1-表示启用继电器切换选择]，2进制位可多选
       * </pre>
       *
       * <code>required uint32 devicetype = 3;</code>
       */
      public boolean hasDevicetype() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       *设备id[范围:1-200		ETCR2900接触式地阻范围:详见如下] 
       *ETCR2900接触式地阻地阻测试可通过继电器切换来共用地阻测试仪器
       *故：地阻设备地址组成公式: (0000 0000)2进制 + (1到255) 2进制后4bit分别对于4个继电器[0-表示不启用继电器切换选择 1-表示启用继电器切换选择]，2进制位可多选
       * </pre>
       *
       * <code>required uint32 devicetype = 3;</code>
       */
      public int getDevicetype() {
        return devicetype_;
      }

      public static final int BAUDRATE_FIELD_NUMBER = 4;
      private int baudrate_;
      /**
       * <pre>
       *波特率
       * </pre>
       *
       * <code>required uint32 baudrate = 4;</code>
       */
      public boolean hasBaudrate() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       *波特率
       * </pre>
       *
       * <code>required uint32 baudrate = 4;</code>
       */
      public int getBaudrate() {
        return baudrate_;
      }

      public static final int POLLTIME_FIELD_NUMBER = 5;
      private int polltime_;
      /**
       * <pre>
       *定时查询时间间隔[0-不启用定时查询 最大值:65536 单位:秒]
       * </pre>
       *
       * <code>required uint32 polltime = 5;</code>
       */
      public boolean hasPolltime() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <pre>
       *定时查询时间间隔[0-不启用定时查询 最大值:65536 单位:秒]
       * </pre>
       *
       * <code>required uint32 polltime = 5;</code>
       */
      public int getPolltime() {
        return polltime_;
      }

      public static final int MUXINTERVAL_FIELD_NUMBER = 6;
      private int muxinterval_;
      /**
       * <pre>
       *多路设备共用串口，查询时间间隔[范围：1-65536 单位：毫秒]
       * </pre>
       *
       * <code>required uint32 muxinterval = 6;</code>
       */
      public boolean hasMuxinterval() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <pre>
       *多路设备共用串口，查询时间间隔[范围：1-65536 单位：毫秒]
       * </pre>
       *
       * <code>required uint32 muxinterval = 6;</code>
       */
      public int getMuxinterval() {
        return muxinterval_;
      }

      public static final int CALVALUE_FIELD_NUMBER = 7;
      private double calvalue_;
      /**
       * <pre>
       *修正值
       * </pre>
       *
       * <code>required double calvalue = 7;</code>
       */
      public boolean hasCalvalue() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <pre>
       *修正值
       * </pre>
       *
       * <code>required double calvalue = 7;</code>
       */
      public double getCalvalue() {
        return calvalue_;
      }

      public static final int OP_FIELD_NUMBER = 8;
      private int op_;
      /**
       * <pre>
       *操作方式 [0:增加/更新 1-删除]		
       * </pre>
       *
       * <code>required uint32 op = 8;</code>
       */
      public boolean hasOp() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <pre>
       *操作方式 [0:增加/更新 1-删除]		
       * </pre>
       *
       * <code>required uint32 op = 8;</code>
       */
      public int getOp() {
        return op_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasChanno()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasDeviceid()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasDevicetype()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasBaudrate()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasPolltime()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasMuxinterval()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasCalvalue()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasOp()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, channo_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, deviceid_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt32(3, devicetype_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeUInt32(4, baudrate_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeUInt32(5, polltime_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeUInt32(6, muxinterval_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeDouble(7, calvalue_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          output.writeUInt32(8, op_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, channo_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, deviceid_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, devicetype_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(4, baudrate_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(5, polltime_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(6, muxinterval_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(7, calvalue_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(8, op_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @Override
      public boolean equals(final Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof RS485Info)) {
          return super.equals(obj);
        }
        RS485Info other = (RS485Info) obj;

        boolean result = true;
        result = result && (hasChanno() == other.hasChanno());
        if (hasChanno()) {
          result = result && (getChanno()
              == other.getChanno());
        }
        result = result && (hasDeviceid() == other.hasDeviceid());
        if (hasDeviceid()) {
          result = result && getDeviceid()
              .equals(other.getDeviceid());
        }
        result = result && (hasDevicetype() == other.hasDevicetype());
        if (hasDevicetype()) {
          result = result && (getDevicetype()
              == other.getDevicetype());
        }
        result = result && (hasBaudrate() == other.hasBaudrate());
        if (hasBaudrate()) {
          result = result && (getBaudrate()
              == other.getBaudrate());
        }
        result = result && (hasPolltime() == other.hasPolltime());
        if (hasPolltime()) {
          result = result && (getPolltime()
              == other.getPolltime());
        }
        result = result && (hasMuxinterval() == other.hasMuxinterval());
        if (hasMuxinterval()) {
          result = result && (getMuxinterval()
              == other.getMuxinterval());
        }
        result = result && (hasCalvalue() == other.hasCalvalue());
        if (hasCalvalue()) {
          result = result && (
              Double.doubleToLongBits(getCalvalue())
              == Double.doubleToLongBits(
                  other.getCalvalue()));
        }
        result = result && (hasOp() == other.hasOp());
        if (hasOp()) {
          result = result && (getOp()
              == other.getOp());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasChanno()) {
          hash = (37 * hash) + CHANNO_FIELD_NUMBER;
          hash = (53 * hash) + getChanno();
        }
        if (hasDeviceid()) {
          hash = (37 * hash) + DEVICEID_FIELD_NUMBER;
          hash = (53 * hash) + getDeviceid().hashCode();
        }
        if (hasDevicetype()) {
          hash = (37 * hash) + DEVICETYPE_FIELD_NUMBER;
          hash = (53 * hash) + getDevicetype();
        }
        if (hasBaudrate()) {
          hash = (37 * hash) + BAUDRATE_FIELD_NUMBER;
          hash = (53 * hash) + getBaudrate();
        }
        if (hasPolltime()) {
          hash = (37 * hash) + POLLTIME_FIELD_NUMBER;
          hash = (53 * hash) + getPolltime();
        }
        if (hasMuxinterval()) {
          hash = (37 * hash) + MUXINTERVAL_FIELD_NUMBER;
          hash = (53 * hash) + getMuxinterval();
        }
        if (hasCalvalue()) {
          hash = (37 * hash) + CALVALUE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              Double.doubleToLongBits(getCalvalue()));
        }
        if (hasOp()) {
          hash = (37 * hash) + OP_FIELD_NUMBER;
          hash = (53 * hash) + getOp();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static RS485Info parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static RS485Info parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static RS485Info parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static RS485Info parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static RS485Info parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static RS485Info parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static RS485Info parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static RS485Info parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static RS485Info parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static RS485Info parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static RS485Info parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static RS485Info parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(RS485Info prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @Override
      protected Builder newBuilderForType(
          BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       *485端口配置参数
       * </pre>
       *
       * Protobuf type {@code demo.protobuf.RTUConInfoRES.RS485Info}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:demo.protobuf.RTUConInfoRES.RS485Info)
          RS485InfoOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return XhRtu.internal_static_demo_protobuf_RTUConInfoRES_RS485Info_descriptor;
        }

        protected FieldAccessorTable
            internalGetFieldAccessorTable() {
          return XhRtu.internal_static_demo_protobuf_RTUConInfoRES_RS485Info_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  RS485Info.class, Builder.class);
        }

        // Construct using demo.protobuf.XhRtu.RTUConInfoRES.RS485Info.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          channo_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          deviceid_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          devicetype_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          baudrate_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          polltime_ = 0;
          bitField0_ = (bitField0_ & ~0x00000010);
          muxinterval_ = 0;
          bitField0_ = (bitField0_ & ~0x00000020);
          calvalue_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000040);
          op_ = 0;
          bitField0_ = (bitField0_ & ~0x00000080);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return XhRtu.internal_static_demo_protobuf_RTUConInfoRES_RS485Info_descriptor;
        }

        public RS485Info getDefaultInstanceForType() {
          return RS485Info.getDefaultInstance();
        }

        public RS485Info build() {
          RS485Info result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public RS485Info buildPartial() {
          RS485Info result = new RS485Info(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.channo_ = channo_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.deviceid_ = deviceid_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.devicetype_ = devicetype_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.baudrate_ = baudrate_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.polltime_ = polltime_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.muxinterval_ = muxinterval_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000040;
          }
          result.calvalue_ = calvalue_;
          if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
            to_bitField0_ |= 0x00000080;
          }
          result.op_ = op_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof RS485Info) {
            return mergeFrom((RS485Info)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(RS485Info other) {
          if (other == RS485Info.getDefaultInstance()) return this;
          if (other.hasChanno()) {
            setChanno(other.getChanno());
          }
          if (other.hasDeviceid()) {
            bitField0_ |= 0x00000002;
            deviceid_ = other.deviceid_;
            onChanged();
          }
          if (other.hasDevicetype()) {
            setDevicetype(other.getDevicetype());
          }
          if (other.hasBaudrate()) {
            setBaudrate(other.getBaudrate());
          }
          if (other.hasPolltime()) {
            setPolltime(other.getPolltime());
          }
          if (other.hasMuxinterval()) {
            setMuxinterval(other.getMuxinterval());
          }
          if (other.hasCalvalue()) {
            setCalvalue(other.getCalvalue());
          }
          if (other.hasOp()) {
            setOp(other.getOp());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          if (!hasChanno()) {
            return false;
          }
          if (!hasDeviceid()) {
            return false;
          }
          if (!hasDevicetype()) {
            return false;
          }
          if (!hasBaudrate()) {
            return false;
          }
          if (!hasPolltime()) {
            return false;
          }
          if (!hasMuxinterval()) {
            return false;
          }
          if (!hasCalvalue()) {
            return false;
          }
          if (!hasOp()) {
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          RS485Info parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (RS485Info) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int channo_ ;
        /**
         * <pre>
         *串口端口号[范围:1-10]
         * </pre>
         *
         * <code>required uint32 channo = 1;</code>
         */
        public boolean hasChanno() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <pre>
         *串口端口号[范围:1-10]
         * </pre>
         *
         * <code>required uint32 channo = 1;</code>
         */
        public int getChanno() {
          return channo_;
        }
        /**
         * <pre>
         *串口端口号[范围:1-10]
         * </pre>
         *
         * <code>required uint32 channo = 1;</code>
         */
        public Builder setChanno(int value) {
          bitField0_ |= 0x00000001;
          channo_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *串口端口号[范围:1-10]
         * </pre>
         *
         * <code>required uint32 channo = 1;</code>
         */
        public Builder clearChanno() {
          bitField0_ = (bitField0_ & ~0x00000001);
          channo_ = 0;
          onChanged();
          return this;
        }

        private Object deviceid_ = "";
        /**
         * <pre>
         *格式 多个设备id间用‘;’隔开   [例：2;6;8;9]
         * </pre>
         *
         * <code>required string deviceid = 2;</code>
         */
        public boolean hasDeviceid() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <pre>
         *格式 多个设备id间用‘;’隔开   [例：2;6;8;9]
         * </pre>
         *
         * <code>required string deviceid = 2;</code>
         */
        public String getDeviceid() {
          Object ref = deviceid_;
          if (!(ref instanceof String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              deviceid_ = s;
            }
            return s;
          } else {
            return (String) ref;
          }
        }
        /**
         * <pre>
         *格式 多个设备id间用‘;’隔开   [例：2;6;8;9]
         * </pre>
         *
         * <code>required string deviceid = 2;</code>
         */
        public com.google.protobuf.ByteString
            getDeviceidBytes() {
          Object ref = deviceid_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (String) ref);
            deviceid_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         *格式 多个设备id间用‘;’隔开   [例：2;6;8;9]
         * </pre>
         *
         * <code>required string deviceid = 2;</code>
         */
        public Builder setDeviceid(
            String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          deviceid_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *格式 多个设备id间用‘;’隔开   [例：2;6;8;9]
         * </pre>
         *
         * <code>required string deviceid = 2;</code>
         */
        public Builder clearDeviceid() {
          bitField0_ = (bitField0_ & ~0x00000002);
          deviceid_ = getDefaultInstance().getDeviceid();
          onChanged();
          return this;
        }
        /**
         * <pre>
         *格式 多个设备id间用‘;’隔开   [例：2;6;8;9]
         * </pre>
         *
         * <code>required string deviceid = 2;</code>
         */
        public Builder setDeviceidBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          deviceid_ = value;
          onChanged();
          return this;
        }

        private int devicetype_ ;
        /**
         * <pre>
         *设备id[范围:1-200		ETCR2900接触式地阻范围:详见如下] 
         *ETCR2900接触式地阻地阻测试可通过继电器切换来共用地阻测试仪器
         *故：地阻设备地址组成公式: (0000 0000)2进制 + (1到255) 2进制后4bit分别对于4个继电器[0-表示不启用继电器切换选择 1-表示启用继电器切换选择]，2进制位可多选
         * </pre>
         *
         * <code>required uint32 devicetype = 3;</code>
         */
        public boolean hasDevicetype() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <pre>
         *设备id[范围:1-200		ETCR2900接触式地阻范围:详见如下] 
         *ETCR2900接触式地阻地阻测试可通过继电器切换来共用地阻测试仪器
         *故：地阻设备地址组成公式: (0000 0000)2进制 + (1到255) 2进制后4bit分别对于4个继电器[0-表示不启用继电器切换选择 1-表示启用继电器切换选择]，2进制位可多选
         * </pre>
         *
         * <code>required uint32 devicetype = 3;</code>
         */
        public int getDevicetype() {
          return devicetype_;
        }
        /**
         * <pre>
         *设备id[范围:1-200		ETCR2900接触式地阻范围:详见如下] 
         *ETCR2900接触式地阻地阻测试可通过继电器切换来共用地阻测试仪器
         *故：地阻设备地址组成公式: (0000 0000)2进制 + (1到255) 2进制后4bit分别对于4个继电器[0-表示不启用继电器切换选择 1-表示启用继电器切换选择]，2进制位可多选
         * </pre>
         *
         * <code>required uint32 devicetype = 3;</code>
         */
        public Builder setDevicetype(int value) {
          bitField0_ |= 0x00000004;
          devicetype_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *设备id[范围:1-200		ETCR2900接触式地阻范围:详见如下] 
         *ETCR2900接触式地阻地阻测试可通过继电器切换来共用地阻测试仪器
         *故：地阻设备地址组成公式: (0000 0000)2进制 + (1到255) 2进制后4bit分别对于4个继电器[0-表示不启用继电器切换选择 1-表示启用继电器切换选择]，2进制位可多选
         * </pre>
         *
         * <code>required uint32 devicetype = 3;</code>
         */
        public Builder clearDevicetype() {
          bitField0_ = (bitField0_ & ~0x00000004);
          devicetype_ = 0;
          onChanged();
          return this;
        }

        private int baudrate_ ;
        /**
         * <pre>
         *波特率
         * </pre>
         *
         * <code>required uint32 baudrate = 4;</code>
         */
        public boolean hasBaudrate() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <pre>
         *波特率
         * </pre>
         *
         * <code>required uint32 baudrate = 4;</code>
         */
        public int getBaudrate() {
          return baudrate_;
        }
        /**
         * <pre>
         *波特率
         * </pre>
         *
         * <code>required uint32 baudrate = 4;</code>
         */
        public Builder setBaudrate(int value) {
          bitField0_ |= 0x00000008;
          baudrate_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *波特率
         * </pre>
         *
         * <code>required uint32 baudrate = 4;</code>
         */
        public Builder clearBaudrate() {
          bitField0_ = (bitField0_ & ~0x00000008);
          baudrate_ = 0;
          onChanged();
          return this;
        }

        private int polltime_ ;
        /**
         * <pre>
         *定时查询时间间隔[0-不启用定时查询 最大值:65536 单位:秒]
         * </pre>
         *
         * <code>required uint32 polltime = 5;</code>
         */
        public boolean hasPolltime() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <pre>
         *定时查询时间间隔[0-不启用定时查询 最大值:65536 单位:秒]
         * </pre>
         *
         * <code>required uint32 polltime = 5;</code>
         */
        public int getPolltime() {
          return polltime_;
        }
        /**
         * <pre>
         *定时查询时间间隔[0-不启用定时查询 最大值:65536 单位:秒]
         * </pre>
         *
         * <code>required uint32 polltime = 5;</code>
         */
        public Builder setPolltime(int value) {
          bitField0_ |= 0x00000010;
          polltime_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *定时查询时间间隔[0-不启用定时查询 最大值:65536 单位:秒]
         * </pre>
         *
         * <code>required uint32 polltime = 5;</code>
         */
        public Builder clearPolltime() {
          bitField0_ = (bitField0_ & ~0x00000010);
          polltime_ = 0;
          onChanged();
          return this;
        }

        private int muxinterval_ ;
        /**
         * <pre>
         *多路设备共用串口，查询时间间隔[范围：1-65536 单位：毫秒]
         * </pre>
         *
         * <code>required uint32 muxinterval = 6;</code>
         */
        public boolean hasMuxinterval() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <pre>
         *多路设备共用串口，查询时间间隔[范围：1-65536 单位：毫秒]
         * </pre>
         *
         * <code>required uint32 muxinterval = 6;</code>
         */
        public int getMuxinterval() {
          return muxinterval_;
        }
        /**
         * <pre>
         *多路设备共用串口，查询时间间隔[范围：1-65536 单位：毫秒]
         * </pre>
         *
         * <code>required uint32 muxinterval = 6;</code>
         */
        public Builder setMuxinterval(int value) {
          bitField0_ |= 0x00000020;
          muxinterval_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *多路设备共用串口，查询时间间隔[范围：1-65536 单位：毫秒]
         * </pre>
         *
         * <code>required uint32 muxinterval = 6;</code>
         */
        public Builder clearMuxinterval() {
          bitField0_ = (bitField0_ & ~0x00000020);
          muxinterval_ = 0;
          onChanged();
          return this;
        }

        private double calvalue_ ;
        /**
         * <pre>
         *修正值
         * </pre>
         *
         * <code>required double calvalue = 7;</code>
         */
        public boolean hasCalvalue() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <pre>
         *修正值
         * </pre>
         *
         * <code>required double calvalue = 7;</code>
         */
        public double getCalvalue() {
          return calvalue_;
        }
        /**
         * <pre>
         *修正值
         * </pre>
         *
         * <code>required double calvalue = 7;</code>
         */
        public Builder setCalvalue(double value) {
          bitField0_ |= 0x00000040;
          calvalue_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *修正值
         * </pre>
         *
         * <code>required double calvalue = 7;</code>
         */
        public Builder clearCalvalue() {
          bitField0_ = (bitField0_ & ~0x00000040);
          calvalue_ = 0D;
          onChanged();
          return this;
        }

        private int op_ ;
        /**
         * <pre>
         *操作方式 [0:增加/更新 1-删除]		
         * </pre>
         *
         * <code>required uint32 op = 8;</code>
         */
        public boolean hasOp() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        /**
         * <pre>
         *操作方式 [0:增加/更新 1-删除]		
         * </pre>
         *
         * <code>required uint32 op = 8;</code>
         */
        public int getOp() {
          return op_;
        }
        /**
         * <pre>
         *操作方式 [0:增加/更新 1-删除]		
         * </pre>
         *
         * <code>required uint32 op = 8;</code>
         */
        public Builder setOp(int value) {
          bitField0_ |= 0x00000080;
          op_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *操作方式 [0:增加/更新 1-删除]		
         * </pre>
         *
         * <code>required uint32 op = 8;</code>
         */
        public Builder clearOp() {
          bitField0_ = (bitField0_ & ~0x00000080);
          op_ = 0;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:demo.protobuf.RTUConInfoRES.RS485Info)
      }

      // @@protoc_insertion_point(class_scope:demo.protobuf.RTUConInfoRES.RS485Info)
      private static final RS485Info DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new RS485Info();
      }

      public static RS485Info getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @Deprecated public static final com.google.protobuf.Parser<RS485Info>
          PARSER = new com.google.protobuf.AbstractParser<RS485Info>() {
        public RS485Info parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new RS485Info(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<RS485Info> parser() {
        return PARSER;
      }

      @Override
      public com.google.protobuf.Parser<RS485Info> getParserForType() {
        return PARSER;
      }

      public RS485Info getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface DAInfoOrBuilder extends
        // @@protoc_insertion_point(interface_extends:demo.protobuf.RTUConInfoRES.DAInfo)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       *模拟输入端口号[范围:1-8]
       * </pre>
       *
       * <code>required uint32 channo = 1;</code>
       */
      boolean hasChanno();
      /**
       * <pre>
       *模拟输入端口号[范围:1-8]
       * </pre>
       *
       * <code>required uint32 channo = 1;</code>
       */
      int getChanno();

      /**
       * <pre>
       *设备类型[0:电流 1:电压]
       * </pre>
       *
       * <code>required uint32 devicetype = 2;</code>
       */
      boolean hasDevicetype();
      /**
       * <pre>
       *设备类型[0:电流 1:电压]
       * </pre>
       *
       * <code>required uint32 devicetype = 2;</code>
       */
      int getDevicetype();

      /**
       * <pre>
       *定时查询时间间隔[0-不启用定时查询 最大值:65536 单位:秒]	
       * </pre>
       *
       * <code>required uint32 polltime = 3;</code>
       */
      boolean hasPolltime();
      /**
       * <pre>
       *定时查询时间间隔[0-不启用定时查询 最大值:65536 单位:秒]	
       * </pre>
       *
       * <code>required uint32 polltime = 3;</code>
       */
      int getPolltime();

      /**
       * <pre>
       *精度
       * </pre>
       *
       * <code>required double dop = 4;</code>
       */
      boolean hasDop();
      /**
       * <pre>
       *精度
       * </pre>
       *
       * <code>required double dop = 4;</code>
       */
      double getDop();

      /**
       * <pre>
       *满量程
       * </pre>
       *
       * <code>required double fullscale = 5;</code>
       */
      boolean hasFullscale();
      /**
       * <pre>
       *满量程
       * </pre>
       *
       * <code>required double fullscale = 5;</code>
       */
      double getFullscale();

      /**
       * <pre>
       *修正值
       * </pre>
       *
       * <code>required double calvalue = 6;</code>
       */
      boolean hasCalvalue();
      /**
       * <pre>
       *修正值
       * </pre>
       *
       * <code>required double calvalue = 6;</code>
       */
      double getCalvalue();

      /**
       * <pre>
       *操作方式 [0:增加/更新 1-删除]		
       * </pre>
       *
       * <code>required uint32 op = 7;</code>
       */
      boolean hasOp();
      /**
       * <pre>
       *操作方式 [0:增加/更新 1-删除]		
       * </pre>
       *
       * <code>required uint32 op = 7;</code>
       */
      int getOp();
    }
    /**
     * <pre>
     *模拟输入端口配置参数
     * </pre>
     *
     * Protobuf type {@code demo.protobuf.RTUConInfoRES.DAInfo}
     */
    public  static final class DAInfo extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:demo.protobuf.RTUConInfoRES.DAInfo)
        DAInfoOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use DAInfo.newBuilder() to construct.
      private DAInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private DAInfo() {
        channo_ = 0;
        devicetype_ = 0;
        polltime_ = 0;
        dop_ = 0D;
        fullscale_ = 0D;
        calvalue_ = 0D;
        op_ = 0;
      }

      @Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private DAInfo(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                channo_ = input.readUInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                devicetype_ = input.readUInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                polltime_ = input.readUInt32();
                break;
              }
              case 33: {
                bitField0_ |= 0x00000008;
                dop_ = input.readDouble();
                break;
              }
              case 41: {
                bitField0_ |= 0x00000010;
                fullscale_ = input.readDouble();
                break;
              }
              case 49: {
                bitField0_ |= 0x00000020;
                calvalue_ = input.readDouble();
                break;
              }
              case 56: {
                bitField0_ |= 0x00000040;
                op_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return XhRtu.internal_static_demo_protobuf_RTUConInfoRES_DAInfo_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return XhRtu.internal_static_demo_protobuf_RTUConInfoRES_DAInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                DAInfo.class, Builder.class);
      }

      private int bitField0_;
      public static final int CHANNO_FIELD_NUMBER = 1;
      private int channo_;
      /**
       * <pre>
       *模拟输入端口号[范围:1-8]
       * </pre>
       *
       * <code>required uint32 channo = 1;</code>
       */
      public boolean hasChanno() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       *模拟输入端口号[范围:1-8]
       * </pre>
       *
       * <code>required uint32 channo = 1;</code>
       */
      public int getChanno() {
        return channo_;
      }

      public static final int DEVICETYPE_FIELD_NUMBER = 2;
      private int devicetype_;
      /**
       * <pre>
       *设备类型[0:电流 1:电压]
       * </pre>
       *
       * <code>required uint32 devicetype = 2;</code>
       */
      public boolean hasDevicetype() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       *设备类型[0:电流 1:电压]
       * </pre>
       *
       * <code>required uint32 devicetype = 2;</code>
       */
      public int getDevicetype() {
        return devicetype_;
      }

      public static final int POLLTIME_FIELD_NUMBER = 3;
      private int polltime_;
      /**
       * <pre>
       *定时查询时间间隔[0-不启用定时查询 最大值:65536 单位:秒]	
       * </pre>
       *
       * <code>required uint32 polltime = 3;</code>
       */
      public boolean hasPolltime() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       *定时查询时间间隔[0-不启用定时查询 最大值:65536 单位:秒]	
       * </pre>
       *
       * <code>required uint32 polltime = 3;</code>
       */
      public int getPolltime() {
        return polltime_;
      }

      public static final int DOP_FIELD_NUMBER = 4;
      private double dop_;
      /**
       * <pre>
       *精度
       * </pre>
       *
       * <code>required double dop = 4;</code>
       */
      public boolean hasDop() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       *精度
       * </pre>
       *
       * <code>required double dop = 4;</code>
       */
      public double getDop() {
        return dop_;
      }

      public static final int FULLSCALE_FIELD_NUMBER = 5;
      private double fullscale_;
      /**
       * <pre>
       *满量程
       * </pre>
       *
       * <code>required double fullscale = 5;</code>
       */
      public boolean hasFullscale() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <pre>
       *满量程
       * </pre>
       *
       * <code>required double fullscale = 5;</code>
       */
      public double getFullscale() {
        return fullscale_;
      }

      public static final int CALVALUE_FIELD_NUMBER = 6;
      private double calvalue_;
      /**
       * <pre>
       *修正值
       * </pre>
       *
       * <code>required double calvalue = 6;</code>
       */
      public boolean hasCalvalue() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <pre>
       *修正值
       * </pre>
       *
       * <code>required double calvalue = 6;</code>
       */
      public double getCalvalue() {
        return calvalue_;
      }

      public static final int OP_FIELD_NUMBER = 7;
      private int op_;
      /**
       * <pre>
       *操作方式 [0:增加/更新 1-删除]		
       * </pre>
       *
       * <code>required uint32 op = 7;</code>
       */
      public boolean hasOp() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <pre>
       *操作方式 [0:增加/更新 1-删除]		
       * </pre>
       *
       * <code>required uint32 op = 7;</code>
       */
      public int getOp() {
        return op_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasChanno()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasDevicetype()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasPolltime()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasDop()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasFullscale()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasCalvalue()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasOp()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, channo_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(2, devicetype_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt32(3, polltime_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeDouble(4, dop_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeDouble(5, fullscale_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeDouble(6, calvalue_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeUInt32(7, op_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, channo_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, devicetype_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, polltime_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(4, dop_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(5, fullscale_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(6, calvalue_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(7, op_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @Override
      public boolean equals(final Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof DAInfo)) {
          return super.equals(obj);
        }
        DAInfo other = (DAInfo) obj;

        boolean result = true;
        result = result && (hasChanno() == other.hasChanno());
        if (hasChanno()) {
          result = result && (getChanno()
              == other.getChanno());
        }
        result = result && (hasDevicetype() == other.hasDevicetype());
        if (hasDevicetype()) {
          result = result && (getDevicetype()
              == other.getDevicetype());
        }
        result = result && (hasPolltime() == other.hasPolltime());
        if (hasPolltime()) {
          result = result && (getPolltime()
              == other.getPolltime());
        }
        result = result && (hasDop() == other.hasDop());
        if (hasDop()) {
          result = result && (
              Double.doubleToLongBits(getDop())
              == Double.doubleToLongBits(
                  other.getDop()));
        }
        result = result && (hasFullscale() == other.hasFullscale());
        if (hasFullscale()) {
          result = result && (
              Double.doubleToLongBits(getFullscale())
              == Double.doubleToLongBits(
                  other.getFullscale()));
        }
        result = result && (hasCalvalue() == other.hasCalvalue());
        if (hasCalvalue()) {
          result = result && (
              Double.doubleToLongBits(getCalvalue())
              == Double.doubleToLongBits(
                  other.getCalvalue()));
        }
        result = result && (hasOp() == other.hasOp());
        if (hasOp()) {
          result = result && (getOp()
              == other.getOp());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasChanno()) {
          hash = (37 * hash) + CHANNO_FIELD_NUMBER;
          hash = (53 * hash) + getChanno();
        }
        if (hasDevicetype()) {
          hash = (37 * hash) + DEVICETYPE_FIELD_NUMBER;
          hash = (53 * hash) + getDevicetype();
        }
        if (hasPolltime()) {
          hash = (37 * hash) + POLLTIME_FIELD_NUMBER;
          hash = (53 * hash) + getPolltime();
        }
        if (hasDop()) {
          hash = (37 * hash) + DOP_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              Double.doubleToLongBits(getDop()));
        }
        if (hasFullscale()) {
          hash = (37 * hash) + FULLSCALE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              Double.doubleToLongBits(getFullscale()));
        }
        if (hasCalvalue()) {
          hash = (37 * hash) + CALVALUE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
              Double.doubleToLongBits(getCalvalue()));
        }
        if (hasOp()) {
          hash = (37 * hash) + OP_FIELD_NUMBER;
          hash = (53 * hash) + getOp();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static DAInfo parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static DAInfo parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static DAInfo parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static DAInfo parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static DAInfo parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static DAInfo parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static DAInfo parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static DAInfo parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static DAInfo parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static DAInfo parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static DAInfo parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static DAInfo parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(DAInfo prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @Override
      protected Builder newBuilderForType(
          BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       *模拟输入端口配置参数
       * </pre>
       *
       * Protobuf type {@code demo.protobuf.RTUConInfoRES.DAInfo}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:demo.protobuf.RTUConInfoRES.DAInfo)
          DAInfoOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return XhRtu.internal_static_demo_protobuf_RTUConInfoRES_DAInfo_descriptor;
        }

        protected FieldAccessorTable
            internalGetFieldAccessorTable() {
          return XhRtu.internal_static_demo_protobuf_RTUConInfoRES_DAInfo_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  DAInfo.class, Builder.class);
        }

        // Construct using demo.protobuf.XhRtu.RTUConInfoRES.DAInfo.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          channo_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          devicetype_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          polltime_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          dop_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000008);
          fullscale_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000010);
          calvalue_ = 0D;
          bitField0_ = (bitField0_ & ~0x00000020);
          op_ = 0;
          bitField0_ = (bitField0_ & ~0x00000040);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return XhRtu.internal_static_demo_protobuf_RTUConInfoRES_DAInfo_descriptor;
        }

        public DAInfo getDefaultInstanceForType() {
          return DAInfo.getDefaultInstance();
        }

        public DAInfo build() {
          DAInfo result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public DAInfo buildPartial() {
          DAInfo result = new DAInfo(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.channo_ = channo_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.devicetype_ = devicetype_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.polltime_ = polltime_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.dop_ = dop_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.fullscale_ = fullscale_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.calvalue_ = calvalue_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000040;
          }
          result.op_ = op_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof DAInfo) {
            return mergeFrom((DAInfo)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(DAInfo other) {
          if (other == DAInfo.getDefaultInstance()) return this;
          if (other.hasChanno()) {
            setChanno(other.getChanno());
          }
          if (other.hasDevicetype()) {
            setDevicetype(other.getDevicetype());
          }
          if (other.hasPolltime()) {
            setPolltime(other.getPolltime());
          }
          if (other.hasDop()) {
            setDop(other.getDop());
          }
          if (other.hasFullscale()) {
            setFullscale(other.getFullscale());
          }
          if (other.hasCalvalue()) {
            setCalvalue(other.getCalvalue());
          }
          if (other.hasOp()) {
            setOp(other.getOp());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          if (!hasChanno()) {
            return false;
          }
          if (!hasDevicetype()) {
            return false;
          }
          if (!hasPolltime()) {
            return false;
          }
          if (!hasDop()) {
            return false;
          }
          if (!hasFullscale()) {
            return false;
          }
          if (!hasCalvalue()) {
            return false;
          }
          if (!hasOp()) {
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          DAInfo parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (DAInfo) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int channo_ ;
        /**
         * <pre>
         *模拟输入端口号[范围:1-8]
         * </pre>
         *
         * <code>required uint32 channo = 1;</code>
         */
        public boolean hasChanno() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <pre>
         *模拟输入端口号[范围:1-8]
         * </pre>
         *
         * <code>required uint32 channo = 1;</code>
         */
        public int getChanno() {
          return channo_;
        }
        /**
         * <pre>
         *模拟输入端口号[范围:1-8]
         * </pre>
         *
         * <code>required uint32 channo = 1;</code>
         */
        public Builder setChanno(int value) {
          bitField0_ |= 0x00000001;
          channo_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *模拟输入端口号[范围:1-8]
         * </pre>
         *
         * <code>required uint32 channo = 1;</code>
         */
        public Builder clearChanno() {
          bitField0_ = (bitField0_ & ~0x00000001);
          channo_ = 0;
          onChanged();
          return this;
        }

        private int devicetype_ ;
        /**
         * <pre>
         *设备类型[0:电流 1:电压]
         * </pre>
         *
         * <code>required uint32 devicetype = 2;</code>
         */
        public boolean hasDevicetype() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <pre>
         *设备类型[0:电流 1:电压]
         * </pre>
         *
         * <code>required uint32 devicetype = 2;</code>
         */
        public int getDevicetype() {
          return devicetype_;
        }
        /**
         * <pre>
         *设备类型[0:电流 1:电压]
         * </pre>
         *
         * <code>required uint32 devicetype = 2;</code>
         */
        public Builder setDevicetype(int value) {
          bitField0_ |= 0x00000002;
          devicetype_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *设备类型[0:电流 1:电压]
         * </pre>
         *
         * <code>required uint32 devicetype = 2;</code>
         */
        public Builder clearDevicetype() {
          bitField0_ = (bitField0_ & ~0x00000002);
          devicetype_ = 0;
          onChanged();
          return this;
        }

        private int polltime_ ;
        /**
         * <pre>
         *定时查询时间间隔[0-不启用定时查询 最大值:65536 单位:秒]	
         * </pre>
         *
         * <code>required uint32 polltime = 3;</code>
         */
        public boolean hasPolltime() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <pre>
         *定时查询时间间隔[0-不启用定时查询 最大值:65536 单位:秒]	
         * </pre>
         *
         * <code>required uint32 polltime = 3;</code>
         */
        public int getPolltime() {
          return polltime_;
        }
        /**
         * <pre>
         *定时查询时间间隔[0-不启用定时查询 最大值:65536 单位:秒]	
         * </pre>
         *
         * <code>required uint32 polltime = 3;</code>
         */
        public Builder setPolltime(int value) {
          bitField0_ |= 0x00000004;
          polltime_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *定时查询时间间隔[0-不启用定时查询 最大值:65536 单位:秒]	
         * </pre>
         *
         * <code>required uint32 polltime = 3;</code>
         */
        public Builder clearPolltime() {
          bitField0_ = (bitField0_ & ~0x00000004);
          polltime_ = 0;
          onChanged();
          return this;
        }

        private double dop_ ;
        /**
         * <pre>
         *精度
         * </pre>
         *
         * <code>required double dop = 4;</code>
         */
        public boolean hasDop() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <pre>
         *精度
         * </pre>
         *
         * <code>required double dop = 4;</code>
         */
        public double getDop() {
          return dop_;
        }
        /**
         * <pre>
         *精度
         * </pre>
         *
         * <code>required double dop = 4;</code>
         */
        public Builder setDop(double value) {
          bitField0_ |= 0x00000008;
          dop_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *精度
         * </pre>
         *
         * <code>required double dop = 4;</code>
         */
        public Builder clearDop() {
          bitField0_ = (bitField0_ & ~0x00000008);
          dop_ = 0D;
          onChanged();
          return this;
        }

        private double fullscale_ ;
        /**
         * <pre>
         *满量程
         * </pre>
         *
         * <code>required double fullscale = 5;</code>
         */
        public boolean hasFullscale() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <pre>
         *满量程
         * </pre>
         *
         * <code>required double fullscale = 5;</code>
         */
        public double getFullscale() {
          return fullscale_;
        }
        /**
         * <pre>
         *满量程
         * </pre>
         *
         * <code>required double fullscale = 5;</code>
         */
        public Builder setFullscale(double value) {
          bitField0_ |= 0x00000010;
          fullscale_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *满量程
         * </pre>
         *
         * <code>required double fullscale = 5;</code>
         */
        public Builder clearFullscale() {
          bitField0_ = (bitField0_ & ~0x00000010);
          fullscale_ = 0D;
          onChanged();
          return this;
        }

        private double calvalue_ ;
        /**
         * <pre>
         *修正值
         * </pre>
         *
         * <code>required double calvalue = 6;</code>
         */
        public boolean hasCalvalue() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <pre>
         *修正值
         * </pre>
         *
         * <code>required double calvalue = 6;</code>
         */
        public double getCalvalue() {
          return calvalue_;
        }
        /**
         * <pre>
         *修正值
         * </pre>
         *
         * <code>required double calvalue = 6;</code>
         */
        public Builder setCalvalue(double value) {
          bitField0_ |= 0x00000020;
          calvalue_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *修正值
         * </pre>
         *
         * <code>required double calvalue = 6;</code>
         */
        public Builder clearCalvalue() {
          bitField0_ = (bitField0_ & ~0x00000020);
          calvalue_ = 0D;
          onChanged();
          return this;
        }

        private int op_ ;
        /**
         * <pre>
         *操作方式 [0:增加/更新 1-删除]		
         * </pre>
         *
         * <code>required uint32 op = 7;</code>
         */
        public boolean hasOp() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <pre>
         *操作方式 [0:增加/更新 1-删除]		
         * </pre>
         *
         * <code>required uint32 op = 7;</code>
         */
        public int getOp() {
          return op_;
        }
        /**
         * <pre>
         *操作方式 [0:增加/更新 1-删除]		
         * </pre>
         *
         * <code>required uint32 op = 7;</code>
         */
        public Builder setOp(int value) {
          bitField0_ |= 0x00000040;
          op_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *操作方式 [0:增加/更新 1-删除]		
         * </pre>
         *
         * <code>required uint32 op = 7;</code>
         */
        public Builder clearOp() {
          bitField0_ = (bitField0_ & ~0x00000040);
          op_ = 0;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:demo.protobuf.RTUConInfoRES.DAInfo)
      }

      // @@protoc_insertion_point(class_scope:demo.protobuf.RTUConInfoRES.DAInfo)
      private static final DAInfo DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new DAInfo();
      }

      public static DAInfo getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @Deprecated public static final com.google.protobuf.Parser<DAInfo>
          PARSER = new com.google.protobuf.AbstractParser<DAInfo>() {
        public DAInfo parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new DAInfo(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<DAInfo> parser() {
        return PARSER;
      }

      @Override
      public com.google.protobuf.Parser<DAInfo> getParserForType() {
        return PARSER;
      }

      public DAInfo getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface USERInfoOrBuilder extends
        // @@protoc_insertion_point(interface_extends:demo.protobuf.RTUConInfoRES.USERInfo)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       *RTU ID号
       * </pre>
       *
       * <code>required uint32 id = 1;</code>
       */
      boolean hasId();
      /**
       * <pre>
       *RTU ID号
       * </pre>
       *
       * <code>required uint32 id = 1;</code>
       */
      int getId();

      /**
       * <pre>
       *中心IP	
       * </pre>
       *
       * <code>required string centerip = 2;</code>
       */
      boolean hasCenterip();
      /**
       * <pre>
       *中心IP	
       * </pre>
       *
       * <code>required string centerip = 2;</code>
       */
      String getCenterip();
      /**
       * <pre>
       *中心IP	
       * </pre>
       *
       * <code>required string centerip = 2;</code>
       */
      com.google.protobuf.ByteString
          getCenteripBytes();

      /**
       * <pre>
       *中心端口
       * </pre>
       *
       * <code>required uint32 centerport = 3;</code>
       */
      boolean hasCenterport();
      /**
       * <pre>
       *中心端口
       * </pre>
       *
       * <code>required uint32 centerport = 3;</code>
       */
      int getCenterport();

      /**
       * <pre>
       *RTU工作模式[0:UDP 1:TCP]
       * </pre>
       *
       * <code>required uint32 workmode = 4;</code>
       */
      boolean hasWorkmode();
      /**
       * <pre>
       *RTU工作模式[0:UDP 1:TCP]
       * </pre>
       *
       * <code>required uint32 workmode = 4;</code>
       */
      int getWorkmode();

      /**
       * <pre>
       *RTU本机ip
       * </pre>
       *
       * <code>required string localip = 5;</code>
       */
      boolean hasLocalip();
      /**
       * <pre>
       *RTU本机ip
       * </pre>
       *
       * <code>required string localip = 5;</code>
       */
      String getLocalip();
      /**
       * <pre>
       *RTU本机ip
       * </pre>
       *
       * <code>required string localip = 5;</code>
       */
      com.google.protobuf.ByteString
          getLocalipBytes();

      /**
       * <pre>
       *RTU本机掩码
       * </pre>
       *
       * <code>required string localnetmask = 6;</code>
       */
      boolean hasLocalnetmask();
      /**
       * <pre>
       *RTU本机掩码
       * </pre>
       *
       * <code>required string localnetmask = 6;</code>
       */
      String getLocalnetmask();
      /**
       * <pre>
       *RTU本机掩码
       * </pre>
       *
       * <code>required string localnetmask = 6;</code>
       */
      com.google.protobuf.ByteString
          getLocalnetmaskBytes();

      /**
       * <pre>
       *RTU本机网关
       * </pre>
       *
       * <code>required string localgw = 7;</code>
       */
      boolean hasLocalgw();
      /**
       * <pre>
       *RTU本机网关
       * </pre>
       *
       * <code>required string localgw = 7;</code>
       */
      String getLocalgw();
      /**
       * <pre>
       *RTU本机网关
       * </pre>
       *
       * <code>required string localgw = 7;</code>
       */
      com.google.protobuf.ByteString
          getLocalgwBytes();

      /**
       * <pre>
       *配置完成是否重启RTU[0:不重启 1:重启]
       * </pre>
       *
       * <code>required uint32 isreboot = 8;</code>
       */
      boolean hasIsreboot();
      /**
       * <pre>
       *配置完成是否重启RTU[0:不重启 1:重启]
       * </pre>
       *
       * <code>required uint32 isreboot = 8;</code>
       */
      int getIsreboot();
    }
    /**
     * <pre>
     *用户数据配置参数
     * </pre>
     *
     * Protobuf type {@code demo.protobuf.RTUConInfoRES.USERInfo}
     */
    public  static final class USERInfo extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:demo.protobuf.RTUConInfoRES.USERInfo)
        USERInfoOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use USERInfo.newBuilder() to construct.
      private USERInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private USERInfo() {
        id_ = 0;
        centerip_ = "";
        centerport_ = 0;
        workmode_ = 0;
        localip_ = "";
        localnetmask_ = "";
        localgw_ = "";
        isreboot_ = 0;
      }

      @Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private USERInfo(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                id_ = input.readUInt32();
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                centerip_ = bs;
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                centerport_ = input.readUInt32();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                workmode_ = input.readUInt32();
                break;
              }
              case 42: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000010;
                localip_ = bs;
                break;
              }
              case 50: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000020;
                localnetmask_ = bs;
                break;
              }
              case 58: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000040;
                localgw_ = bs;
                break;
              }
              case 64: {
                bitField0_ |= 0x00000080;
                isreboot_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return XhRtu.internal_static_demo_protobuf_RTUConInfoRES_USERInfo_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return XhRtu.internal_static_demo_protobuf_RTUConInfoRES_USERInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                USERInfo.class, Builder.class);
      }

      private int bitField0_;
      public static final int ID_FIELD_NUMBER = 1;
      private int id_;
      /**
       * <pre>
       *RTU ID号
       * </pre>
       *
       * <code>required uint32 id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       *RTU ID号
       * </pre>
       *
       * <code>required uint32 id = 1;</code>
       */
      public int getId() {
        return id_;
      }

      public static final int CENTERIP_FIELD_NUMBER = 2;
      private volatile Object centerip_;
      /**
       * <pre>
       *中心IP	
       * </pre>
       *
       * <code>required string centerip = 2;</code>
       */
      public boolean hasCenterip() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       *中心IP	
       * </pre>
       *
       * <code>required string centerip = 2;</code>
       */
      public String getCenterip() {
        Object ref = centerip_;
        if (ref instanceof String) {
          return (String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            centerip_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       *中心IP	
       * </pre>
       *
       * <code>required string centerip = 2;</code>
       */
      public com.google.protobuf.ByteString
          getCenteripBytes() {
        Object ref = centerip_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          centerip_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int CENTERPORT_FIELD_NUMBER = 3;
      private int centerport_;
      /**
       * <pre>
       *中心端口
       * </pre>
       *
       * <code>required uint32 centerport = 3;</code>
       */
      public boolean hasCenterport() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       *中心端口
       * </pre>
       *
       * <code>required uint32 centerport = 3;</code>
       */
      public int getCenterport() {
        return centerport_;
      }

      public static final int WORKMODE_FIELD_NUMBER = 4;
      private int workmode_;
      /**
       * <pre>
       *RTU工作模式[0:UDP 1:TCP]
       * </pre>
       *
       * <code>required uint32 workmode = 4;</code>
       */
      public boolean hasWorkmode() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       *RTU工作模式[0:UDP 1:TCP]
       * </pre>
       *
       * <code>required uint32 workmode = 4;</code>
       */
      public int getWorkmode() {
        return workmode_;
      }

      public static final int LOCALIP_FIELD_NUMBER = 5;
      private volatile Object localip_;
      /**
       * <pre>
       *RTU本机ip
       * </pre>
       *
       * <code>required string localip = 5;</code>
       */
      public boolean hasLocalip() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <pre>
       *RTU本机ip
       * </pre>
       *
       * <code>required string localip = 5;</code>
       */
      public String getLocalip() {
        Object ref = localip_;
        if (ref instanceof String) {
          return (String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            localip_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       *RTU本机ip
       * </pre>
       *
       * <code>required string localip = 5;</code>
       */
      public com.google.protobuf.ByteString
          getLocalipBytes() {
        Object ref = localip_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          localip_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int LOCALNETMASK_FIELD_NUMBER = 6;
      private volatile Object localnetmask_;
      /**
       * <pre>
       *RTU本机掩码
       * </pre>
       *
       * <code>required string localnetmask = 6;</code>
       */
      public boolean hasLocalnetmask() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <pre>
       *RTU本机掩码
       * </pre>
       *
       * <code>required string localnetmask = 6;</code>
       */
      public String getLocalnetmask() {
        Object ref = localnetmask_;
        if (ref instanceof String) {
          return (String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            localnetmask_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       *RTU本机掩码
       * </pre>
       *
       * <code>required string localnetmask = 6;</code>
       */
      public com.google.protobuf.ByteString
          getLocalnetmaskBytes() {
        Object ref = localnetmask_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          localnetmask_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int LOCALGW_FIELD_NUMBER = 7;
      private volatile Object localgw_;
      /**
       * <pre>
       *RTU本机网关
       * </pre>
       *
       * <code>required string localgw = 7;</code>
       */
      public boolean hasLocalgw() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <pre>
       *RTU本机网关
       * </pre>
       *
       * <code>required string localgw = 7;</code>
       */
      public String getLocalgw() {
        Object ref = localgw_;
        if (ref instanceof String) {
          return (String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            localgw_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       *RTU本机网关
       * </pre>
       *
       * <code>required string localgw = 7;</code>
       */
      public com.google.protobuf.ByteString
          getLocalgwBytes() {
        Object ref = localgw_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          localgw_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int ISREBOOT_FIELD_NUMBER = 8;
      private int isreboot_;
      /**
       * <pre>
       *配置完成是否重启RTU[0:不重启 1:重启]
       * </pre>
       *
       * <code>required uint32 isreboot = 8;</code>
       */
      public boolean hasIsreboot() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <pre>
       *配置完成是否重启RTU[0:不重启 1:重启]
       * </pre>
       *
       * <code>required uint32 isreboot = 8;</code>
       */
      public int getIsreboot() {
        return isreboot_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasId()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasCenterip()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasCenterport()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasWorkmode()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasLocalip()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasLocalnetmask()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasLocalgw()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasIsreboot()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, id_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, centerip_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt32(3, centerport_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeUInt32(4, workmode_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 5, localip_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 6, localnetmask_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 7, localgw_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          output.writeUInt32(8, isreboot_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, id_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, centerip_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, centerport_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(4, workmode_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, localip_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, localnetmask_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, localgw_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(8, isreboot_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @Override
      public boolean equals(final Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof USERInfo)) {
          return super.equals(obj);
        }
        USERInfo other = (USERInfo) obj;

        boolean result = true;
        result = result && (hasId() == other.hasId());
        if (hasId()) {
          result = result && (getId()
              == other.getId());
        }
        result = result && (hasCenterip() == other.hasCenterip());
        if (hasCenterip()) {
          result = result && getCenterip()
              .equals(other.getCenterip());
        }
        result = result && (hasCenterport() == other.hasCenterport());
        if (hasCenterport()) {
          result = result && (getCenterport()
              == other.getCenterport());
        }
        result = result && (hasWorkmode() == other.hasWorkmode());
        if (hasWorkmode()) {
          result = result && (getWorkmode()
              == other.getWorkmode());
        }
        result = result && (hasLocalip() == other.hasLocalip());
        if (hasLocalip()) {
          result = result && getLocalip()
              .equals(other.getLocalip());
        }
        result = result && (hasLocalnetmask() == other.hasLocalnetmask());
        if (hasLocalnetmask()) {
          result = result && getLocalnetmask()
              .equals(other.getLocalnetmask());
        }
        result = result && (hasLocalgw() == other.hasLocalgw());
        if (hasLocalgw()) {
          result = result && getLocalgw()
              .equals(other.getLocalgw());
        }
        result = result && (hasIsreboot() == other.hasIsreboot());
        if (hasIsreboot()) {
          result = result && (getIsreboot()
              == other.getIsreboot());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasId()) {
          hash = (37 * hash) + ID_FIELD_NUMBER;
          hash = (53 * hash) + getId();
        }
        if (hasCenterip()) {
          hash = (37 * hash) + CENTERIP_FIELD_NUMBER;
          hash = (53 * hash) + getCenterip().hashCode();
        }
        if (hasCenterport()) {
          hash = (37 * hash) + CENTERPORT_FIELD_NUMBER;
          hash = (53 * hash) + getCenterport();
        }
        if (hasWorkmode()) {
          hash = (37 * hash) + WORKMODE_FIELD_NUMBER;
          hash = (53 * hash) + getWorkmode();
        }
        if (hasLocalip()) {
          hash = (37 * hash) + LOCALIP_FIELD_NUMBER;
          hash = (53 * hash) + getLocalip().hashCode();
        }
        if (hasLocalnetmask()) {
          hash = (37 * hash) + LOCALNETMASK_FIELD_NUMBER;
          hash = (53 * hash) + getLocalnetmask().hashCode();
        }
        if (hasLocalgw()) {
          hash = (37 * hash) + LOCALGW_FIELD_NUMBER;
          hash = (53 * hash) + getLocalgw().hashCode();
        }
        if (hasIsreboot()) {
          hash = (37 * hash) + ISREBOOT_FIELD_NUMBER;
          hash = (53 * hash) + getIsreboot();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static USERInfo parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static USERInfo parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static USERInfo parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static USERInfo parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static USERInfo parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static USERInfo parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static USERInfo parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static USERInfo parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static USERInfo parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static USERInfo parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static USERInfo parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static USERInfo parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(USERInfo prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @Override
      protected Builder newBuilderForType(
          BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       *用户数据配置参数
       * </pre>
       *
       * Protobuf type {@code demo.protobuf.RTUConInfoRES.USERInfo}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:demo.protobuf.RTUConInfoRES.USERInfo)
          USERInfoOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return XhRtu.internal_static_demo_protobuf_RTUConInfoRES_USERInfo_descriptor;
        }

        protected FieldAccessorTable
            internalGetFieldAccessorTable() {
          return XhRtu.internal_static_demo_protobuf_RTUConInfoRES_USERInfo_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  USERInfo.class, Builder.class);
        }

        // Construct using demo.protobuf.XhRtu.RTUConInfoRES.USERInfo.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          id_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          centerip_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          centerport_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          workmode_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          localip_ = "";
          bitField0_ = (bitField0_ & ~0x00000010);
          localnetmask_ = "";
          bitField0_ = (bitField0_ & ~0x00000020);
          localgw_ = "";
          bitField0_ = (bitField0_ & ~0x00000040);
          isreboot_ = 0;
          bitField0_ = (bitField0_ & ~0x00000080);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return XhRtu.internal_static_demo_protobuf_RTUConInfoRES_USERInfo_descriptor;
        }

        public USERInfo getDefaultInstanceForType() {
          return USERInfo.getDefaultInstance();
        }

        public USERInfo build() {
          USERInfo result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public USERInfo buildPartial() {
          USERInfo result = new USERInfo(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.id_ = id_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.centerip_ = centerip_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.centerport_ = centerport_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.workmode_ = workmode_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.localip_ = localip_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.localnetmask_ = localnetmask_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000040;
          }
          result.localgw_ = localgw_;
          if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
            to_bitField0_ |= 0x00000080;
          }
          result.isreboot_ = isreboot_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof USERInfo) {
            return mergeFrom((USERInfo)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(USERInfo other) {
          if (other == USERInfo.getDefaultInstance()) return this;
          if (other.hasId()) {
            setId(other.getId());
          }
          if (other.hasCenterip()) {
            bitField0_ |= 0x00000002;
            centerip_ = other.centerip_;
            onChanged();
          }
          if (other.hasCenterport()) {
            setCenterport(other.getCenterport());
          }
          if (other.hasWorkmode()) {
            setWorkmode(other.getWorkmode());
          }
          if (other.hasLocalip()) {
            bitField0_ |= 0x00000010;
            localip_ = other.localip_;
            onChanged();
          }
          if (other.hasLocalnetmask()) {
            bitField0_ |= 0x00000020;
            localnetmask_ = other.localnetmask_;
            onChanged();
          }
          if (other.hasLocalgw()) {
            bitField0_ |= 0x00000040;
            localgw_ = other.localgw_;
            onChanged();
          }
          if (other.hasIsreboot()) {
            setIsreboot(other.getIsreboot());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          if (!hasId()) {
            return false;
          }
          if (!hasCenterip()) {
            return false;
          }
          if (!hasCenterport()) {
            return false;
          }
          if (!hasWorkmode()) {
            return false;
          }
          if (!hasLocalip()) {
            return false;
          }
          if (!hasLocalnetmask()) {
            return false;
          }
          if (!hasLocalgw()) {
            return false;
          }
          if (!hasIsreboot()) {
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          USERInfo parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (USERInfo) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int id_ ;
        /**
         * <pre>
         *RTU ID号
         * </pre>
         *
         * <code>required uint32 id = 1;</code>
         */
        public boolean hasId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <pre>
         *RTU ID号
         * </pre>
         *
         * <code>required uint32 id = 1;</code>
         */
        public int getId() {
          return id_;
        }
        /**
         * <pre>
         *RTU ID号
         * </pre>
         *
         * <code>required uint32 id = 1;</code>
         */
        public Builder setId(int value) {
          bitField0_ |= 0x00000001;
          id_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *RTU ID号
         * </pre>
         *
         * <code>required uint32 id = 1;</code>
         */
        public Builder clearId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          id_ = 0;
          onChanged();
          return this;
        }

        private Object centerip_ = "";
        /**
         * <pre>
         *中心IP	
         * </pre>
         *
         * <code>required string centerip = 2;</code>
         */
        public boolean hasCenterip() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <pre>
         *中心IP	
         * </pre>
         *
         * <code>required string centerip = 2;</code>
         */
        public String getCenterip() {
          Object ref = centerip_;
          if (!(ref instanceof String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              centerip_ = s;
            }
            return s;
          } else {
            return (String) ref;
          }
        }
        /**
         * <pre>
         *中心IP	
         * </pre>
         *
         * <code>required string centerip = 2;</code>
         */
        public com.google.protobuf.ByteString
            getCenteripBytes() {
          Object ref = centerip_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (String) ref);
            centerip_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         *中心IP	
         * </pre>
         *
         * <code>required string centerip = 2;</code>
         */
        public Builder setCenterip(
            String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          centerip_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *中心IP	
         * </pre>
         *
         * <code>required string centerip = 2;</code>
         */
        public Builder clearCenterip() {
          bitField0_ = (bitField0_ & ~0x00000002);
          centerip_ = getDefaultInstance().getCenterip();
          onChanged();
          return this;
        }
        /**
         * <pre>
         *中心IP	
         * </pre>
         *
         * <code>required string centerip = 2;</code>
         */
        public Builder setCenteripBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          centerip_ = value;
          onChanged();
          return this;
        }

        private int centerport_ ;
        /**
         * <pre>
         *中心端口
         * </pre>
         *
         * <code>required uint32 centerport = 3;</code>
         */
        public boolean hasCenterport() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <pre>
         *中心端口
         * </pre>
         *
         * <code>required uint32 centerport = 3;</code>
         */
        public int getCenterport() {
          return centerport_;
        }
        /**
         * <pre>
         *中心端口
         * </pre>
         *
         * <code>required uint32 centerport = 3;</code>
         */
        public Builder setCenterport(int value) {
          bitField0_ |= 0x00000004;
          centerport_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *中心端口
         * </pre>
         *
         * <code>required uint32 centerport = 3;</code>
         */
        public Builder clearCenterport() {
          bitField0_ = (bitField0_ & ~0x00000004);
          centerport_ = 0;
          onChanged();
          return this;
        }

        private int workmode_ ;
        /**
         * <pre>
         *RTU工作模式[0:UDP 1:TCP]
         * </pre>
         *
         * <code>required uint32 workmode = 4;</code>
         */
        public boolean hasWorkmode() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <pre>
         *RTU工作模式[0:UDP 1:TCP]
         * </pre>
         *
         * <code>required uint32 workmode = 4;</code>
         */
        public int getWorkmode() {
          return workmode_;
        }
        /**
         * <pre>
         *RTU工作模式[0:UDP 1:TCP]
         * </pre>
         *
         * <code>required uint32 workmode = 4;</code>
         */
        public Builder setWorkmode(int value) {
          bitField0_ |= 0x00000008;
          workmode_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *RTU工作模式[0:UDP 1:TCP]
         * </pre>
         *
         * <code>required uint32 workmode = 4;</code>
         */
        public Builder clearWorkmode() {
          bitField0_ = (bitField0_ & ~0x00000008);
          workmode_ = 0;
          onChanged();
          return this;
        }

        private Object localip_ = "";
        /**
         * <pre>
         *RTU本机ip
         * </pre>
         *
         * <code>required string localip = 5;</code>
         */
        public boolean hasLocalip() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <pre>
         *RTU本机ip
         * </pre>
         *
         * <code>required string localip = 5;</code>
         */
        public String getLocalip() {
          Object ref = localip_;
          if (!(ref instanceof String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              localip_ = s;
            }
            return s;
          } else {
            return (String) ref;
          }
        }
        /**
         * <pre>
         *RTU本机ip
         * </pre>
         *
         * <code>required string localip = 5;</code>
         */
        public com.google.protobuf.ByteString
            getLocalipBytes() {
          Object ref = localip_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (String) ref);
            localip_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         *RTU本机ip
         * </pre>
         *
         * <code>required string localip = 5;</code>
         */
        public Builder setLocalip(
            String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
          localip_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *RTU本机ip
         * </pre>
         *
         * <code>required string localip = 5;</code>
         */
        public Builder clearLocalip() {
          bitField0_ = (bitField0_ & ~0x00000010);
          localip_ = getDefaultInstance().getLocalip();
          onChanged();
          return this;
        }
        /**
         * <pre>
         *RTU本机ip
         * </pre>
         *
         * <code>required string localip = 5;</code>
         */
        public Builder setLocalipBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
          localip_ = value;
          onChanged();
          return this;
        }

        private Object localnetmask_ = "";
        /**
         * <pre>
         *RTU本机掩码
         * </pre>
         *
         * <code>required string localnetmask = 6;</code>
         */
        public boolean hasLocalnetmask() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <pre>
         *RTU本机掩码
         * </pre>
         *
         * <code>required string localnetmask = 6;</code>
         */
        public String getLocalnetmask() {
          Object ref = localnetmask_;
          if (!(ref instanceof String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              localnetmask_ = s;
            }
            return s;
          } else {
            return (String) ref;
          }
        }
        /**
         * <pre>
         *RTU本机掩码
         * </pre>
         *
         * <code>required string localnetmask = 6;</code>
         */
        public com.google.protobuf.ByteString
            getLocalnetmaskBytes() {
          Object ref = localnetmask_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (String) ref);
            localnetmask_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         *RTU本机掩码
         * </pre>
         *
         * <code>required string localnetmask = 6;</code>
         */
        public Builder setLocalnetmask(
            String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
          localnetmask_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *RTU本机掩码
         * </pre>
         *
         * <code>required string localnetmask = 6;</code>
         */
        public Builder clearLocalnetmask() {
          bitField0_ = (bitField0_ & ~0x00000020);
          localnetmask_ = getDefaultInstance().getLocalnetmask();
          onChanged();
          return this;
        }
        /**
         * <pre>
         *RTU本机掩码
         * </pre>
         *
         * <code>required string localnetmask = 6;</code>
         */
        public Builder setLocalnetmaskBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
          localnetmask_ = value;
          onChanged();
          return this;
        }

        private Object localgw_ = "";
        /**
         * <pre>
         *RTU本机网关
         * </pre>
         *
         * <code>required string localgw = 7;</code>
         */
        public boolean hasLocalgw() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <pre>
         *RTU本机网关
         * </pre>
         *
         * <code>required string localgw = 7;</code>
         */
        public String getLocalgw() {
          Object ref = localgw_;
          if (!(ref instanceof String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              localgw_ = s;
            }
            return s;
          } else {
            return (String) ref;
          }
        }
        /**
         * <pre>
         *RTU本机网关
         * </pre>
         *
         * <code>required string localgw = 7;</code>
         */
        public com.google.protobuf.ByteString
            getLocalgwBytes() {
          Object ref = localgw_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (String) ref);
            localgw_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         *RTU本机网关
         * </pre>
         *
         * <code>required string localgw = 7;</code>
         */
        public Builder setLocalgw(
            String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
          localgw_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *RTU本机网关
         * </pre>
         *
         * <code>required string localgw = 7;</code>
         */
        public Builder clearLocalgw() {
          bitField0_ = (bitField0_ & ~0x00000040);
          localgw_ = getDefaultInstance().getLocalgw();
          onChanged();
          return this;
        }
        /**
         * <pre>
         *RTU本机网关
         * </pre>
         *
         * <code>required string localgw = 7;</code>
         */
        public Builder setLocalgwBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
          localgw_ = value;
          onChanged();
          return this;
        }

        private int isreboot_ ;
        /**
         * <pre>
         *配置完成是否重启RTU[0:不重启 1:重启]
         * </pre>
         *
         * <code>required uint32 isreboot = 8;</code>
         */
        public boolean hasIsreboot() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        /**
         * <pre>
         *配置完成是否重启RTU[0:不重启 1:重启]
         * </pre>
         *
         * <code>required uint32 isreboot = 8;</code>
         */
        public int getIsreboot() {
          return isreboot_;
        }
        /**
         * <pre>
         *配置完成是否重启RTU[0:不重启 1:重启]
         * </pre>
         *
         * <code>required uint32 isreboot = 8;</code>
         */
        public Builder setIsreboot(int value) {
          bitField0_ |= 0x00000080;
          isreboot_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *配置完成是否重启RTU[0:不重启 1:重启]
         * </pre>
         *
         * <code>required uint32 isreboot = 8;</code>
         */
        public Builder clearIsreboot() {
          bitField0_ = (bitField0_ & ~0x00000080);
          isreboot_ = 0;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:demo.protobuf.RTUConInfoRES.USERInfo)
      }

      // @@protoc_insertion_point(class_scope:demo.protobuf.RTUConInfoRES.USERInfo)
      private static final USERInfo DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new USERInfo();
      }

      public static USERInfo getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @Deprecated public static final com.google.protobuf.Parser<USERInfo>
          PARSER = new com.google.protobuf.AbstractParser<USERInfo>() {
        public USERInfo parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new USERInfo(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<USERInfo> parser() {
        return PARSER;
      }

      @Override
      public com.google.protobuf.Parser<USERInfo> getParserForType() {
        return PARSER;
      }

      public USERInfo getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int RTUID_FIELD_NUMBER = 1;
    private int rtuid_;
    /**
     * <pre>
     *RTU ID
     * </pre>
     *
     * <code>required uint32 rtuid = 1;</code>
     */
    public boolean hasRtuid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *RTU ID
     * </pre>
     *
     * <code>required uint32 rtuid = 1;</code>
     */
    public int getRtuid() {
      return rtuid_;
    }

    public static final int RS485_FIELD_NUMBER = 2;
    private java.util.List<RS485Info> rs485_;
    /**
     * <pre>
     *广播RS485端口参数[可重复]
     * </pre>
     *
     * <code>repeated .demo.protobuf.RTUConInfoRES.RS485Info rs485 = 2;</code>
     */
    public java.util.List<RS485Info> getRs485List() {
      return rs485_;
    }
    /**
     * <pre>
     *广播RS485端口参数[可重复]
     * </pre>
     *
     * <code>repeated .demo.protobuf.RTUConInfoRES.RS485Info rs485 = 2;</code>
     */
    public java.util.List<? extends RS485InfoOrBuilder>
        getRs485OrBuilderList() {
      return rs485_;
    }
    /**
     * <pre>
     *广播RS485端口参数[可重复]
     * </pre>
     *
     * <code>repeated .demo.protobuf.RTUConInfoRES.RS485Info rs485 = 2;</code>
     */
    public int getRs485Count() {
      return rs485_.size();
    }
    /**
     * <pre>
     *广播RS485端口参数[可重复]
     * </pre>
     *
     * <code>repeated .demo.protobuf.RTUConInfoRES.RS485Info rs485 = 2;</code>
     */
    public RS485Info getRs485(int index) {
      return rs485_.get(index);
    }
    /**
     * <pre>
     *广播RS485端口参数[可重复]
     * </pre>
     *
     * <code>repeated .demo.protobuf.RTUConInfoRES.RS485Info rs485 = 2;</code>
     */
    public RS485InfoOrBuilder getRs485OrBuilder(
        int index) {
      return rs485_.get(index);
    }

    public static final int DA_FIELD_NUMBER = 3;
    private java.util.List<DAInfo> da_;
    /**
     * <pre>
     *广播模拟输入端口参数[可重复]
     * </pre>
     *
     * <code>repeated .demo.protobuf.RTUConInfoRES.DAInfo da = 3;</code>
     */
    public java.util.List<DAInfo> getDaList() {
      return da_;
    }
    /**
     * <pre>
     *广播模拟输入端口参数[可重复]
     * </pre>
     *
     * <code>repeated .demo.protobuf.RTUConInfoRES.DAInfo da = 3;</code>
     */
    public java.util.List<? extends DAInfoOrBuilder>
        getDaOrBuilderList() {
      return da_;
    }
    /**
     * <pre>
     *广播模拟输入端口参数[可重复]
     * </pre>
     *
     * <code>repeated .demo.protobuf.RTUConInfoRES.DAInfo da = 3;</code>
     */
    public int getDaCount() {
      return da_.size();
    }
    /**
     * <pre>
     *广播模拟输入端口参数[可重复]
     * </pre>
     *
     * <code>repeated .demo.protobuf.RTUConInfoRES.DAInfo da = 3;</code>
     */
    public DAInfo getDa(int index) {
      return da_.get(index);
    }
    /**
     * <pre>
     *广播模拟输入端口参数[可重复]
     * </pre>
     *
     * <code>repeated .demo.protobuf.RTUConInfoRES.DAInfo da = 3;</code>
     */
    public DAInfoOrBuilder getDaOrBuilder(
        int index) {
      return da_.get(index);
    }

    public static final int DIPOLLTIME_FIELD_NUMBER = 4;
    private int dipolltime_;
    /**
     * <pre>
     *数字输入端口配置参数
     * </pre>
     *
     * <code>optional uint32 dipolltime = 4;</code>
     */
    public boolean hasDipolltime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     *数字输入端口配置参数
     * </pre>
     *
     * <code>optional uint32 dipolltime = 4;</code>
     */
    public int getDipolltime() {
      return dipolltime_;
    }

    public static final int MAXDBROW_FIELD_NUMBER = 5;
    private int maxdbrow_;
    /**
     * <pre>
     *数据库最大存储条数[配置时需要注意,RTU内部存储最大256M]
     * </pre>
     *
     * <code>optional uint32 maxdbrow = 5;</code>
     */
    public boolean hasMaxdbrow() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <pre>
     *数据库最大存储条数[配置时需要注意,RTU内部存储最大256M]
     * </pre>
     *
     * <code>optional uint32 maxdbrow = 5;</code>
     */
    public int getMaxdbrow() {
      return maxdbrow_;
    }

    public static final int USERINFO_FIELD_NUMBER = 6;
    private USERInfo userinfo_;
    /**
     * <pre>
     *用户配置参数
     * </pre>
     *
     * <code>optional .demo.protobuf.RTUConInfoRES.USERInfo userinfo = 6;</code>
     */
    public boolean hasUserinfo() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <pre>
     *用户配置参数
     * </pre>
     *
     * <code>optional .demo.protobuf.RTUConInfoRES.USERInfo userinfo = 6;</code>
     */
    public USERInfo getUserinfo() {
      return userinfo_ == null ? USERInfo.getDefaultInstance() : userinfo_;
    }
    /**
     * <pre>
     *用户配置参数
     * </pre>
     *
     * <code>optional .demo.protobuf.RTUConInfoRES.USERInfo userinfo = 6;</code>
     */
    public USERInfoOrBuilder getUserinfoOrBuilder() {
      return userinfo_ == null ? USERInfo.getDefaultInstance() : userinfo_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasRtuid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getRs485Count(); i++) {
        if (!getRs485(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getDaCount(); i++) {
        if (!getDa(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasUserinfo()) {
        if (!getUserinfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, rtuid_);
      }
      for (int i = 0; i < rs485_.size(); i++) {
        output.writeMessage(2, rs485_.get(i));
      }
      for (int i = 0; i < da_.size(); i++) {
        output.writeMessage(3, da_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(4, dipolltime_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(5, maxdbrow_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(6, getUserinfo());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, rtuid_);
      }
      for (int i = 0; i < rs485_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, rs485_.get(i));
      }
      for (int i = 0; i < da_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, da_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, dipolltime_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, maxdbrow_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getUserinfo());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof RTUConInfoRES)) {
        return super.equals(obj);
      }
      RTUConInfoRES other = (RTUConInfoRES) obj;

      boolean result = true;
      result = result && (hasRtuid() == other.hasRtuid());
      if (hasRtuid()) {
        result = result && (getRtuid()
            == other.getRtuid());
      }
      result = result && getRs485List()
          .equals(other.getRs485List());
      result = result && getDaList()
          .equals(other.getDaList());
      result = result && (hasDipolltime() == other.hasDipolltime());
      if (hasDipolltime()) {
        result = result && (getDipolltime()
            == other.getDipolltime());
      }
      result = result && (hasMaxdbrow() == other.hasMaxdbrow());
      if (hasMaxdbrow()) {
        result = result && (getMaxdbrow()
            == other.getMaxdbrow());
      }
      result = result && (hasUserinfo() == other.hasUserinfo());
      if (hasUserinfo()) {
        result = result && getUserinfo()
            .equals(other.getUserinfo());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasRtuid()) {
        hash = (37 * hash) + RTUID_FIELD_NUMBER;
        hash = (53 * hash) + getRtuid();
      }
      if (getRs485Count() > 0) {
        hash = (37 * hash) + RS485_FIELD_NUMBER;
        hash = (53 * hash) + getRs485List().hashCode();
      }
      if (getDaCount() > 0) {
        hash = (37 * hash) + DA_FIELD_NUMBER;
        hash = (53 * hash) + getDaList().hashCode();
      }
      if (hasDipolltime()) {
        hash = (37 * hash) + DIPOLLTIME_FIELD_NUMBER;
        hash = (53 * hash) + getDipolltime();
      }
      if (hasMaxdbrow()) {
        hash = (37 * hash) + MAXDBROW_FIELD_NUMBER;
        hash = (53 * hash) + getMaxdbrow();
      }
      if (hasUserinfo()) {
        hash = (37 * hash) + USERINFO_FIELD_NUMBER;
        hash = (53 * hash) + getUserinfo().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static RTUConInfoRES parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RTUConInfoRES parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RTUConInfoRES parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RTUConInfoRES parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RTUConInfoRES parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static RTUConInfoRES parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static RTUConInfoRES parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RTUConInfoRES parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static RTUConInfoRES parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static RTUConInfoRES parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static RTUConInfoRES parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static RTUConInfoRES parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(RTUConInfoRES prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *RTU配置参数广播[中心到RTU]
     * </pre>
     *
     * Protobuf type {@code demo.protobuf.RTUConInfoRES}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:demo.protobuf.RTUConInfoRES)
        RTUConInfoRESOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return XhRtu.internal_static_demo_protobuf_RTUConInfoRES_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return XhRtu.internal_static_demo_protobuf_RTUConInfoRES_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                RTUConInfoRES.class, Builder.class);
      }

      // Construct using demo.protobuf.XhRtu.RTUConInfoRES.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getRs485FieldBuilder();
          getDaFieldBuilder();
          getUserinfoFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        rtuid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (rs485Builder_ == null) {
          rs485_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          rs485Builder_.clear();
        }
        if (daBuilder_ == null) {
          da_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          daBuilder_.clear();
        }
        dipolltime_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        maxdbrow_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        if (userinfoBuilder_ == null) {
          userinfo_ = null;
        } else {
          userinfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return XhRtu.internal_static_demo_protobuf_RTUConInfoRES_descriptor;
      }

      public RTUConInfoRES getDefaultInstanceForType() {
        return RTUConInfoRES.getDefaultInstance();
      }

      public RTUConInfoRES build() {
        RTUConInfoRES result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public RTUConInfoRES buildPartial() {
        RTUConInfoRES result = new RTUConInfoRES(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.rtuid_ = rtuid_;
        if (rs485Builder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            rs485_ = java.util.Collections.unmodifiableList(rs485_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.rs485_ = rs485_;
        } else {
          result.rs485_ = rs485Builder_.build();
        }
        if (daBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            da_ = java.util.Collections.unmodifiableList(da_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.da_ = da_;
        } else {
          result.da_ = daBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000002;
        }
        result.dipolltime_ = dipolltime_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000004;
        }
        result.maxdbrow_ = maxdbrow_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000008;
        }
        if (userinfoBuilder_ == null) {
          result.userinfo_ = userinfo_;
        } else {
          result.userinfo_ = userinfoBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof RTUConInfoRES) {
          return mergeFrom((RTUConInfoRES)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(RTUConInfoRES other) {
        if (other == RTUConInfoRES.getDefaultInstance()) return this;
        if (other.hasRtuid()) {
          setRtuid(other.getRtuid());
        }
        if (rs485Builder_ == null) {
          if (!other.rs485_.isEmpty()) {
            if (rs485_.isEmpty()) {
              rs485_ = other.rs485_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureRs485IsMutable();
              rs485_.addAll(other.rs485_);
            }
            onChanged();
          }
        } else {
          if (!other.rs485_.isEmpty()) {
            if (rs485Builder_.isEmpty()) {
              rs485Builder_.dispose();
              rs485Builder_ = null;
              rs485_ = other.rs485_;
              bitField0_ = (bitField0_ & ~0x00000002);
              rs485Builder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getRs485FieldBuilder() : null;
            } else {
              rs485Builder_.addAllMessages(other.rs485_);
            }
          }
        }
        if (daBuilder_ == null) {
          if (!other.da_.isEmpty()) {
            if (da_.isEmpty()) {
              da_ = other.da_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureDaIsMutable();
              da_.addAll(other.da_);
            }
            onChanged();
          }
        } else {
          if (!other.da_.isEmpty()) {
            if (daBuilder_.isEmpty()) {
              daBuilder_.dispose();
              daBuilder_ = null;
              da_ = other.da_;
              bitField0_ = (bitField0_ & ~0x00000004);
              daBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getDaFieldBuilder() : null;
            } else {
              daBuilder_.addAllMessages(other.da_);
            }
          }
        }
        if (other.hasDipolltime()) {
          setDipolltime(other.getDipolltime());
        }
        if (other.hasMaxdbrow()) {
          setMaxdbrow(other.getMaxdbrow());
        }
        if (other.hasUserinfo()) {
          mergeUserinfo(other.getUserinfo());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRtuid()) {
          return false;
        }
        for (int i = 0; i < getRs485Count(); i++) {
          if (!getRs485(i).isInitialized()) {
            return false;
          }
        }
        for (int i = 0; i < getDaCount(); i++) {
          if (!getDa(i).isInitialized()) {
            return false;
          }
        }
        if (hasUserinfo()) {
          if (!getUserinfo().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        RTUConInfoRES parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (RTUConInfoRES) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int rtuid_ ;
      /**
       * <pre>
       *RTU ID
       * </pre>
       *
       * <code>required uint32 rtuid = 1;</code>
       */
      public boolean hasRtuid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       *RTU ID
       * </pre>
       *
       * <code>required uint32 rtuid = 1;</code>
       */
      public int getRtuid() {
        return rtuid_;
      }
      /**
       * <pre>
       *RTU ID
       * </pre>
       *
       * <code>required uint32 rtuid = 1;</code>
       */
      public Builder setRtuid(int value) {
        bitField0_ |= 0x00000001;
        rtuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *RTU ID
       * </pre>
       *
       * <code>required uint32 rtuid = 1;</code>
       */
      public Builder clearRtuid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        rtuid_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<RS485Info> rs485_ =
        java.util.Collections.emptyList();
      private void ensureRs485IsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          rs485_ = new java.util.ArrayList<RS485Info>(rs485_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          RS485Info, RS485Info.Builder, RS485InfoOrBuilder> rs485Builder_;

      /**
       * <pre>
       *广播RS485端口参数[可重复]
       * </pre>
       *
       * <code>repeated .demo.protobuf.RTUConInfoRES.RS485Info rs485 = 2;</code>
       */
      public java.util.List<RS485Info> getRs485List() {
        if (rs485Builder_ == null) {
          return java.util.Collections.unmodifiableList(rs485_);
        } else {
          return rs485Builder_.getMessageList();
        }
      }
      /**
       * <pre>
       *广播RS485端口参数[可重复]
       * </pre>
       *
       * <code>repeated .demo.protobuf.RTUConInfoRES.RS485Info rs485 = 2;</code>
       */
      public int getRs485Count() {
        if (rs485Builder_ == null) {
          return rs485_.size();
        } else {
          return rs485Builder_.getCount();
        }
      }
      /**
       * <pre>
       *广播RS485端口参数[可重复]
       * </pre>
       *
       * <code>repeated .demo.protobuf.RTUConInfoRES.RS485Info rs485 = 2;</code>
       */
      public RS485Info getRs485(int index) {
        if (rs485Builder_ == null) {
          return rs485_.get(index);
        } else {
          return rs485Builder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *广播RS485端口参数[可重复]
       * </pre>
       *
       * <code>repeated .demo.protobuf.RTUConInfoRES.RS485Info rs485 = 2;</code>
       */
      public Builder setRs485(
          int index, RS485Info value) {
        if (rs485Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRs485IsMutable();
          rs485_.set(index, value);
          onChanged();
        } else {
          rs485Builder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *广播RS485端口参数[可重复]
       * </pre>
       *
       * <code>repeated .demo.protobuf.RTUConInfoRES.RS485Info rs485 = 2;</code>
       */
      public Builder setRs485(
          int index, RS485Info.Builder builderForValue) {
        if (rs485Builder_ == null) {
          ensureRs485IsMutable();
          rs485_.set(index, builderForValue.build());
          onChanged();
        } else {
          rs485Builder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *广播RS485端口参数[可重复]
       * </pre>
       *
       * <code>repeated .demo.protobuf.RTUConInfoRES.RS485Info rs485 = 2;</code>
       */
      public Builder addRs485(RS485Info value) {
        if (rs485Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRs485IsMutable();
          rs485_.add(value);
          onChanged();
        } else {
          rs485Builder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *广播RS485端口参数[可重复]
       * </pre>
       *
       * <code>repeated .demo.protobuf.RTUConInfoRES.RS485Info rs485 = 2;</code>
       */
      public Builder addRs485(
          int index, RS485Info value) {
        if (rs485Builder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRs485IsMutable();
          rs485_.add(index, value);
          onChanged();
        } else {
          rs485Builder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *广播RS485端口参数[可重复]
       * </pre>
       *
       * <code>repeated .demo.protobuf.RTUConInfoRES.RS485Info rs485 = 2;</code>
       */
      public Builder addRs485(
          RS485Info.Builder builderForValue) {
        if (rs485Builder_ == null) {
          ensureRs485IsMutable();
          rs485_.add(builderForValue.build());
          onChanged();
        } else {
          rs485Builder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *广播RS485端口参数[可重复]
       * </pre>
       *
       * <code>repeated .demo.protobuf.RTUConInfoRES.RS485Info rs485 = 2;</code>
       */
      public Builder addRs485(
          int index, RS485Info.Builder builderForValue) {
        if (rs485Builder_ == null) {
          ensureRs485IsMutable();
          rs485_.add(index, builderForValue.build());
          onChanged();
        } else {
          rs485Builder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *广播RS485端口参数[可重复]
       * </pre>
       *
       * <code>repeated .demo.protobuf.RTUConInfoRES.RS485Info rs485 = 2;</code>
       */
      public Builder addAllRs485(
          Iterable<? extends RS485Info> values) {
        if (rs485Builder_ == null) {
          ensureRs485IsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, rs485_);
          onChanged();
        } else {
          rs485Builder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *广播RS485端口参数[可重复]
       * </pre>
       *
       * <code>repeated .demo.protobuf.RTUConInfoRES.RS485Info rs485 = 2;</code>
       */
      public Builder clearRs485() {
        if (rs485Builder_ == null) {
          rs485_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          rs485Builder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *广播RS485端口参数[可重复]
       * </pre>
       *
       * <code>repeated .demo.protobuf.RTUConInfoRES.RS485Info rs485 = 2;</code>
       */
      public Builder removeRs485(int index) {
        if (rs485Builder_ == null) {
          ensureRs485IsMutable();
          rs485_.remove(index);
          onChanged();
        } else {
          rs485Builder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *广播RS485端口参数[可重复]
       * </pre>
       *
       * <code>repeated .demo.protobuf.RTUConInfoRES.RS485Info rs485 = 2;</code>
       */
      public RS485Info.Builder getRs485Builder(
          int index) {
        return getRs485FieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *广播RS485端口参数[可重复]
       * </pre>
       *
       * <code>repeated .demo.protobuf.RTUConInfoRES.RS485Info rs485 = 2;</code>
       */
      public RS485InfoOrBuilder getRs485OrBuilder(
          int index) {
        if (rs485Builder_ == null) {
          return rs485_.get(index);  } else {
          return rs485Builder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *广播RS485端口参数[可重复]
       * </pre>
       *
       * <code>repeated .demo.protobuf.RTUConInfoRES.RS485Info rs485 = 2;</code>
       */
      public java.util.List<? extends RS485InfoOrBuilder>
           getRs485OrBuilderList() {
        if (rs485Builder_ != null) {
          return rs485Builder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(rs485_);
        }
      }
      /**
       * <pre>
       *广播RS485端口参数[可重复]
       * </pre>
       *
       * <code>repeated .demo.protobuf.RTUConInfoRES.RS485Info rs485 = 2;</code>
       */
      public RS485Info.Builder addRs485Builder() {
        return getRs485FieldBuilder().addBuilder(
            RS485Info.getDefaultInstance());
      }
      /**
       * <pre>
       *广播RS485端口参数[可重复]
       * </pre>
       *
       * <code>repeated .demo.protobuf.RTUConInfoRES.RS485Info rs485 = 2;</code>
       */
      public RS485Info.Builder addRs485Builder(
          int index) {
        return getRs485FieldBuilder().addBuilder(
            index, RS485Info.getDefaultInstance());
      }
      /**
       * <pre>
       *广播RS485端口参数[可重复]
       * </pre>
       *
       * <code>repeated .demo.protobuf.RTUConInfoRES.RS485Info rs485 = 2;</code>
       */
      public java.util.List<RS485Info.Builder>
           getRs485BuilderList() {
        return getRs485FieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          RS485Info, RS485Info.Builder, RS485InfoOrBuilder>
          getRs485FieldBuilder() {
        if (rs485Builder_ == null) {
          rs485Builder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              RS485Info, RS485Info.Builder, RS485InfoOrBuilder>(
                  rs485_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          rs485_ = null;
        }
        return rs485Builder_;
      }

      private java.util.List<DAInfo> da_ =
        java.util.Collections.emptyList();
      private void ensureDaIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          da_ = new java.util.ArrayList<DAInfo>(da_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          DAInfo, DAInfo.Builder, DAInfoOrBuilder> daBuilder_;

      /**
       * <pre>
       *广播模拟输入端口参数[可重复]
       * </pre>
       *
       * <code>repeated .demo.protobuf.RTUConInfoRES.DAInfo da = 3;</code>
       */
      public java.util.List<DAInfo> getDaList() {
        if (daBuilder_ == null) {
          return java.util.Collections.unmodifiableList(da_);
        } else {
          return daBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *广播模拟输入端口参数[可重复]
       * </pre>
       *
       * <code>repeated .demo.protobuf.RTUConInfoRES.DAInfo da = 3;</code>
       */
      public int getDaCount() {
        if (daBuilder_ == null) {
          return da_.size();
        } else {
          return daBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *广播模拟输入端口参数[可重复]
       * </pre>
       *
       * <code>repeated .demo.protobuf.RTUConInfoRES.DAInfo da = 3;</code>
       */
      public DAInfo getDa(int index) {
        if (daBuilder_ == null) {
          return da_.get(index);
        } else {
          return daBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *广播模拟输入端口参数[可重复]
       * </pre>
       *
       * <code>repeated .demo.protobuf.RTUConInfoRES.DAInfo da = 3;</code>
       */
      public Builder setDa(
          int index, DAInfo value) {
        if (daBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDaIsMutable();
          da_.set(index, value);
          onChanged();
        } else {
          daBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *广播模拟输入端口参数[可重复]
       * </pre>
       *
       * <code>repeated .demo.protobuf.RTUConInfoRES.DAInfo da = 3;</code>
       */
      public Builder setDa(
          int index, DAInfo.Builder builderForValue) {
        if (daBuilder_ == null) {
          ensureDaIsMutable();
          da_.set(index, builderForValue.build());
          onChanged();
        } else {
          daBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *广播模拟输入端口参数[可重复]
       * </pre>
       *
       * <code>repeated .demo.protobuf.RTUConInfoRES.DAInfo da = 3;</code>
       */
      public Builder addDa(DAInfo value) {
        if (daBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDaIsMutable();
          da_.add(value);
          onChanged();
        } else {
          daBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *广播模拟输入端口参数[可重复]
       * </pre>
       *
       * <code>repeated .demo.protobuf.RTUConInfoRES.DAInfo da = 3;</code>
       */
      public Builder addDa(
          int index, DAInfo value) {
        if (daBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDaIsMutable();
          da_.add(index, value);
          onChanged();
        } else {
          daBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *广播模拟输入端口参数[可重复]
       * </pre>
       *
       * <code>repeated .demo.protobuf.RTUConInfoRES.DAInfo da = 3;</code>
       */
      public Builder addDa(
          DAInfo.Builder builderForValue) {
        if (daBuilder_ == null) {
          ensureDaIsMutable();
          da_.add(builderForValue.build());
          onChanged();
        } else {
          daBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *广播模拟输入端口参数[可重复]
       * </pre>
       *
       * <code>repeated .demo.protobuf.RTUConInfoRES.DAInfo da = 3;</code>
       */
      public Builder addDa(
          int index, DAInfo.Builder builderForValue) {
        if (daBuilder_ == null) {
          ensureDaIsMutable();
          da_.add(index, builderForValue.build());
          onChanged();
        } else {
          daBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *广播模拟输入端口参数[可重复]
       * </pre>
       *
       * <code>repeated .demo.protobuf.RTUConInfoRES.DAInfo da = 3;</code>
       */
      public Builder addAllDa(
          Iterable<? extends DAInfo> values) {
        if (daBuilder_ == null) {
          ensureDaIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, da_);
          onChanged();
        } else {
          daBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *广播模拟输入端口参数[可重复]
       * </pre>
       *
       * <code>repeated .demo.protobuf.RTUConInfoRES.DAInfo da = 3;</code>
       */
      public Builder clearDa() {
        if (daBuilder_ == null) {
          da_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          daBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *广播模拟输入端口参数[可重复]
       * </pre>
       *
       * <code>repeated .demo.protobuf.RTUConInfoRES.DAInfo da = 3;</code>
       */
      public Builder removeDa(int index) {
        if (daBuilder_ == null) {
          ensureDaIsMutable();
          da_.remove(index);
          onChanged();
        } else {
          daBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *广播模拟输入端口参数[可重复]
       * </pre>
       *
       * <code>repeated .demo.protobuf.RTUConInfoRES.DAInfo da = 3;</code>
       */
      public DAInfo.Builder getDaBuilder(
          int index) {
        return getDaFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *广播模拟输入端口参数[可重复]
       * </pre>
       *
       * <code>repeated .demo.protobuf.RTUConInfoRES.DAInfo da = 3;</code>
       */
      public DAInfoOrBuilder getDaOrBuilder(
          int index) {
        if (daBuilder_ == null) {
          return da_.get(index);  } else {
          return daBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *广播模拟输入端口参数[可重复]
       * </pre>
       *
       * <code>repeated .demo.protobuf.RTUConInfoRES.DAInfo da = 3;</code>
       */
      public java.util.List<? extends DAInfoOrBuilder>
           getDaOrBuilderList() {
        if (daBuilder_ != null) {
          return daBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(da_);
        }
      }
      /**
       * <pre>
       *广播模拟输入端口参数[可重复]
       * </pre>
       *
       * <code>repeated .demo.protobuf.RTUConInfoRES.DAInfo da = 3;</code>
       */
      public DAInfo.Builder addDaBuilder() {
        return getDaFieldBuilder().addBuilder(
            DAInfo.getDefaultInstance());
      }
      /**
       * <pre>
       *广播模拟输入端口参数[可重复]
       * </pre>
       *
       * <code>repeated .demo.protobuf.RTUConInfoRES.DAInfo da = 3;</code>
       */
      public DAInfo.Builder addDaBuilder(
          int index) {
        return getDaFieldBuilder().addBuilder(
            index, DAInfo.getDefaultInstance());
      }
      /**
       * <pre>
       *广播模拟输入端口参数[可重复]
       * </pre>
       *
       * <code>repeated .demo.protobuf.RTUConInfoRES.DAInfo da = 3;</code>
       */
      public java.util.List<DAInfo.Builder>
           getDaBuilderList() {
        return getDaFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          DAInfo, DAInfo.Builder, DAInfoOrBuilder>
          getDaFieldBuilder() {
        if (daBuilder_ == null) {
          daBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              DAInfo, DAInfo.Builder, DAInfoOrBuilder>(
                  da_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          da_ = null;
        }
        return daBuilder_;
      }

      private int dipolltime_ ;
      /**
       * <pre>
       *数字输入端口配置参数
       * </pre>
       *
       * <code>optional uint32 dipolltime = 4;</code>
       */
      public boolean hasDipolltime() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       *数字输入端口配置参数
       * </pre>
       *
       * <code>optional uint32 dipolltime = 4;</code>
       */
      public int getDipolltime() {
        return dipolltime_;
      }
      /**
       * <pre>
       *数字输入端口配置参数
       * </pre>
       *
       * <code>optional uint32 dipolltime = 4;</code>
       */
      public Builder setDipolltime(int value) {
        bitField0_ |= 0x00000008;
        dipolltime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *数字输入端口配置参数
       * </pre>
       *
       * <code>optional uint32 dipolltime = 4;</code>
       */
      public Builder clearDipolltime() {
        bitField0_ = (bitField0_ & ~0x00000008);
        dipolltime_ = 0;
        onChanged();
        return this;
      }

      private int maxdbrow_ ;
      /**
       * <pre>
       *数据库最大存储条数[配置时需要注意,RTU内部存储最大256M]
       * </pre>
       *
       * <code>optional uint32 maxdbrow = 5;</code>
       */
      public boolean hasMaxdbrow() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <pre>
       *数据库最大存储条数[配置时需要注意,RTU内部存储最大256M]
       * </pre>
       *
       * <code>optional uint32 maxdbrow = 5;</code>
       */
      public int getMaxdbrow() {
        return maxdbrow_;
      }
      /**
       * <pre>
       *数据库最大存储条数[配置时需要注意,RTU内部存储最大256M]
       * </pre>
       *
       * <code>optional uint32 maxdbrow = 5;</code>
       */
      public Builder setMaxdbrow(int value) {
        bitField0_ |= 0x00000010;
        maxdbrow_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *数据库最大存储条数[配置时需要注意,RTU内部存储最大256M]
       * </pre>
       *
       * <code>optional uint32 maxdbrow = 5;</code>
       */
      public Builder clearMaxdbrow() {
        bitField0_ = (bitField0_ & ~0x00000010);
        maxdbrow_ = 0;
        onChanged();
        return this;
      }

      private USERInfo userinfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          USERInfo, USERInfo.Builder, USERInfoOrBuilder> userinfoBuilder_;
      /**
       * <pre>
       *用户配置参数
       * </pre>
       *
       * <code>optional .demo.protobuf.RTUConInfoRES.USERInfo userinfo = 6;</code>
       */
      public boolean hasUserinfo() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <pre>
       *用户配置参数
       * </pre>
       *
       * <code>optional .demo.protobuf.RTUConInfoRES.USERInfo userinfo = 6;</code>
       */
      public USERInfo getUserinfo() {
        if (userinfoBuilder_ == null) {
          return userinfo_ == null ? USERInfo.getDefaultInstance() : userinfo_;
        } else {
          return userinfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *用户配置参数
       * </pre>
       *
       * <code>optional .demo.protobuf.RTUConInfoRES.USERInfo userinfo = 6;</code>
       */
      public Builder setUserinfo(USERInfo value) {
        if (userinfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          userinfo_ = value;
          onChanged();
        } else {
          userinfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <pre>
       *用户配置参数
       * </pre>
       *
       * <code>optional .demo.protobuf.RTUConInfoRES.USERInfo userinfo = 6;</code>
       */
      public Builder setUserinfo(
          USERInfo.Builder builderForValue) {
        if (userinfoBuilder_ == null) {
          userinfo_ = builderForValue.build();
          onChanged();
        } else {
          userinfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <pre>
       *用户配置参数
       * </pre>
       *
       * <code>optional .demo.protobuf.RTUConInfoRES.USERInfo userinfo = 6;</code>
       */
      public Builder mergeUserinfo(USERInfo value) {
        if (userinfoBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020) &&
              userinfo_ != null &&
              userinfo_ != USERInfo.getDefaultInstance()) {
            userinfo_ =
              USERInfo.newBuilder(userinfo_).mergeFrom(value).buildPartial();
          } else {
            userinfo_ = value;
          }
          onChanged();
        } else {
          userinfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000020;
        return this;
      }
      /**
       * <pre>
       *用户配置参数
       * </pre>
       *
       * <code>optional .demo.protobuf.RTUConInfoRES.USERInfo userinfo = 6;</code>
       */
      public Builder clearUserinfo() {
        if (userinfoBuilder_ == null) {
          userinfo_ = null;
          onChanged();
        } else {
          userinfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }
      /**
       * <pre>
       *用户配置参数
       * </pre>
       *
       * <code>optional .demo.protobuf.RTUConInfoRES.USERInfo userinfo = 6;</code>
       */
      public USERInfo.Builder getUserinfoBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getUserinfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *用户配置参数
       * </pre>
       *
       * <code>optional .demo.protobuf.RTUConInfoRES.USERInfo userinfo = 6;</code>
       */
      public USERInfoOrBuilder getUserinfoOrBuilder() {
        if (userinfoBuilder_ != null) {
          return userinfoBuilder_.getMessageOrBuilder();
        } else {
          return userinfo_ == null ?
              USERInfo.getDefaultInstance() : userinfo_;
        }
      }
      /**
       * <pre>
       *用户配置参数
       * </pre>
       *
       * <code>optional .demo.protobuf.RTUConInfoRES.USERInfo userinfo = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          USERInfo, USERInfo.Builder, USERInfoOrBuilder>
          getUserinfoFieldBuilder() {
        if (userinfoBuilder_ == null) {
          userinfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              USERInfo, USERInfo.Builder, USERInfoOrBuilder>(
                  getUserinfo(),
                  getParentForChildren(),
                  isClean());
          userinfo_ = null;
        }
        return userinfoBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:demo.protobuf.RTUConInfoRES)
    }

    // @@protoc_insertion_point(class_scope:demo.protobuf.RTUConInfoRES)
    private static final RTUConInfoRES DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new RTUConInfoRES();
    }

    public static RTUConInfoRES getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @Deprecated public static final com.google.protobuf.Parser<RTUConInfoRES>
        PARSER = new com.google.protobuf.AbstractParser<RTUConInfoRES>() {
      public RTUConInfoRES parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RTUConInfoRES(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RTUConInfoRES> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<RTUConInfoRES> getParserForType() {
      return PARSER;
    }

    public RTUConInfoRES getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CmdREQOrBuilder extends
      // @@protoc_insertion_point(interface_extends:demo.protobuf.CmdREQ)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *RTU ID
     * </pre>
     *
     * <code>required uint32 rtuid = 1;</code>
     */
    boolean hasRtuid();
    /**
     * <pre>
     *RTU ID
     * </pre>
     *
     * <code>required uint32 rtuid = 1;</code>
     */
    int getRtuid();

    /**
     * <pre>
     *立即查询命令
     * </pre>
     *
     * <code>optional .demo.protobuf.CmdREQ.ImmedInfo cmdimmed = 2;</code>
     */
    boolean hasCmdimmed();
    /**
     * <pre>
     *立即查询命令
     * </pre>
     *
     * <code>optional .demo.protobuf.CmdREQ.ImmedInfo cmdimmed = 2;</code>
     */
    CmdREQ.ImmedInfo getCmdimmed();
    /**
     * <pre>
     *立即查询命令
     * </pre>
     *
     * <code>optional .demo.protobuf.CmdREQ.ImmedInfo cmdimmed = 2;</code>
     */
    CmdREQ.ImmedInfoOrBuilder getCmdimmedOrBuilder();
  }
  /**
   * <pre>
   *命令请求[中心到RTU]
   * </pre>
   *
   * Protobuf type {@code demo.protobuf.CmdREQ}
   */
  public  static final class CmdREQ extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:demo.protobuf.CmdREQ)
      CmdREQOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CmdREQ.newBuilder() to construct.
    private CmdREQ(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CmdREQ() {
      rtuid_ = 0;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CmdREQ(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              rtuid_ = input.readUInt32();
              break;
            }
            case 18: {
              ImmedInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                subBuilder = cmdimmed_.toBuilder();
              }
              cmdimmed_ = input.readMessage(ImmedInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(cmdimmed_);
                cmdimmed_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000002;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return XhRtu.internal_static_demo_protobuf_CmdREQ_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return XhRtu.internal_static_demo_protobuf_CmdREQ_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              CmdREQ.class, Builder.class);
    }

    public interface ImmedInfoOrBuilder extends
        // @@protoc_insertion_point(interface_extends:demo.protobuf.CmdREQ.ImmedInfo)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       *串口端口号[RS485范围:1-10 模拟输入范围:21-28 数字输入:40]
       * </pre>
       *
       * <code>required uint32 ttys_n = 1;</code>
       */
      boolean hasTtysN();
      /**
       * <pre>
       *串口端口号[RS485范围:1-10 模拟输入范围:21-28 数字输入:40]
       * </pre>
       *
       * <code>required uint32 ttys_n = 1;</code>
       */
      int getTtysN();

      /**
       * <pre>
       *设备id[范围:1-200		ETCR2900接触式地阻范围:详见如下] 
       * </pre>
       *
       * <code>required uint32 deviceid = 2;</code>
       */
      boolean hasDeviceid();
      /**
       * <pre>
       *设备id[范围:1-200		ETCR2900接触式地阻范围:详见如下] 
       * </pre>
       *
       * <code>required uint32 deviceid = 2;</code>
       */
      int getDeviceid();
    }
    /**
     * Protobuf type {@code demo.protobuf.CmdREQ.ImmedInfo}
     */
    public  static final class ImmedInfo extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:demo.protobuf.CmdREQ.ImmedInfo)
        ImmedInfoOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use ImmedInfo.newBuilder() to construct.
      private ImmedInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private ImmedInfo() {
        ttysN_ = 0;
        deviceid_ = 0;
      }

      @Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private ImmedInfo(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                ttysN_ = input.readUInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                deviceid_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return XhRtu.internal_static_demo_protobuf_CmdREQ_ImmedInfo_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return XhRtu.internal_static_demo_protobuf_CmdREQ_ImmedInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ImmedInfo.class, Builder.class);
      }

      private int bitField0_;
      public static final int TTYS_N_FIELD_NUMBER = 1;
      private int ttysN_;
      /**
       * <pre>
       *串口端口号[RS485范围:1-10 模拟输入范围:21-28 数字输入:40]
       * </pre>
       *
       * <code>required uint32 ttys_n = 1;</code>
       */
      public boolean hasTtysN() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       *串口端口号[RS485范围:1-10 模拟输入范围:21-28 数字输入:40]
       * </pre>
       *
       * <code>required uint32 ttys_n = 1;</code>
       */
      public int getTtysN() {
        return ttysN_;
      }

      public static final int DEVICEID_FIELD_NUMBER = 2;
      private int deviceid_;
      /**
       * <pre>
       *设备id[范围:1-200		ETCR2900接触式地阻范围:详见如下] 
       * </pre>
       *
       * <code>required uint32 deviceid = 2;</code>
       */
      public boolean hasDeviceid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       *设备id[范围:1-200		ETCR2900接触式地阻范围:详见如下] 
       * </pre>
       *
       * <code>required uint32 deviceid = 2;</code>
       */
      public int getDeviceid() {
        return deviceid_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasTtysN()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasDeviceid()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, ttysN_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(2, deviceid_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, ttysN_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, deviceid_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @Override
      public boolean equals(final Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof ImmedInfo)) {
          return super.equals(obj);
        }
        ImmedInfo other = (ImmedInfo) obj;

        boolean result = true;
        result = result && (hasTtysN() == other.hasTtysN());
        if (hasTtysN()) {
          result = result && (getTtysN()
              == other.getTtysN());
        }
        result = result && (hasDeviceid() == other.hasDeviceid());
        if (hasDeviceid()) {
          result = result && (getDeviceid()
              == other.getDeviceid());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasTtysN()) {
          hash = (37 * hash) + TTYS_N_FIELD_NUMBER;
          hash = (53 * hash) + getTtysN();
        }
        if (hasDeviceid()) {
          hash = (37 * hash) + DEVICEID_FIELD_NUMBER;
          hash = (53 * hash) + getDeviceid();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static ImmedInfo parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static ImmedInfo parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static ImmedInfo parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static ImmedInfo parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static ImmedInfo parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static ImmedInfo parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static ImmedInfo parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static ImmedInfo parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static ImmedInfo parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static ImmedInfo parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static ImmedInfo parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static ImmedInfo parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(ImmedInfo prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @Override
      protected Builder newBuilderForType(
          BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code demo.protobuf.CmdREQ.ImmedInfo}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:demo.protobuf.CmdREQ.ImmedInfo)
          ImmedInfoOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return XhRtu.internal_static_demo_protobuf_CmdREQ_ImmedInfo_descriptor;
        }

        protected FieldAccessorTable
            internalGetFieldAccessorTable() {
          return XhRtu.internal_static_demo_protobuf_CmdREQ_ImmedInfo_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  ImmedInfo.class, Builder.class);
        }

        // Construct using demo.protobuf.XhRtu.CmdREQ.ImmedInfo.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          ttysN_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          deviceid_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return XhRtu.internal_static_demo_protobuf_CmdREQ_ImmedInfo_descriptor;
        }

        public ImmedInfo getDefaultInstanceForType() {
          return ImmedInfo.getDefaultInstance();
        }

        public ImmedInfo build() {
          ImmedInfo result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public ImmedInfo buildPartial() {
          ImmedInfo result = new ImmedInfo(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.ttysN_ = ttysN_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.deviceid_ = deviceid_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof ImmedInfo) {
            return mergeFrom((ImmedInfo)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(ImmedInfo other) {
          if (other == ImmedInfo.getDefaultInstance()) return this;
          if (other.hasTtysN()) {
            setTtysN(other.getTtysN());
          }
          if (other.hasDeviceid()) {
            setDeviceid(other.getDeviceid());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          if (!hasTtysN()) {
            return false;
          }
          if (!hasDeviceid()) {
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          ImmedInfo parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (ImmedInfo) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int ttysN_ ;
        /**
         * <pre>
         *串口端口号[RS485范围:1-10 模拟输入范围:21-28 数字输入:40]
         * </pre>
         *
         * <code>required uint32 ttys_n = 1;</code>
         */
        public boolean hasTtysN() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <pre>
         *串口端口号[RS485范围:1-10 模拟输入范围:21-28 数字输入:40]
         * </pre>
         *
         * <code>required uint32 ttys_n = 1;</code>
         */
        public int getTtysN() {
          return ttysN_;
        }
        /**
         * <pre>
         *串口端口号[RS485范围:1-10 模拟输入范围:21-28 数字输入:40]
         * </pre>
         *
         * <code>required uint32 ttys_n = 1;</code>
         */
        public Builder setTtysN(int value) {
          bitField0_ |= 0x00000001;
          ttysN_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *串口端口号[RS485范围:1-10 模拟输入范围:21-28 数字输入:40]
         * </pre>
         *
         * <code>required uint32 ttys_n = 1;</code>
         */
        public Builder clearTtysN() {
          bitField0_ = (bitField0_ & ~0x00000001);
          ttysN_ = 0;
          onChanged();
          return this;
        }

        private int deviceid_ ;
        /**
         * <pre>
         *设备id[范围:1-200		ETCR2900接触式地阻范围:详见如下] 
         * </pre>
         *
         * <code>required uint32 deviceid = 2;</code>
         */
        public boolean hasDeviceid() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <pre>
         *设备id[范围:1-200		ETCR2900接触式地阻范围:详见如下] 
         * </pre>
         *
         * <code>required uint32 deviceid = 2;</code>
         */
        public int getDeviceid() {
          return deviceid_;
        }
        /**
         * <pre>
         *设备id[范围:1-200		ETCR2900接触式地阻范围:详见如下] 
         * </pre>
         *
         * <code>required uint32 deviceid = 2;</code>
         */
        public Builder setDeviceid(int value) {
          bitField0_ |= 0x00000002;
          deviceid_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *设备id[范围:1-200		ETCR2900接触式地阻范围:详见如下] 
         * </pre>
         *
         * <code>required uint32 deviceid = 2;</code>
         */
        public Builder clearDeviceid() {
          bitField0_ = (bitField0_ & ~0x00000002);
          deviceid_ = 0;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:demo.protobuf.CmdREQ.ImmedInfo)
      }

      // @@protoc_insertion_point(class_scope:demo.protobuf.CmdREQ.ImmedInfo)
      private static final ImmedInfo DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new ImmedInfo();
      }

      public static ImmedInfo getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @Deprecated public static final com.google.protobuf.Parser<ImmedInfo>
          PARSER = new com.google.protobuf.AbstractParser<ImmedInfo>() {
        public ImmedInfo parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new ImmedInfo(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<ImmedInfo> parser() {
        return PARSER;
      }

      @Override
      public com.google.protobuf.Parser<ImmedInfo> getParserForType() {
        return PARSER;
      }

      public ImmedInfo getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int RTUID_FIELD_NUMBER = 1;
    private int rtuid_;
    /**
     * <pre>
     *RTU ID
     * </pre>
     *
     * <code>required uint32 rtuid = 1;</code>
     */
    public boolean hasRtuid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *RTU ID
     * </pre>
     *
     * <code>required uint32 rtuid = 1;</code>
     */
    public int getRtuid() {
      return rtuid_;
    }

    public static final int CMDIMMED_FIELD_NUMBER = 2;
    private ImmedInfo cmdimmed_;
    /**
     * <pre>
     *立即查询命令
     * </pre>
     *
     * <code>optional .demo.protobuf.CmdREQ.ImmedInfo cmdimmed = 2;</code>
     */
    public boolean hasCmdimmed() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     *立即查询命令
     * </pre>
     *
     * <code>optional .demo.protobuf.CmdREQ.ImmedInfo cmdimmed = 2;</code>
     */
    public ImmedInfo getCmdimmed() {
      return cmdimmed_ == null ? ImmedInfo.getDefaultInstance() : cmdimmed_;
    }
    /**
     * <pre>
     *立即查询命令
     * </pre>
     *
     * <code>optional .demo.protobuf.CmdREQ.ImmedInfo cmdimmed = 2;</code>
     */
    public ImmedInfoOrBuilder getCmdimmedOrBuilder() {
      return cmdimmed_ == null ? ImmedInfo.getDefaultInstance() : cmdimmed_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasRtuid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasCmdimmed()) {
        if (!getCmdimmed().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, rtuid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, getCmdimmed());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, rtuid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getCmdimmed());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof CmdREQ)) {
        return super.equals(obj);
      }
      CmdREQ other = (CmdREQ) obj;

      boolean result = true;
      result = result && (hasRtuid() == other.hasRtuid());
      if (hasRtuid()) {
        result = result && (getRtuid()
            == other.getRtuid());
      }
      result = result && (hasCmdimmed() == other.hasCmdimmed());
      if (hasCmdimmed()) {
        result = result && getCmdimmed()
            .equals(other.getCmdimmed());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasRtuid()) {
        hash = (37 * hash) + RTUID_FIELD_NUMBER;
        hash = (53 * hash) + getRtuid();
      }
      if (hasCmdimmed()) {
        hash = (37 * hash) + CMDIMMED_FIELD_NUMBER;
        hash = (53 * hash) + getCmdimmed().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static CmdREQ parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CmdREQ parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CmdREQ parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CmdREQ parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CmdREQ parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CmdREQ parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CmdREQ parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static CmdREQ parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static CmdREQ parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static CmdREQ parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static CmdREQ parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static CmdREQ parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(CmdREQ prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *命令请求[中心到RTU]
     * </pre>
     *
     * Protobuf type {@code demo.protobuf.CmdREQ}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:demo.protobuf.CmdREQ)
        CmdREQOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return XhRtu.internal_static_demo_protobuf_CmdREQ_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return XhRtu.internal_static_demo_protobuf_CmdREQ_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                CmdREQ.class, Builder.class);
      }

      // Construct using demo.protobuf.XhRtu.CmdREQ.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getCmdimmedFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        rtuid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (cmdimmedBuilder_ == null) {
          cmdimmed_ = null;
        } else {
          cmdimmedBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return XhRtu.internal_static_demo_protobuf_CmdREQ_descriptor;
      }

      public CmdREQ getDefaultInstanceForType() {
        return CmdREQ.getDefaultInstance();
      }

      public CmdREQ build() {
        CmdREQ result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public CmdREQ buildPartial() {
        CmdREQ result = new CmdREQ(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.rtuid_ = rtuid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (cmdimmedBuilder_ == null) {
          result.cmdimmed_ = cmdimmed_;
        } else {
          result.cmdimmed_ = cmdimmedBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof CmdREQ) {
          return mergeFrom((CmdREQ)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(CmdREQ other) {
        if (other == CmdREQ.getDefaultInstance()) return this;
        if (other.hasRtuid()) {
          setRtuid(other.getRtuid());
        }
        if (other.hasCmdimmed()) {
          mergeCmdimmed(other.getCmdimmed());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRtuid()) {
          return false;
        }
        if (hasCmdimmed()) {
          if (!getCmdimmed().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        CmdREQ parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (CmdREQ) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int rtuid_ ;
      /**
       * <pre>
       *RTU ID
       * </pre>
       *
       * <code>required uint32 rtuid = 1;</code>
       */
      public boolean hasRtuid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       *RTU ID
       * </pre>
       *
       * <code>required uint32 rtuid = 1;</code>
       */
      public int getRtuid() {
        return rtuid_;
      }
      /**
       * <pre>
       *RTU ID
       * </pre>
       *
       * <code>required uint32 rtuid = 1;</code>
       */
      public Builder setRtuid(int value) {
        bitField0_ |= 0x00000001;
        rtuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *RTU ID
       * </pre>
       *
       * <code>required uint32 rtuid = 1;</code>
       */
      public Builder clearRtuid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        rtuid_ = 0;
        onChanged();
        return this;
      }

      private ImmedInfo cmdimmed_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          ImmedInfo, ImmedInfo.Builder, ImmedInfoOrBuilder> cmdimmedBuilder_;
      /**
       * <pre>
       *立即查询命令
       * </pre>
       *
       * <code>optional .demo.protobuf.CmdREQ.ImmedInfo cmdimmed = 2;</code>
       */
      public boolean hasCmdimmed() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       *立即查询命令
       * </pre>
       *
       * <code>optional .demo.protobuf.CmdREQ.ImmedInfo cmdimmed = 2;</code>
       */
      public ImmedInfo getCmdimmed() {
        if (cmdimmedBuilder_ == null) {
          return cmdimmed_ == null ? ImmedInfo.getDefaultInstance() : cmdimmed_;
        } else {
          return cmdimmedBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *立即查询命令
       * </pre>
       *
       * <code>optional .demo.protobuf.CmdREQ.ImmedInfo cmdimmed = 2;</code>
       */
      public Builder setCmdimmed(ImmedInfo value) {
        if (cmdimmedBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          cmdimmed_ = value;
          onChanged();
        } else {
          cmdimmedBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       *立即查询命令
       * </pre>
       *
       * <code>optional .demo.protobuf.CmdREQ.ImmedInfo cmdimmed = 2;</code>
       */
      public Builder setCmdimmed(
          ImmedInfo.Builder builderForValue) {
        if (cmdimmedBuilder_ == null) {
          cmdimmed_ = builderForValue.build();
          onChanged();
        } else {
          cmdimmedBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       *立即查询命令
       * </pre>
       *
       * <code>optional .demo.protobuf.CmdREQ.ImmedInfo cmdimmed = 2;</code>
       */
      public Builder mergeCmdimmed(ImmedInfo value) {
        if (cmdimmedBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              cmdimmed_ != null &&
              cmdimmed_ != ImmedInfo.getDefaultInstance()) {
            cmdimmed_ =
              ImmedInfo.newBuilder(cmdimmed_).mergeFrom(value).buildPartial();
          } else {
            cmdimmed_ = value;
          }
          onChanged();
        } else {
          cmdimmedBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       *立即查询命令
       * </pre>
       *
       * <code>optional .demo.protobuf.CmdREQ.ImmedInfo cmdimmed = 2;</code>
       */
      public Builder clearCmdimmed() {
        if (cmdimmedBuilder_ == null) {
          cmdimmed_ = null;
          onChanged();
        } else {
          cmdimmedBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <pre>
       *立即查询命令
       * </pre>
       *
       * <code>optional .demo.protobuf.CmdREQ.ImmedInfo cmdimmed = 2;</code>
       */
      public ImmedInfo.Builder getCmdimmedBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getCmdimmedFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *立即查询命令
       * </pre>
       *
       * <code>optional .demo.protobuf.CmdREQ.ImmedInfo cmdimmed = 2;</code>
       */
      public ImmedInfoOrBuilder getCmdimmedOrBuilder() {
        if (cmdimmedBuilder_ != null) {
          return cmdimmedBuilder_.getMessageOrBuilder();
        } else {
          return cmdimmed_ == null ?
              ImmedInfo.getDefaultInstance() : cmdimmed_;
        }
      }
      /**
       * <pre>
       *立即查询命令
       * </pre>
       *
       * <code>optional .demo.protobuf.CmdREQ.ImmedInfo cmdimmed = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          ImmedInfo, ImmedInfo.Builder, ImmedInfoOrBuilder>
          getCmdimmedFieldBuilder() {
        if (cmdimmedBuilder_ == null) {
          cmdimmedBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              ImmedInfo, ImmedInfo.Builder, ImmedInfoOrBuilder>(
                  getCmdimmed(),
                  getParentForChildren(),
                  isClean());
          cmdimmed_ = null;
        }
        return cmdimmedBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:demo.protobuf.CmdREQ)
    }

    // @@protoc_insertion_point(class_scope:demo.protobuf.CmdREQ)
    private static final CmdREQ DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new CmdREQ();
    }

    public static CmdREQ getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @Deprecated public static final com.google.protobuf.Parser<CmdREQ>
        PARSER = new com.google.protobuf.AbstractParser<CmdREQ>() {
      public CmdREQ parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CmdREQ(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CmdREQ> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<CmdREQ> getParserForType() {
      return PARSER;
    }

    public CmdREQ getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CmdRESOrBuilder extends
      // @@protoc_insertion_point(interface_extends:demo.protobuf.CmdRES)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *RTU ID
     * </pre>
     *
     * <code>required uint32 rtuid = 1;</code>
     */
    boolean hasRtuid();
    /**
     * <pre>
     *RTU ID
     * </pre>
     *
     * <code>required uint32 rtuid = 1;</code>
     */
    int getRtuid();

    /**
     * <pre>
     *返回数据[可重复]
     * </pre>
     *
     * <code>repeated .demo.protobuf.CmdRES.DBInfo content = 2;</code>
     */
    java.util.List<CmdRES.DBInfo>
        getContentList();
    /**
     * <pre>
     *返回数据[可重复]
     * </pre>
     *
     * <code>repeated .demo.protobuf.CmdRES.DBInfo content = 2;</code>
     */
    CmdRES.DBInfo getContent(int index);
    /**
     * <pre>
     *返回数据[可重复]
     * </pre>
     *
     * <code>repeated .demo.protobuf.CmdRES.DBInfo content = 2;</code>
     */
    int getContentCount();
    /**
     * <pre>
     *返回数据[可重复]
     * </pre>
     *
     * <code>repeated .demo.protobuf.CmdRES.DBInfo content = 2;</code>
     */
    java.util.List<? extends CmdRES.DBInfoOrBuilder>
        getContentOrBuilderList();
    /**
     * <pre>
     *返回数据[可重复]
     * </pre>
     *
     * <code>repeated .demo.protobuf.CmdRES.DBInfo content = 2;</code>
     */
    CmdRES.DBInfoOrBuilder getContentOrBuilder(
            int index);

    /**
     * <pre>
     *0-常规上报  1-立即查询数据返回
     * </pre>
     *
     * <code>optional uint32 isimmedcmd = 3;</code>
     */
    boolean hasIsimmedcmd();
    /**
     * <pre>
     *0-常规上报  1-立即查询数据返回
     * </pre>
     *
     * <code>optional uint32 isimmedcmd = 3;</code>
     */
    int getIsimmedcmd();
  }
  /**
   * <pre>
   *数据返回[RTU到中心]
   *RTU以下三种情况返回此数据类型：
   *1.连接中心成功后,RTU自动上报断网未同步数据
   *2.连接中心成功后,RTU自动上报定时查询返回数据(此时RTU将本地数设为已同步)
   *3.中心主动发送立即查询命令返回值
   * </pre>
   *
   * Protobuf type {@code demo.protobuf.CmdRES}
   */
  public  static final class CmdRES extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:demo.protobuf.CmdRES)
      CmdRESOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CmdRES.newBuilder() to construct.
    private CmdRES(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CmdRES() {
      rtuid_ = 0;
      content_ = java.util.Collections.emptyList();
      isimmedcmd_ = 0;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CmdRES(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              rtuid_ = input.readUInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                content_ = new java.util.ArrayList<DBInfo>();
                mutable_bitField0_ |= 0x00000002;
              }
              content_.add(
                  input.readMessage(DBInfo.PARSER, extensionRegistry));
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              isimmedcmd_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          content_ = java.util.Collections.unmodifiableList(content_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return XhRtu.internal_static_demo_protobuf_CmdRES_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return XhRtu.internal_static_demo_protobuf_CmdRES_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              CmdRES.class, Builder.class);
    }

    public interface DBInfoOrBuilder extends
        // @@protoc_insertion_point(interface_extends:demo.protobuf.CmdRES.DBInfo)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       *通道号 		485通道[1:12] 	模拟输入通道[1:8] 		数字输入通道[255]
       * </pre>
       *
       * <code>required uint32 channo = 1;</code>
       */
      boolean hasChanno();
      /**
       * <pre>
       *通道号 		485通道[1:12] 	模拟输入通道[1:8] 		数字输入通道[255]
       * </pre>
       *
       * <code>required uint32 channo = 1;</code>
       */
      int getChanno();

      /**
       * <pre>
       *设备id 		485地址[1:200] 	模拟输入地址[247:254]	数字输入地址[255]
       * </pre>
       *
       * <code>required uint32 deviceid = 2;</code>
       */
      boolean hasDeviceid();
      /**
       * <pre>
       *设备id 		485地址[1:200] 	模拟输入地址[247:254]	数字输入地址[255]
       * </pre>
       *
       * <code>required uint32 deviceid = 2;</code>
       */
      int getDeviceid();

      /**
       * <pre>
       *设备类型		[0:ETCR2900接触式  1:ETCR2800B非接触式  2:LCT-100 雷电流 3:RSWS01 温度传感器 4:MEMS静电传感器 5:SVT626T输出型双轴倾角传感 6:HC-33BZ综合监控模块 253:模拟输入电流型 254:模拟输入电压型 255:数字输入]
       * </pre>
       *
       * <code>required uint32 devicetype = 3;</code>
       */
      boolean hasDevicetype();
      /**
       * <pre>
       *设备类型		[0:ETCR2900接触式  1:ETCR2800B非接触式  2:LCT-100 雷电流 3:RSWS01 温度传感器 4:MEMS静电传感器 5:SVT626T输出型双轴倾角传感 6:HC-33BZ综合监控模块 253:模拟输入电流型 254:模拟输入电压型 255:数字输入]
       * </pre>
       *
       * <code>required uint32 devicetype = 3;</code>
       */
      int getDevicetype();

      /**
       * <pre>
       *继电器通道号	范围[1:4] 0-表示不启用继电器
       * </pre>
       *
       * <code>required uint32 relayno = 4;</code>
       */
      boolean hasRelayno();
      /**
       * <pre>
       *继电器通道号	范围[1:4] 0-表示不启用继电器
       * </pre>
       *
       * <code>required uint32 relayno = 4;</code>
       */
      int getRelayno();

      /**
       * <pre>
       *required double		value1		= 5;		//数值1
       *required double		value2		= 6;		//数值2
       * </pre>
       *
       * <code>repeated double value = 5;</code>
       */
      java.util.List<Double> getValueList();
      /**
       * <pre>
       *required double		value1		= 5;		//数值1
       *required double		value2		= 6;		//数值2
       * </pre>
       *
       * <code>repeated double value = 5;</code>
       */
      int getValueCount();
      /**
       * <pre>
       *required double		value1		= 5;		//数值1
       *required double		value2		= 6;		//数值2
       * </pre>
       *
       * <code>repeated double value = 5;</code>
       */
      double getValue(int index);

      /**
       * <pre>
       *时间 			[格式:2018-01-02 11:10:50.000]
       * </pre>
       *
       * <code>required string time = 6;</code>
       */
      boolean hasTime();
      /**
       * <pre>
       *时间 			[格式:2018-01-02 11:10:50.000]
       * </pre>
       *
       * <code>required string time = 6;</code>
       */
      String getTime();
      /**
       * <pre>
       *时间 			[格式:2018-01-02 11:10:50.000]
       * </pre>
       *
       * <code>required string time = 6;</code>
       */
      com.google.protobuf.ByteString
          getTimeBytes();
    }
    /**
     * Protobuf type {@code demo.protobuf.CmdRES.DBInfo}
     */
    public  static final class DBInfo extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:demo.protobuf.CmdRES.DBInfo)
        DBInfoOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use DBInfo.newBuilder() to construct.
      private DBInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private DBInfo() {
        channo_ = 0;
        deviceid_ = 0;
        devicetype_ = 0;
        relayno_ = 0;
        value_ = java.util.Collections.emptyList();
        time_ = "";
      }

      @Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private DBInfo(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                channo_ = input.readUInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                deviceid_ = input.readUInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                devicetype_ = input.readUInt32();
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                relayno_ = input.readUInt32();
                break;
              }
              case 41: {
                if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                  value_ = new java.util.ArrayList<Double>();
                  mutable_bitField0_ |= 0x00000010;
                }
                value_.add(input.readDouble());
                break;
              }
              case 42: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                  value_ = new java.util.ArrayList<Double>();
                  mutable_bitField0_ |= 0x00000010;
                }
                while (input.getBytesUntilLimit() > 0) {
                  value_.add(input.readDouble());
                }
                input.popLimit(limit);
                break;
              }
              case 50: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000010;
                time_ = bs;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
            value_ = java.util.Collections.unmodifiableList(value_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return XhRtu.internal_static_demo_protobuf_CmdRES_DBInfo_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return XhRtu.internal_static_demo_protobuf_CmdRES_DBInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                DBInfo.class, Builder.class);
      }

      private int bitField0_;
      public static final int CHANNO_FIELD_NUMBER = 1;
      private int channo_;
      /**
       * <pre>
       *通道号 		485通道[1:12] 	模拟输入通道[1:8] 		数字输入通道[255]
       * </pre>
       *
       * <code>required uint32 channo = 1;</code>
       */
      public boolean hasChanno() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       *通道号 		485通道[1:12] 	模拟输入通道[1:8] 		数字输入通道[255]
       * </pre>
       *
       * <code>required uint32 channo = 1;</code>
       */
      public int getChanno() {
        return channo_;
      }

      public static final int DEVICEID_FIELD_NUMBER = 2;
      private int deviceid_;
      /**
       * <pre>
       *设备id 		485地址[1:200] 	模拟输入地址[247:254]	数字输入地址[255]
       * </pre>
       *
       * <code>required uint32 deviceid = 2;</code>
       */
      public boolean hasDeviceid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       *设备id 		485地址[1:200] 	模拟输入地址[247:254]	数字输入地址[255]
       * </pre>
       *
       * <code>required uint32 deviceid = 2;</code>
       */
      public int getDeviceid() {
        return deviceid_;
      }

      public static final int DEVICETYPE_FIELD_NUMBER = 3;
      private int devicetype_;
      /**
       * <pre>
       *设备类型		[0:ETCR2900接触式  1:ETCR2800B非接触式  2:LCT-100 雷电流 3:RSWS01 温度传感器 4:MEMS静电传感器 5:SVT626T输出型双轴倾角传感 6:HC-33BZ综合监控模块 253:模拟输入电流型 254:模拟输入电压型 255:数字输入]
       * </pre>
       *
       * <code>required uint32 devicetype = 3;</code>
       */
      public boolean hasDevicetype() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       *设备类型		[0:ETCR2900接触式  1:ETCR2800B非接触式  2:LCT-100 雷电流 3:RSWS01 温度传感器 4:MEMS静电传感器 5:SVT626T输出型双轴倾角传感 6:HC-33BZ综合监控模块 253:模拟输入电流型 254:模拟输入电压型 255:数字输入]
       * </pre>
       *
       * <code>required uint32 devicetype = 3;</code>
       */
      public int getDevicetype() {
        return devicetype_;
      }

      public static final int RELAYNO_FIELD_NUMBER = 4;
      private int relayno_;
      /**
       * <pre>
       *继电器通道号	范围[1:4] 0-表示不启用继电器
       * </pre>
       *
       * <code>required uint32 relayno = 4;</code>
       */
      public boolean hasRelayno() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <pre>
       *继电器通道号	范围[1:4] 0-表示不启用继电器
       * </pre>
       *
       * <code>required uint32 relayno = 4;</code>
       */
      public int getRelayno() {
        return relayno_;
      }

      public static final int VALUE_FIELD_NUMBER = 5;
      private java.util.List<Double> value_;
      /**
       * <pre>
       *required double		value1		= 5;		//数值1
       *required double		value2		= 6;		//数值2
       * </pre>
       *
       * <code>repeated double value = 5;</code>
       */
      public java.util.List<Double>
          getValueList() {
        return value_;
      }
      /**
       * <pre>
       *required double		value1		= 5;		//数值1
       *required double		value2		= 6;		//数值2
       * </pre>
       *
       * <code>repeated double value = 5;</code>
       */
      public int getValueCount() {
        return value_.size();
      }
      /**
       * <pre>
       *required double		value1		= 5;		//数值1
       *required double		value2		= 6;		//数值2
       * </pre>
       *
       * <code>repeated double value = 5;</code>
       */
      public double getValue(int index) {
        return value_.get(index);
      }

      public static final int TIME_FIELD_NUMBER = 6;
      private volatile Object time_;
      /**
       * <pre>
       *时间 			[格式:2018-01-02 11:10:50.000]
       * </pre>
       *
       * <code>required string time = 6;</code>
       */
      public boolean hasTime() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <pre>
       *时间 			[格式:2018-01-02 11:10:50.000]
       * </pre>
       *
       * <code>required string time = 6;</code>
       */
      public String getTime() {
        Object ref = time_;
        if (ref instanceof String) {
          return (String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            time_ = s;
          }
          return s;
        }
      }
      /**
       * <pre>
       *时间 			[格式:2018-01-02 11:10:50.000]
       * </pre>
       *
       * <code>required string time = 6;</code>
       */
      public com.google.protobuf.ByteString
          getTimeBytes() {
        Object ref = time_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          time_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasChanno()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasDeviceid()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasDevicetype()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasRelayno()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasTime()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, channo_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(2, deviceid_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt32(3, devicetype_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeUInt32(4, relayno_);
        }
        for (int i = 0; i < value_.size(); i++) {
          output.writeDouble(5, value_.get(i));
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 6, time_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, channo_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, deviceid_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, devicetype_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(4, relayno_);
        }
        {
          int dataSize = 0;
          dataSize = 8 * getValueList().size();
          size += dataSize;
          size += 1 * getValueList().size();
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, time_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @Override
      public boolean equals(final Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof DBInfo)) {
          return super.equals(obj);
        }
        DBInfo other = (DBInfo) obj;

        boolean result = true;
        result = result && (hasChanno() == other.hasChanno());
        if (hasChanno()) {
          result = result && (getChanno()
              == other.getChanno());
        }
        result = result && (hasDeviceid() == other.hasDeviceid());
        if (hasDeviceid()) {
          result = result && (getDeviceid()
              == other.getDeviceid());
        }
        result = result && (hasDevicetype() == other.hasDevicetype());
        if (hasDevicetype()) {
          result = result && (getDevicetype()
              == other.getDevicetype());
        }
        result = result && (hasRelayno() == other.hasRelayno());
        if (hasRelayno()) {
          result = result && (getRelayno()
              == other.getRelayno());
        }
        result = result && getValueList()
            .equals(other.getValueList());
        result = result && (hasTime() == other.hasTime());
        if (hasTime()) {
          result = result && getTime()
              .equals(other.getTime());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasChanno()) {
          hash = (37 * hash) + CHANNO_FIELD_NUMBER;
          hash = (53 * hash) + getChanno();
        }
        if (hasDeviceid()) {
          hash = (37 * hash) + DEVICEID_FIELD_NUMBER;
          hash = (53 * hash) + getDeviceid();
        }
        if (hasDevicetype()) {
          hash = (37 * hash) + DEVICETYPE_FIELD_NUMBER;
          hash = (53 * hash) + getDevicetype();
        }
        if (hasRelayno()) {
          hash = (37 * hash) + RELAYNO_FIELD_NUMBER;
          hash = (53 * hash) + getRelayno();
        }
        if (getValueCount() > 0) {
          hash = (37 * hash) + VALUE_FIELD_NUMBER;
          hash = (53 * hash) + getValueList().hashCode();
        }
        if (hasTime()) {
          hash = (37 * hash) + TIME_FIELD_NUMBER;
          hash = (53 * hash) + getTime().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static DBInfo parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static DBInfo parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static DBInfo parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static DBInfo parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static DBInfo parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static DBInfo parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static DBInfo parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static DBInfo parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static DBInfo parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static DBInfo parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static DBInfo parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static DBInfo parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(DBInfo prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @Override
      protected Builder newBuilderForType(
          BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code demo.protobuf.CmdRES.DBInfo}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:demo.protobuf.CmdRES.DBInfo)
          DBInfoOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return XhRtu.internal_static_demo_protobuf_CmdRES_DBInfo_descriptor;
        }

        protected FieldAccessorTable
            internalGetFieldAccessorTable() {
          return XhRtu.internal_static_demo_protobuf_CmdRES_DBInfo_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  DBInfo.class, Builder.class);
        }

        // Construct using demo.protobuf.XhRtu.CmdRES.DBInfo.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          channo_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          deviceid_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          devicetype_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          relayno_ = 0;
          bitField0_ = (bitField0_ & ~0x00000008);
          value_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          time_ = "";
          bitField0_ = (bitField0_ & ~0x00000020);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return XhRtu.internal_static_demo_protobuf_CmdRES_DBInfo_descriptor;
        }

        public DBInfo getDefaultInstanceForType() {
          return DBInfo.getDefaultInstance();
        }

        public DBInfo build() {
          DBInfo result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public DBInfo buildPartial() {
          DBInfo result = new DBInfo(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.channo_ = channo_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.deviceid_ = deviceid_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.devicetype_ = devicetype_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.relayno_ = relayno_;
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            value_ = java.util.Collections.unmodifiableList(value_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.value_ = value_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000010;
          }
          result.time_ = time_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof DBInfo) {
            return mergeFrom((DBInfo)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(DBInfo other) {
          if (other == DBInfo.getDefaultInstance()) return this;
          if (other.hasChanno()) {
            setChanno(other.getChanno());
          }
          if (other.hasDeviceid()) {
            setDeviceid(other.getDeviceid());
          }
          if (other.hasDevicetype()) {
            setDevicetype(other.getDevicetype());
          }
          if (other.hasRelayno()) {
            setRelayno(other.getRelayno());
          }
          if (!other.value_.isEmpty()) {
            if (value_.isEmpty()) {
              value_ = other.value_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureValueIsMutable();
              value_.addAll(other.value_);
            }
            onChanged();
          }
          if (other.hasTime()) {
            bitField0_ |= 0x00000020;
            time_ = other.time_;
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          if (!hasChanno()) {
            return false;
          }
          if (!hasDeviceid()) {
            return false;
          }
          if (!hasDevicetype()) {
            return false;
          }
          if (!hasRelayno()) {
            return false;
          }
          if (!hasTime()) {
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          DBInfo parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (DBInfo) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int channo_ ;
        /**
         * <pre>
         *通道号 		485通道[1:12] 	模拟输入通道[1:8] 		数字输入通道[255]
         * </pre>
         *
         * <code>required uint32 channo = 1;</code>
         */
        public boolean hasChanno() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <pre>
         *通道号 		485通道[1:12] 	模拟输入通道[1:8] 		数字输入通道[255]
         * </pre>
         *
         * <code>required uint32 channo = 1;</code>
         */
        public int getChanno() {
          return channo_;
        }
        /**
         * <pre>
         *通道号 		485通道[1:12] 	模拟输入通道[1:8] 		数字输入通道[255]
         * </pre>
         *
         * <code>required uint32 channo = 1;</code>
         */
        public Builder setChanno(int value) {
          bitField0_ |= 0x00000001;
          channo_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *通道号 		485通道[1:12] 	模拟输入通道[1:8] 		数字输入通道[255]
         * </pre>
         *
         * <code>required uint32 channo = 1;</code>
         */
        public Builder clearChanno() {
          bitField0_ = (bitField0_ & ~0x00000001);
          channo_ = 0;
          onChanged();
          return this;
        }

        private int deviceid_ ;
        /**
         * <pre>
         *设备id 		485地址[1:200] 	模拟输入地址[247:254]	数字输入地址[255]
         * </pre>
         *
         * <code>required uint32 deviceid = 2;</code>
         */
        public boolean hasDeviceid() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <pre>
         *设备id 		485地址[1:200] 	模拟输入地址[247:254]	数字输入地址[255]
         * </pre>
         *
         * <code>required uint32 deviceid = 2;</code>
         */
        public int getDeviceid() {
          return deviceid_;
        }
        /**
         * <pre>
         *设备id 		485地址[1:200] 	模拟输入地址[247:254]	数字输入地址[255]
         * </pre>
         *
         * <code>required uint32 deviceid = 2;</code>
         */
        public Builder setDeviceid(int value) {
          bitField0_ |= 0x00000002;
          deviceid_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *设备id 		485地址[1:200] 	模拟输入地址[247:254]	数字输入地址[255]
         * </pre>
         *
         * <code>required uint32 deviceid = 2;</code>
         */
        public Builder clearDeviceid() {
          bitField0_ = (bitField0_ & ~0x00000002);
          deviceid_ = 0;
          onChanged();
          return this;
        }

        private int devicetype_ ;
        /**
         * <pre>
         *设备类型		[0:ETCR2900接触式  1:ETCR2800B非接触式  2:LCT-100 雷电流 3:RSWS01 温度传感器 4:MEMS静电传感器 5:SVT626T输出型双轴倾角传感 6:HC-33BZ综合监控模块 253:模拟输入电流型 254:模拟输入电压型 255:数字输入]
         * </pre>
         *
         * <code>required uint32 devicetype = 3;</code>
         */
        public boolean hasDevicetype() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <pre>
         *设备类型		[0:ETCR2900接触式  1:ETCR2800B非接触式  2:LCT-100 雷电流 3:RSWS01 温度传感器 4:MEMS静电传感器 5:SVT626T输出型双轴倾角传感 6:HC-33BZ综合监控模块 253:模拟输入电流型 254:模拟输入电压型 255:数字输入]
         * </pre>
         *
         * <code>required uint32 devicetype = 3;</code>
         */
        public int getDevicetype() {
          return devicetype_;
        }
        /**
         * <pre>
         *设备类型		[0:ETCR2900接触式  1:ETCR2800B非接触式  2:LCT-100 雷电流 3:RSWS01 温度传感器 4:MEMS静电传感器 5:SVT626T输出型双轴倾角传感 6:HC-33BZ综合监控模块 253:模拟输入电流型 254:模拟输入电压型 255:数字输入]
         * </pre>
         *
         * <code>required uint32 devicetype = 3;</code>
         */
        public Builder setDevicetype(int value) {
          bitField0_ |= 0x00000004;
          devicetype_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *设备类型		[0:ETCR2900接触式  1:ETCR2800B非接触式  2:LCT-100 雷电流 3:RSWS01 温度传感器 4:MEMS静电传感器 5:SVT626T输出型双轴倾角传感 6:HC-33BZ综合监控模块 253:模拟输入电流型 254:模拟输入电压型 255:数字输入]
         * </pre>
         *
         * <code>required uint32 devicetype = 3;</code>
         */
        public Builder clearDevicetype() {
          bitField0_ = (bitField0_ & ~0x00000004);
          devicetype_ = 0;
          onChanged();
          return this;
        }

        private int relayno_ ;
        /**
         * <pre>
         *继电器通道号	范围[1:4] 0-表示不启用继电器
         * </pre>
         *
         * <code>required uint32 relayno = 4;</code>
         */
        public boolean hasRelayno() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <pre>
         *继电器通道号	范围[1:4] 0-表示不启用继电器
         * </pre>
         *
         * <code>required uint32 relayno = 4;</code>
         */
        public int getRelayno() {
          return relayno_;
        }
        /**
         * <pre>
         *继电器通道号	范围[1:4] 0-表示不启用继电器
         * </pre>
         *
         * <code>required uint32 relayno = 4;</code>
         */
        public Builder setRelayno(int value) {
          bitField0_ |= 0x00000008;
          relayno_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *继电器通道号	范围[1:4] 0-表示不启用继电器
         * </pre>
         *
         * <code>required uint32 relayno = 4;</code>
         */
        public Builder clearRelayno() {
          bitField0_ = (bitField0_ & ~0x00000008);
          relayno_ = 0;
          onChanged();
          return this;
        }

        private java.util.List<Double> value_ = java.util.Collections.emptyList();
        private void ensureValueIsMutable() {
          if (!((bitField0_ & 0x00000010) == 0x00000010)) {
            value_ = new java.util.ArrayList<Double>(value_);
            bitField0_ |= 0x00000010;
           }
        }
        /**
         * <pre>
         *required double		value1		= 5;		//数值1
         *required double		value2		= 6;		//数值2
         * </pre>
         *
         * <code>repeated double value = 5;</code>
         */
        public java.util.List<Double>
            getValueList() {
          return java.util.Collections.unmodifiableList(value_);
        }
        /**
         * <pre>
         *required double		value1		= 5;		//数值1
         *required double		value2		= 6;		//数值2
         * </pre>
         *
         * <code>repeated double value = 5;</code>
         */
        public int getValueCount() {
          return value_.size();
        }
        /**
         * <pre>
         *required double		value1		= 5;		//数值1
         *required double		value2		= 6;		//数值2
         * </pre>
         *
         * <code>repeated double value = 5;</code>
         */
        public double getValue(int index) {
          return value_.get(index);
        }
        /**
         * <pre>
         *required double		value1		= 5;		//数值1
         *required double		value2		= 6;		//数值2
         * </pre>
         *
         * <code>repeated double value = 5;</code>
         */
        public Builder setValue(
            int index, double value) {
          ensureValueIsMutable();
          value_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         *required double		value1		= 5;		//数值1
         *required double		value2		= 6;		//数值2
         * </pre>
         *
         * <code>repeated double value = 5;</code>
         */
        public Builder addValue(double value) {
          ensureValueIsMutable();
          value_.add(value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         *required double		value1		= 5;		//数值1
         *required double		value2		= 6;		//数值2
         * </pre>
         *
         * <code>repeated double value = 5;</code>
         */
        public Builder addAllValue(
            Iterable<? extends Double> values) {
          ensureValueIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, value_);
          onChanged();
          return this;
        }
        /**
         * <pre>
         *required double		value1		= 5;		//数值1
         *required double		value2		= 6;		//数值2
         * </pre>
         *
         * <code>repeated double value = 5;</code>
         */
        public Builder clearValue() {
          value_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
          return this;
        }

        private Object time_ = "";
        /**
         * <pre>
         *时间 			[格式:2018-01-02 11:10:50.000]
         * </pre>
         *
         * <code>required string time = 6;</code>
         */
        public boolean hasTime() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <pre>
         *时间 			[格式:2018-01-02 11:10:50.000]
         * </pre>
         *
         * <code>required string time = 6;</code>
         */
        public String getTime() {
          Object ref = time_;
          if (!(ref instanceof String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              time_ = s;
            }
            return s;
          } else {
            return (String) ref;
          }
        }
        /**
         * <pre>
         *时间 			[格式:2018-01-02 11:10:50.000]
         * </pre>
         *
         * <code>required string time = 6;</code>
         */
        public com.google.protobuf.ByteString
            getTimeBytes() {
          Object ref = time_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (String) ref);
            time_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         *时间 			[格式:2018-01-02 11:10:50.000]
         * </pre>
         *
         * <code>required string time = 6;</code>
         */
        public Builder setTime(
            String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
          time_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *时间 			[格式:2018-01-02 11:10:50.000]
         * </pre>
         *
         * <code>required string time = 6;</code>
         */
        public Builder clearTime() {
          bitField0_ = (bitField0_ & ~0x00000020);
          time_ = getDefaultInstance().getTime();
          onChanged();
          return this;
        }
        /**
         * <pre>
         *时间 			[格式:2018-01-02 11:10:50.000]
         * </pre>
         *
         * <code>required string time = 6;</code>
         */
        public Builder setTimeBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
          time_ = value;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:demo.protobuf.CmdRES.DBInfo)
      }

      // @@protoc_insertion_point(class_scope:demo.protobuf.CmdRES.DBInfo)
      private static final DBInfo DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new DBInfo();
      }

      public static DBInfo getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @Deprecated public static final com.google.protobuf.Parser<DBInfo>
          PARSER = new com.google.protobuf.AbstractParser<DBInfo>() {
        public DBInfo parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new DBInfo(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<DBInfo> parser() {
        return PARSER;
      }

      @Override
      public com.google.protobuf.Parser<DBInfo> getParserForType() {
        return PARSER;
      }

      public DBInfo getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int RTUID_FIELD_NUMBER = 1;
    private int rtuid_;
    /**
     * <pre>
     *RTU ID
     * </pre>
     *
     * <code>required uint32 rtuid = 1;</code>
     */
    public boolean hasRtuid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *RTU ID
     * </pre>
     *
     * <code>required uint32 rtuid = 1;</code>
     */
    public int getRtuid() {
      return rtuid_;
    }

    public static final int CONTENT_FIELD_NUMBER = 2;
    private java.util.List<DBInfo> content_;
    /**
     * <pre>
     *返回数据[可重复]
     * </pre>
     *
     * <code>repeated .demo.protobuf.CmdRES.DBInfo content = 2;</code>
     */
    public java.util.List<DBInfo> getContentList() {
      return content_;
    }
    /**
     * <pre>
     *返回数据[可重复]
     * </pre>
     *
     * <code>repeated .demo.protobuf.CmdRES.DBInfo content = 2;</code>
     */
    public java.util.List<? extends DBInfoOrBuilder>
        getContentOrBuilderList() {
      return content_;
    }
    /**
     * <pre>
     *返回数据[可重复]
     * </pre>
     *
     * <code>repeated .demo.protobuf.CmdRES.DBInfo content = 2;</code>
     */
    public int getContentCount() {
      return content_.size();
    }
    /**
     * <pre>
     *返回数据[可重复]
     * </pre>
     *
     * <code>repeated .demo.protobuf.CmdRES.DBInfo content = 2;</code>
     */
    public DBInfo getContent(int index) {
      return content_.get(index);
    }
    /**
     * <pre>
     *返回数据[可重复]
     * </pre>
     *
     * <code>repeated .demo.protobuf.CmdRES.DBInfo content = 2;</code>
     */
    public DBInfoOrBuilder getContentOrBuilder(
        int index) {
      return content_.get(index);
    }

    public static final int ISIMMEDCMD_FIELD_NUMBER = 3;
    private int isimmedcmd_;
    /**
     * <pre>
     *0-常规上报  1-立即查询数据返回
     * </pre>
     *
     * <code>optional uint32 isimmedcmd = 3;</code>
     */
    public boolean hasIsimmedcmd() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     *0-常规上报  1-立即查询数据返回
     * </pre>
     *
     * <code>optional uint32 isimmedcmd = 3;</code>
     */
    public int getIsimmedcmd() {
      return isimmedcmd_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasRtuid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getContentCount(); i++) {
        if (!getContent(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, rtuid_);
      }
      for (int i = 0; i < content_.size(); i++) {
        output.writeMessage(2, content_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(3, isimmedcmd_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, rtuid_);
      }
      for (int i = 0; i < content_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, content_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, isimmedcmd_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof CmdRES)) {
        return super.equals(obj);
      }
      CmdRES other = (CmdRES) obj;

      boolean result = true;
      result = result && (hasRtuid() == other.hasRtuid());
      if (hasRtuid()) {
        result = result && (getRtuid()
            == other.getRtuid());
      }
      result = result && getContentList()
          .equals(other.getContentList());
      result = result && (hasIsimmedcmd() == other.hasIsimmedcmd());
      if (hasIsimmedcmd()) {
        result = result && (getIsimmedcmd()
            == other.getIsimmedcmd());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasRtuid()) {
        hash = (37 * hash) + RTUID_FIELD_NUMBER;
        hash = (53 * hash) + getRtuid();
      }
      if (getContentCount() > 0) {
        hash = (37 * hash) + CONTENT_FIELD_NUMBER;
        hash = (53 * hash) + getContentList().hashCode();
      }
      if (hasIsimmedcmd()) {
        hash = (37 * hash) + ISIMMEDCMD_FIELD_NUMBER;
        hash = (53 * hash) + getIsimmedcmd();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static CmdRES parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CmdRES parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CmdRES parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CmdRES parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CmdRES parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CmdRES parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CmdRES parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static CmdRES parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static CmdRES parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static CmdRES parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static CmdRES parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static CmdRES parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(CmdRES prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *数据返回[RTU到中心]
     *RTU以下三种情况返回此数据类型：
     *1.连接中心成功后,RTU自动上报断网未同步数据
     *2.连接中心成功后,RTU自动上报定时查询返回数据(此时RTU将本地数设为已同步)
     *3.中心主动发送立即查询命令返回值
     * </pre>
     *
     * Protobuf type {@code demo.protobuf.CmdRES}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:demo.protobuf.CmdRES)
        CmdRESOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return XhRtu.internal_static_demo_protobuf_CmdRES_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return XhRtu.internal_static_demo_protobuf_CmdRES_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                CmdRES.class, Builder.class);
      }

      // Construct using demo.protobuf.XhRtu.CmdRES.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getContentFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        rtuid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (contentBuilder_ == null) {
          content_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          contentBuilder_.clear();
        }
        isimmedcmd_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return XhRtu.internal_static_demo_protobuf_CmdRES_descriptor;
      }

      public CmdRES getDefaultInstanceForType() {
        return CmdRES.getDefaultInstance();
      }

      public CmdRES build() {
        CmdRES result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public CmdRES buildPartial() {
        CmdRES result = new CmdRES(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.rtuid_ = rtuid_;
        if (contentBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            content_ = java.util.Collections.unmodifiableList(content_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.content_ = content_;
        } else {
          result.content_ = contentBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.isimmedcmd_ = isimmedcmd_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof CmdRES) {
          return mergeFrom((CmdRES)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(CmdRES other) {
        if (other == CmdRES.getDefaultInstance()) return this;
        if (other.hasRtuid()) {
          setRtuid(other.getRtuid());
        }
        if (contentBuilder_ == null) {
          if (!other.content_.isEmpty()) {
            if (content_.isEmpty()) {
              content_ = other.content_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureContentIsMutable();
              content_.addAll(other.content_);
            }
            onChanged();
          }
        } else {
          if (!other.content_.isEmpty()) {
            if (contentBuilder_.isEmpty()) {
              contentBuilder_.dispose();
              contentBuilder_ = null;
              content_ = other.content_;
              bitField0_ = (bitField0_ & ~0x00000002);
              contentBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getContentFieldBuilder() : null;
            } else {
              contentBuilder_.addAllMessages(other.content_);
            }
          }
        }
        if (other.hasIsimmedcmd()) {
          setIsimmedcmd(other.getIsimmedcmd());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRtuid()) {
          return false;
        }
        for (int i = 0; i < getContentCount(); i++) {
          if (!getContent(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        CmdRES parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (CmdRES) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int rtuid_ ;
      /**
       * <pre>
       *RTU ID
       * </pre>
       *
       * <code>required uint32 rtuid = 1;</code>
       */
      public boolean hasRtuid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       *RTU ID
       * </pre>
       *
       * <code>required uint32 rtuid = 1;</code>
       */
      public int getRtuid() {
        return rtuid_;
      }
      /**
       * <pre>
       *RTU ID
       * </pre>
       *
       * <code>required uint32 rtuid = 1;</code>
       */
      public Builder setRtuid(int value) {
        bitField0_ |= 0x00000001;
        rtuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *RTU ID
       * </pre>
       *
       * <code>required uint32 rtuid = 1;</code>
       */
      public Builder clearRtuid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        rtuid_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<DBInfo> content_ =
        java.util.Collections.emptyList();
      private void ensureContentIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          content_ = new java.util.ArrayList<DBInfo>(content_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          DBInfo, DBInfo.Builder, DBInfoOrBuilder> contentBuilder_;

      /**
       * <pre>
       *返回数据[可重复]
       * </pre>
       *
       * <code>repeated .demo.protobuf.CmdRES.DBInfo content = 2;</code>
       */
      public java.util.List<DBInfo> getContentList() {
        if (contentBuilder_ == null) {
          return java.util.Collections.unmodifiableList(content_);
        } else {
          return contentBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       *返回数据[可重复]
       * </pre>
       *
       * <code>repeated .demo.protobuf.CmdRES.DBInfo content = 2;</code>
       */
      public int getContentCount() {
        if (contentBuilder_ == null) {
          return content_.size();
        } else {
          return contentBuilder_.getCount();
        }
      }
      /**
       * <pre>
       *返回数据[可重复]
       * </pre>
       *
       * <code>repeated .demo.protobuf.CmdRES.DBInfo content = 2;</code>
       */
      public DBInfo getContent(int index) {
        if (contentBuilder_ == null) {
          return content_.get(index);
        } else {
          return contentBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       *返回数据[可重复]
       * </pre>
       *
       * <code>repeated .demo.protobuf.CmdRES.DBInfo content = 2;</code>
       */
      public Builder setContent(
          int index, DBInfo value) {
        if (contentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureContentIsMutable();
          content_.set(index, value);
          onChanged();
        } else {
          contentBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *返回数据[可重复]
       * </pre>
       *
       * <code>repeated .demo.protobuf.CmdRES.DBInfo content = 2;</code>
       */
      public Builder setContent(
          int index, DBInfo.Builder builderForValue) {
        if (contentBuilder_ == null) {
          ensureContentIsMutable();
          content_.set(index, builderForValue.build());
          onChanged();
        } else {
          contentBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *返回数据[可重复]
       * </pre>
       *
       * <code>repeated .demo.protobuf.CmdRES.DBInfo content = 2;</code>
       */
      public Builder addContent(DBInfo value) {
        if (contentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureContentIsMutable();
          content_.add(value);
          onChanged();
        } else {
          contentBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       *返回数据[可重复]
       * </pre>
       *
       * <code>repeated .demo.protobuf.CmdRES.DBInfo content = 2;</code>
       */
      public Builder addContent(
          int index, DBInfo value) {
        if (contentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureContentIsMutable();
          content_.add(index, value);
          onChanged();
        } else {
          contentBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       *返回数据[可重复]
       * </pre>
       *
       * <code>repeated .demo.protobuf.CmdRES.DBInfo content = 2;</code>
       */
      public Builder addContent(
          DBInfo.Builder builderForValue) {
        if (contentBuilder_ == null) {
          ensureContentIsMutable();
          content_.add(builderForValue.build());
          onChanged();
        } else {
          contentBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *返回数据[可重复]
       * </pre>
       *
       * <code>repeated .demo.protobuf.CmdRES.DBInfo content = 2;</code>
       */
      public Builder addContent(
          int index, DBInfo.Builder builderForValue) {
        if (contentBuilder_ == null) {
          ensureContentIsMutable();
          content_.add(index, builderForValue.build());
          onChanged();
        } else {
          contentBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       *返回数据[可重复]
       * </pre>
       *
       * <code>repeated .demo.protobuf.CmdRES.DBInfo content = 2;</code>
       */
      public Builder addAllContent(
          Iterable<? extends DBInfo> values) {
        if (contentBuilder_ == null) {
          ensureContentIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, content_);
          onChanged();
        } else {
          contentBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       *返回数据[可重复]
       * </pre>
       *
       * <code>repeated .demo.protobuf.CmdRES.DBInfo content = 2;</code>
       */
      public Builder clearContent() {
        if (contentBuilder_ == null) {
          content_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          contentBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       *返回数据[可重复]
       * </pre>
       *
       * <code>repeated .demo.protobuf.CmdRES.DBInfo content = 2;</code>
       */
      public Builder removeContent(int index) {
        if (contentBuilder_ == null) {
          ensureContentIsMutable();
          content_.remove(index);
          onChanged();
        } else {
          contentBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       *返回数据[可重复]
       * </pre>
       *
       * <code>repeated .demo.protobuf.CmdRES.DBInfo content = 2;</code>
       */
      public DBInfo.Builder getContentBuilder(
          int index) {
        return getContentFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       *返回数据[可重复]
       * </pre>
       *
       * <code>repeated .demo.protobuf.CmdRES.DBInfo content = 2;</code>
       */
      public DBInfoOrBuilder getContentOrBuilder(
          int index) {
        if (contentBuilder_ == null) {
          return content_.get(index);  } else {
          return contentBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       *返回数据[可重复]
       * </pre>
       *
       * <code>repeated .demo.protobuf.CmdRES.DBInfo content = 2;</code>
       */
      public java.util.List<? extends DBInfoOrBuilder>
           getContentOrBuilderList() {
        if (contentBuilder_ != null) {
          return contentBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(content_);
        }
      }
      /**
       * <pre>
       *返回数据[可重复]
       * </pre>
       *
       * <code>repeated .demo.protobuf.CmdRES.DBInfo content = 2;</code>
       */
      public DBInfo.Builder addContentBuilder() {
        return getContentFieldBuilder().addBuilder(
            DBInfo.getDefaultInstance());
      }
      /**
       * <pre>
       *返回数据[可重复]
       * </pre>
       *
       * <code>repeated .demo.protobuf.CmdRES.DBInfo content = 2;</code>
       */
      public DBInfo.Builder addContentBuilder(
          int index) {
        return getContentFieldBuilder().addBuilder(
            index, DBInfo.getDefaultInstance());
      }
      /**
       * <pre>
       *返回数据[可重复]
       * </pre>
       *
       * <code>repeated .demo.protobuf.CmdRES.DBInfo content = 2;</code>
       */
      public java.util.List<DBInfo.Builder>
           getContentBuilderList() {
        return getContentFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          DBInfo, DBInfo.Builder, DBInfoOrBuilder>
          getContentFieldBuilder() {
        if (contentBuilder_ == null) {
          contentBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              DBInfo, DBInfo.Builder, DBInfoOrBuilder>(
                  content_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          content_ = null;
        }
        return contentBuilder_;
      }

      private int isimmedcmd_ ;
      /**
       * <pre>
       *0-常规上报  1-立即查询数据返回
       * </pre>
       *
       * <code>optional uint32 isimmedcmd = 3;</code>
       */
      public boolean hasIsimmedcmd() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <pre>
       *0-常规上报  1-立即查询数据返回
       * </pre>
       *
       * <code>optional uint32 isimmedcmd = 3;</code>
       */
      public int getIsimmedcmd() {
        return isimmedcmd_;
      }
      /**
       * <pre>
       *0-常规上报  1-立即查询数据返回
       * </pre>
       *
       * <code>optional uint32 isimmedcmd = 3;</code>
       */
      public Builder setIsimmedcmd(int value) {
        bitField0_ |= 0x00000004;
        isimmedcmd_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *0-常规上报  1-立即查询数据返回
       * </pre>
       *
       * <code>optional uint32 isimmedcmd = 3;</code>
       */
      public Builder clearIsimmedcmd() {
        bitField0_ = (bitField0_ & ~0x00000004);
        isimmedcmd_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:demo.protobuf.CmdRES)
    }

    // @@protoc_insertion_point(class_scope:demo.protobuf.CmdRES)
    private static final CmdRES DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new CmdRES();
    }

    public static CmdRES getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @Deprecated public static final com.google.protobuf.Parser<CmdRES>
        PARSER = new com.google.protobuf.AbstractParser<CmdRES>() {
      public CmdRES parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CmdRES(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CmdRES> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<CmdRES> getParserForType() {
      return PARSER;
    }

    public CmdRES getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CmdACKOrBuilder extends
      // @@protoc_insertion_point(interface_extends:demo.protobuf.CmdACK)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     *RTU ID
     * </pre>
     *
     * <code>required uint32 rtuid = 1;</code>
     */
    boolean hasRtuid();
    /**
     * <pre>
     *RTU ID
     * </pre>
     *
     * <code>required uint32 rtuid = 1;</code>
     */
    int getRtuid();

    /**
     * <pre>
     *广播类型
     * </pre>
     *
     * <code>required .demo.protobuf.CmdACK.ACKTYPE ack = 2;</code>
     */
    boolean hasAck();
    /**
     * <pre>
     *广播类型
     * </pre>
     *
     * <code>required .demo.protobuf.CmdACK.ACKTYPE ack = 2;</code>
     */
    CmdACK.ACKTYPE getAck();
  }
  /**
   * <pre>
   *******以下命令仅在链路选择UDP时,作为超时重传Ack使用*********
   *Ack应答
   * </pre>
   *
   * Protobuf type {@code demo.protobuf.CmdACK}
   */
  public  static final class CmdACK extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:demo.protobuf.CmdACK)
      CmdACKOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CmdACK.newBuilder() to construct.
    private CmdACK(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CmdACK() {
      rtuid_ = 0;
      ack_ = 0;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CmdACK(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              rtuid_ = input.readUInt32();
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              ACKTYPE value = ACKTYPE.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                ack_ = rawValue;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return XhRtu.internal_static_demo_protobuf_CmdACK_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return XhRtu.internal_static_demo_protobuf_CmdACK_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              CmdACK.class, Builder.class);
    }

    /**
     * Protobuf enum {@code demo.protobuf.CmdACK.ACKTYPE}
     */
    public enum ACKTYPE
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       *错误命令格式
       * </pre>
       *
       * <code>ERROR = 0;</code>
       */
      ERROR(0),
      /**
       * <pre>
       *配置参数广播返回Ack[RTU到中心]
       * </pre>
       *
       * <code>OK_RTUConInfoRES = 300;</code>
       */
      OK_RTUConInfoRES(300),
      /**
       * <pre>
       *命令返回Ack[RTU到中心]
       * </pre>
       *
       * <code>OK_CmdREQ = 301;</code>
       */
      OK_CmdREQ(301),
      /**
       * <pre>
       *数据返回返回Ack[中心到RTU]
       * </pre>
       *
       * <code>OK_CmdRES = 302;</code>
       */
      OK_CmdRES(302),
      ;

      /**
       * <pre>
       *错误命令格式
       * </pre>
       *
       * <code>ERROR = 0;</code>
       */
      public static final int ERROR_VALUE = 0;
      /**
       * <pre>
       *配置参数广播返回Ack[RTU到中心]
       * </pre>
       *
       * <code>OK_RTUConInfoRES = 300;</code>
       */
      public static final int OK_RTUConInfoRES_VALUE = 300;
      /**
       * <pre>
       *命令返回Ack[RTU到中心]
       * </pre>
       *
       * <code>OK_CmdREQ = 301;</code>
       */
      public static final int OK_CmdREQ_VALUE = 301;
      /**
       * <pre>
       *数据返回返回Ack[中心到RTU]
       * </pre>
       *
       * <code>OK_CmdRES = 302;</code>
       */
      public static final int OK_CmdRES_VALUE = 302;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @Deprecated
      public static ACKTYPE valueOf(int value) {
        return forNumber(value);
      }

      public static ACKTYPE forNumber(int value) {
        switch (value) {
          case 0: return ERROR;
          case 300: return OK_RTUConInfoRES;
          case 301: return OK_CmdREQ;
          case 302: return OK_CmdRES;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ACKTYPE>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          ACKTYPE> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ACKTYPE>() {
              public ACKTYPE findValueByNumber(int number) {
                return ACKTYPE.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return CmdACK.getDescriptor().getEnumTypes().get(0);
      }

      private static final ACKTYPE[] VALUES = values();

      public static ACKTYPE valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private ACKTYPE(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:demo.protobuf.CmdACK.ACKTYPE)
    }

    private int bitField0_;
    public static final int RTUID_FIELD_NUMBER = 1;
    private int rtuid_;
    /**
     * <pre>
     *RTU ID
     * </pre>
     *
     * <code>required uint32 rtuid = 1;</code>
     */
    public boolean hasRtuid() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <pre>
     *RTU ID
     * </pre>
     *
     * <code>required uint32 rtuid = 1;</code>
     */
    public int getRtuid() {
      return rtuid_;
    }

    public static final int ACK_FIELD_NUMBER = 2;
    private int ack_;
    /**
     * <pre>
     *广播类型
     * </pre>
     *
     * <code>required .demo.protobuf.CmdACK.ACKTYPE ack = 2;</code>
     */
    public boolean hasAck() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <pre>
     *广播类型
     * </pre>
     *
     * <code>required .demo.protobuf.CmdACK.ACKTYPE ack = 2;</code>
     */
    public ACKTYPE getAck() {
      ACKTYPE result = ACKTYPE.valueOf(ack_);
      return result == null ? ACKTYPE.ERROR : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasRtuid()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAck()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, rtuid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, ack_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, rtuid_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, ack_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof CmdACK)) {
        return super.equals(obj);
      }
      CmdACK other = (CmdACK) obj;

      boolean result = true;
      result = result && (hasRtuid() == other.hasRtuid());
      if (hasRtuid()) {
        result = result && (getRtuid()
            == other.getRtuid());
      }
      result = result && (hasAck() == other.hasAck());
      if (hasAck()) {
        result = result && ack_ == other.ack_;
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasRtuid()) {
        hash = (37 * hash) + RTUID_FIELD_NUMBER;
        hash = (53 * hash) + getRtuid();
      }
      if (hasAck()) {
        hash = (37 * hash) + ACK_FIELD_NUMBER;
        hash = (53 * hash) + ack_;
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static CmdACK parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CmdACK parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CmdACK parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CmdACK parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CmdACK parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CmdACK parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CmdACK parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static CmdACK parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static CmdACK parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static CmdACK parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static CmdACK parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static CmdACK parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(CmdACK prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     *******以下命令仅在链路选择UDP时,作为超时重传Ack使用*********
     *Ack应答
     * </pre>
     *
     * Protobuf type {@code demo.protobuf.CmdACK}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:demo.protobuf.CmdACK)
        CmdACKOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return XhRtu.internal_static_demo_protobuf_CmdACK_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return XhRtu.internal_static_demo_protobuf_CmdACK_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                CmdACK.class, Builder.class);
      }

      // Construct using demo.protobuf.XhRtu.CmdACK.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        rtuid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        ack_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return XhRtu.internal_static_demo_protobuf_CmdACK_descriptor;
      }

      public CmdACK getDefaultInstanceForType() {
        return CmdACK.getDefaultInstance();
      }

      public CmdACK build() {
        CmdACK result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public CmdACK buildPartial() {
        CmdACK result = new CmdACK(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.rtuid_ = rtuid_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.ack_ = ack_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof CmdACK) {
          return mergeFrom((CmdACK)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(CmdACK other) {
        if (other == CmdACK.getDefaultInstance()) return this;
        if (other.hasRtuid()) {
          setRtuid(other.getRtuid());
        }
        if (other.hasAck()) {
          setAck(other.getAck());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        if (!hasRtuid()) {
          return false;
        }
        if (!hasAck()) {
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        CmdACK parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (CmdACK) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int rtuid_ ;
      /**
       * <pre>
       *RTU ID
       * </pre>
       *
       * <code>required uint32 rtuid = 1;</code>
       */
      public boolean hasRtuid() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <pre>
       *RTU ID
       * </pre>
       *
       * <code>required uint32 rtuid = 1;</code>
       */
      public int getRtuid() {
        return rtuid_;
      }
      /**
       * <pre>
       *RTU ID
       * </pre>
       *
       * <code>required uint32 rtuid = 1;</code>
       */
      public Builder setRtuid(int value) {
        bitField0_ |= 0x00000001;
        rtuid_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       *RTU ID
       * </pre>
       *
       * <code>required uint32 rtuid = 1;</code>
       */
      public Builder clearRtuid() {
        bitField0_ = (bitField0_ & ~0x00000001);
        rtuid_ = 0;
        onChanged();
        return this;
      }

      private int ack_ = 0;
      /**
       * <pre>
       *广播类型
       * </pre>
       *
       * <code>required .demo.protobuf.CmdACK.ACKTYPE ack = 2;</code>
       */
      public boolean hasAck() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <pre>
       *广播类型
       * </pre>
       *
       * <code>required .demo.protobuf.CmdACK.ACKTYPE ack = 2;</code>
       */
      public ACKTYPE getAck() {
        ACKTYPE result = ACKTYPE.valueOf(ack_);
        return result == null ? ACKTYPE.ERROR : result;
      }
      /**
       * <pre>
       *广播类型
       * </pre>
       *
       * <code>required .demo.protobuf.CmdACK.ACKTYPE ack = 2;</code>
       */
      public Builder setAck(ACKTYPE value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        ack_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       *广播类型
       * </pre>
       *
       * <code>required .demo.protobuf.CmdACK.ACKTYPE ack = 2;</code>
       */
      public Builder clearAck() {
        bitField0_ = (bitField0_ & ~0x00000002);
        ack_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:demo.protobuf.CmdACK)
    }

    // @@protoc_insertion_point(class_scope:demo.protobuf.CmdACK)
    private static final CmdACK DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new CmdACK();
    }

    public static CmdACK getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @Deprecated public static final com.google.protobuf.Parser<CmdACK>
        PARSER = new com.google.protobuf.AbstractParser<CmdACK>() {
      public CmdACK parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CmdACK(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CmdACK> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<CmdACK> getParserForType() {
      return PARSER;
    }

    public CmdACK getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_demo_protobuf_HeartBeatIN_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_demo_protobuf_HeartBeatIN_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_demo_protobuf_HeartBeatIN_RS485Status_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_demo_protobuf_HeartBeatIN_RS485Status_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_demo_protobuf_HeartBeatOUT_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_demo_protobuf_HeartBeatOUT_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_demo_protobuf_RTUConInfoRES_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_demo_protobuf_RTUConInfoRES_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_demo_protobuf_RTUConInfoRES_RS485Info_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_demo_protobuf_RTUConInfoRES_RS485Info_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_demo_protobuf_RTUConInfoRES_DAInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_demo_protobuf_RTUConInfoRES_DAInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_demo_protobuf_RTUConInfoRES_USERInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_demo_protobuf_RTUConInfoRES_USERInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_demo_protobuf_CmdREQ_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_demo_protobuf_CmdREQ_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_demo_protobuf_CmdREQ_ImmedInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_demo_protobuf_CmdREQ_ImmedInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_demo_protobuf_CmdRES_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_demo_protobuf_CmdRES_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_demo_protobuf_CmdRES_DBInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_demo_protobuf_CmdRES_DBInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_demo_protobuf_CmdACK_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_demo_protobuf_CmdACK_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\014xh_rtu.proto\022\rdemo.protobuf\"\220\001\n\013HeartB" +
      "eatIN\022\r\n\005rtuid\030\001 \002(\r\0222\n\002st\030\002 \003(\0132&.demo." +
      "protobuf.HeartBeatIN.RS485Status\032>\n\013RS48" +
      "5Status\022\016\n\006channo\030\001 \002(\r\022\020\n\010deviceid\030\002 \002(" +
      "\r\022\r\n\005stnum\030\003 \002(\r\"/\n\014HeartBeatOUT\022\r\n\005rtui" +
      "d\030\001 \002(\r\022\020\n\010datetime\030\002 \002(\t\"\231\005\n\rRTUConInfo" +
      "RES\022\r\n\005rtuid\030\001 \002(\r\0225\n\005rs485\030\002 \003(\0132&.demo" +
      ".protobuf.RTUConInfoRES.RS485Info\022/\n\002da\030" +
      "\003 \003(\0132#.demo.protobuf.RTUConInfoRES.DAIn" +
      "fo\022\022\n\ndipolltime\030\004 \001(\r\022\020\n\010maxdbrow\030\005 \001(\r" +
      "\0227\n\010userinfo\030\006 \001(\0132%.demo.protobuf.RTUCo" +
      "nInfoRES.USERInfo\032\230\001\n\tRS485Info\022\016\n\006chann" +
      "o\030\001 \002(\r\022\020\n\010deviceid\030\002 \002(\t\022\022\n\ndevicetype\030" +
      "\003 \002(\r\022\020\n\010baudrate\030\004 \002(\r\022\020\n\010polltime\030\005 \002(" +
      "\r\022\023\n\013muxinterval\030\006 \002(\r\022\020\n\010calvalue\030\007 \002(\001" +
      "\022\n\n\002op\030\010 \002(\r\032|\n\006DAInfo\022\016\n\006channo\030\001 \002(\r\022\022" +
      "\n\ndevicetype\030\002 \002(\r\022\020\n\010polltime\030\003 \002(\r\022\013\n\003" +
      "dop\030\004 \002(\001\022\021\n\tfullscale\030\005 \002(\001\022\020\n\010calvalue" +
      "\030\006 \002(\001\022\n\n\002op\030\007 \002(\r\032\230\001\n\010USERInfo\022\n\n\002id\030\001 " +
      "\002(\r\022\020\n\010centerip\030\002 \002(\t\022\022\n\ncenterport\030\003 \002(" +
      "\r\022\020\n\010workmode\030\004 \002(\r\022\017\n\007localip\030\005 \002(\t\022\024\n\014" +
      "localnetmask\030\006 \002(\t\022\017\n\007localgw\030\007 \002(\t\022\020\n\010i" +
      "sreboot\030\010 \002(\r\"y\n\006CmdREQ\022\r\n\005rtuid\030\001 \002(\r\0221" +
      "\n\010cmdimmed\030\002 \001(\0132\037.demo.protobuf.CmdREQ." +
      "ImmedInfo\032-\n\tImmedInfo\022\016\n\006ttys_n\030\001 \002(\r\022\020" +
      "\n\010deviceid\030\002 \002(\r\"\310\001\n\006CmdRES\022\r\n\005rtuid\030\001 \002" +
      "(\r\022-\n\007content\030\002 \003(\0132\034.demo.protobuf.CmdR" +
      "ES.DBInfo\022\022\n\nisimmedcmd\030\003 \001(\r\032l\n\006DBInfo\022" +
      "\016\n\006channo\030\001 \002(\r\022\020\n\010deviceid\030\002 \002(\r\022\022\n\ndev" +
      "icetype\030\003 \002(\r\022\017\n\007relayno\030\004 \002(\r\022\r\n\005value\030" +
      "\005 \003(\001\022\014\n\004time\030\006 \002(\t\"\220\001\n\006CmdACK\022\r\n\005rtuid\030" +
      "\001 \002(\r\022*\n\003ack\030\002 \002(\0162\035.demo.protobuf.CmdAC" +
      "K.ACKTYPE\"K\n\007ACKTYPE\022\t\n\005ERROR\020\000\022\025\n\020OK_RT" +
      "UConInfoRES\020\254\002\022\016\n\tOK_CmdREQ\020\255\002\022\016\n\tOK_Cmd" +
      "RES\020\256\002"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_demo_protobuf_HeartBeatIN_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_demo_protobuf_HeartBeatIN_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_demo_protobuf_HeartBeatIN_descriptor,
        new String[] { "Rtuid", "St", });
    internal_static_demo_protobuf_HeartBeatIN_RS485Status_descriptor =
      internal_static_demo_protobuf_HeartBeatIN_descriptor.getNestedTypes().get(0);
    internal_static_demo_protobuf_HeartBeatIN_RS485Status_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_demo_protobuf_HeartBeatIN_RS485Status_descriptor,
        new String[] { "Channo", "Deviceid", "Stnum", });
    internal_static_demo_protobuf_HeartBeatOUT_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_demo_protobuf_HeartBeatOUT_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_demo_protobuf_HeartBeatOUT_descriptor,
        new String[] { "Rtuid", "Datetime", });
    internal_static_demo_protobuf_RTUConInfoRES_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_demo_protobuf_RTUConInfoRES_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_demo_protobuf_RTUConInfoRES_descriptor,
        new String[] { "Rtuid", "Rs485", "Da", "Dipolltime", "Maxdbrow", "Userinfo", });
    internal_static_demo_protobuf_RTUConInfoRES_RS485Info_descriptor =
      internal_static_demo_protobuf_RTUConInfoRES_descriptor.getNestedTypes().get(0);
    internal_static_demo_protobuf_RTUConInfoRES_RS485Info_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_demo_protobuf_RTUConInfoRES_RS485Info_descriptor,
        new String[] { "Channo", "Deviceid", "Devicetype", "Baudrate", "Polltime", "Muxinterval", "Calvalue", "Op", });
    internal_static_demo_protobuf_RTUConInfoRES_DAInfo_descriptor =
      internal_static_demo_protobuf_RTUConInfoRES_descriptor.getNestedTypes().get(1);
    internal_static_demo_protobuf_RTUConInfoRES_DAInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_demo_protobuf_RTUConInfoRES_DAInfo_descriptor,
        new String[] { "Channo", "Devicetype", "Polltime", "Dop", "Fullscale", "Calvalue", "Op", });
    internal_static_demo_protobuf_RTUConInfoRES_USERInfo_descriptor =
      internal_static_demo_protobuf_RTUConInfoRES_descriptor.getNestedTypes().get(2);
    internal_static_demo_protobuf_RTUConInfoRES_USERInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_demo_protobuf_RTUConInfoRES_USERInfo_descriptor,
        new String[] { "Id", "Centerip", "Centerport", "Workmode", "Localip", "Localnetmask", "Localgw", "Isreboot", });
    internal_static_demo_protobuf_CmdREQ_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_demo_protobuf_CmdREQ_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_demo_protobuf_CmdREQ_descriptor,
        new String[] { "Rtuid", "Cmdimmed", });
    internal_static_demo_protobuf_CmdREQ_ImmedInfo_descriptor =
      internal_static_demo_protobuf_CmdREQ_descriptor.getNestedTypes().get(0);
    internal_static_demo_protobuf_CmdREQ_ImmedInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_demo_protobuf_CmdREQ_ImmedInfo_descriptor,
        new String[] { "TtysN", "Deviceid", });
    internal_static_demo_protobuf_CmdRES_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_demo_protobuf_CmdRES_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_demo_protobuf_CmdRES_descriptor,
        new String[] { "Rtuid", "Content", "Isimmedcmd", });
    internal_static_demo_protobuf_CmdRES_DBInfo_descriptor =
      internal_static_demo_protobuf_CmdRES_descriptor.getNestedTypes().get(0);
    internal_static_demo_protobuf_CmdRES_DBInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_demo_protobuf_CmdRES_DBInfo_descriptor,
        new String[] { "Channo", "Deviceid", "Devicetype", "Relayno", "Value", "Time", });
    internal_static_demo_protobuf_CmdACK_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_demo_protobuf_CmdACK_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_demo_protobuf_CmdACK_descriptor,
        new String[] { "Rtuid", "Ack", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
